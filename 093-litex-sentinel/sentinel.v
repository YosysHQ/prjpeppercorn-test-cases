/* Generated by Yosys 0.53+0 (git sha1 20921ad90, clang++ 19.1.7 -fPIC -O3) */

(* top =  1  *)
(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:222" *)
(* generator = "Amaranth" *)
module sentinel_cpu(bus__ack, irq, clk, rst, bus__adr, bus__dat_w, bus__sel, bus__cyc, bus__stb, bus__we, bus__dat_r);
  reg \$auto$verilog_backend.cc:2355:dump_module$1  = 0;
  wire \$1 ;
  wire \$2 ;
  reg [31:0] \$3 ;
  reg [31:0] \$4 ;
  reg \$5 ;
  wire [34:0] \$6 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire [31:0] a;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:35" *)
  wire [31:0] alu;
  (* enum_base_type = "ALUIMod" *)
  (* enum_value_0 = "NONE" *)
  (* enum_value_1 = "INV_MSB_A_B" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:237" *)
  wire alu__ctrl__imod;
  (* enum_base_type = "ALUOMod" *)
  (* enum_value_00 = "NONE" *)
  (* enum_value_01 = "INV_LSB_O" *)
  (* enum_value_10 = "CLEAR_LSB_O" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:238" *)
  wire [1:0] alu__ctrl__omod;
  (* enum_base_type = "OpType" *)
  (* enum_value_0000 = "ADD" *)
  (* enum_value_0001 = "SUB" *)
  (* enum_value_0010 = "AND" *)
  (* enum_value_0011 = "OR" *)
  (* enum_value_0100 = "XOR" *)
  (* enum_value_0101 = "SLL" *)
  (* enum_value_0110 = "SRL" *)
  (* enum_value_0111 = "SRA" *)
  (* enum_value_1000 = "CMP_LTU" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:236" *)
  wire [3:0] alu__ctrl__op;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:239" *)
  wire alu__ctrl__zero;
  (* enum_base_type = "ASrc" *)
  (* enum_value_000 = "GP" *)
  (* enum_value_001 = "IMM" *)
  (* enum_value_010 = "ALU_O" *)
  (* enum_value_011 = "ZERO" *)
  (* enum_value_100 = "FOUR" *)
  (* enum_value_101 = "NEG_ONE" *)
  (* enum_value_110 = "THIRTY_ONE" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:288" *)
  wire [2:0] alu__route__a_src;
  (* enum_base_type = "BSrc" *)
  (* enum_value_000 = "GP" *)
  (* enum_value_001 = "PC" *)
  (* enum_value_010 = "IMM" *)
  (* enum_value_011 = "ONE" *)
  (* enum_value_100 = "DAT_R" *)
  (* enum_value_101 = "CSR_IMM" *)
  (* enum_value_110 = "CSR" *)
  (* enum_value_111 = "MCAUSE_LATCH" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:289" *)
  wire [2:0] alu__route__b_src;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:290" *)
  wire alu__route__latch_a;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:291" *)
  wire alu__route__latch_b;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire [31:0] b;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:466" *)
  input bus__ack;
  wire bus__ack;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:61" *)
  output [29:0] bus__adr;
  wire [29:0] bus__adr;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth_soc/wishbone/bus.py:122" *)
  output bus__cyc;
  wire bus__cyc;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  input [31:0] bus__dat_r;
  wire [31:0] bus__dat_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:237" *)
  output [31:0] bus__dat_w;
  reg [31:0] bus__dat_w = 32'd0;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:65" *)
  output [3:0] bus__sel;
  wire [3:0] bus__sel;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth_soc/wishbone/bus.py:123" *)
  output bus__stb;
  wire bus__stb;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:467" *)
  output bus__we;
  wire bus__we;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:126" *)
  wire [31:0] csr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:646" *)
  reg [4:0] csr__adr;
  (* enum_base_type = "ExceptCtl" *)
  (* enum_value_000 = "NONE" *)
  (* enum_value_001 = "LATCH_DECODER" *)
  (* enum_value_010 = "LATCH_JAL" *)
  (* enum_value_011 = "LATCH_STORE_ADR" *)
  (* enum_value_100 = "LATCH_LOAD_ADR" *)
  (* enum_value_101 = "ENTER_INT" *)
  (* enum_value_110 = "LEAVE_INT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:531" *)
  wire [2:0] csr__ctrl__exception;
  (* enum_base_type = "ExceptCtl" *)
  (* enum_value_000 = "NONE" *)
  (* enum_value_001 = "LATCH_DECODER" *)
  (* enum_value_010 = "LATCH_JAL" *)
  (* enum_value_011 = "LATCH_STORE_ADR" *)
  (* enum_value_100 = "LATCH_LOAD_ADR" *)
  (* enum_value_101 = "ENTER_INT" *)
  (* enum_value_110 = "LEAVE_INT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:531" *)
  wire [2:0] \csr__ctrl__exception$80 ;
  (* enum_base_type = "CSROp" *)
  (* enum_value_00 = "NONE" *)
  (* enum_value_01 = "READ_CSR" *)
  (* enum_value_10 = "WRITE_CSR" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:530" *)
  wire [1:0] csr__ctrl__op;
  (* enum_base_type = "CSROp" *)
  (* enum_value_00 = "NONE" *)
  (* enum_value_01 = "READ_CSR" *)
  (* enum_value_10 = "WRITE_CSR" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:530" *)
  wire [1:0] \csr__ctrl__op$82 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:647" *)
  wire [31:0] csr__dat_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:648" *)
  wire [31:0] csr__dat_w;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [31:0] csr__mie_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mie_r._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mie_r._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mie_r._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [19:0] \csr__mie_r._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mie_r.meie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mie_r.msie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mie_r.mtie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [31:0] csr__mip_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mip_r._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mip_r._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mip_r._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [19:0] \csr__mip_r._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mip_r.meip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mip_r.msip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mip_r.mtip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [31:0] csr__mip_w;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mip_w._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mip_w._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mip_w._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [19:0] \csr__mip_w._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mip_w.meip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mip_w.msip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mip_w.mtip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [31:0] csr__mstatus_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mstatus_r._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mstatus_r._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mstatus_r._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [18:0] \csr__mstatus_r._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mstatus_r.mie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mstatus_r.mpie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [1:0] \csr__mstatus_r.mpp ;
  (* enum_base_type = "CSRSel" *)
  (* enum_value_0 = "INSN_CSR" *)
  (* enum_value_1 = "TRG_CSR" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:566" *)
  wire csr__route__csr_sel;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:567" *)
  wire [7:0] csr__route__target;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire [3:0] csr_encoding;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:121" *)
  wire [4:0] csr_imm;
  (* enum_base_type = "ALUIMod" *)
  (* enum_value_0 = "NONE" *)
  (* enum_value_1 = "INV_MSB_A_B" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:237" *)
  wire ctrl__imod;
  (* enum_base_type = "ALUOMod" *)
  (* enum_value_00 = "NONE" *)
  (* enum_value_01 = "INV_LSB_O" *)
  (* enum_value_10 = "CLEAR_LSB_O" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:238" *)
  wire [1:0] ctrl__omod;
  (* enum_base_type = "OpType" *)
  (* enum_value_0000 = "ADD" *)
  (* enum_value_0001 = "SUB" *)
  (* enum_value_0010 = "AND" *)
  (* enum_value_0011 = "OR" *)
  (* enum_value_0100 = "XOR" *)
  (* enum_value_0101 = "SLL" *)
  (* enum_value_0110 = "SRL" *)
  (* enum_value_0111 = "SRA" *)
  (* enum_value_1000 = "CMP_LTU" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:236" *)
  wire [3:0] ctrl__op;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:239" *)
  wire ctrl__zero;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:117" *)
  wire [31:0] dat_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:39" *)
  wire [31:0] data;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:214" *)
  wire [31:0] \data$103 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:133" *)
  wire [31:0] \data$45 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:236" *)
  reg [31:0] data_adr = 32'd0;
  (* init = 32'd0 *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:95" *)
  wire [31:0] \data_adr$100 ;
  (* enum_base_type = "OpcodeType" *)
  (* enum_value_00000 = "LOAD" *)
  (* enum_value_00010 = "CUSTOM_0" *)
  (* enum_value_00011 = "MISC_MEM" *)
  (* enum_value_00100 = "OP_IMM" *)
  (* enum_value_00101 = "AUIPC" *)
  (* enum_value_01000 = "STORE" *)
  (* enum_value_01100 = "OP" *)
  (* enum_value_01101 = "LUI" *)
  (* enum_value_11000 = "BRANCH" *)
  (* enum_value_11001 = "JALR" *)
  (* enum_value_11011 = "JAL" *)
  (* enum_value_11100 = "SYSTEM" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:445" *)
  wire [4:0] decode__opcode;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:452" *)
  wire [7:0] decode__requested_op;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire do_decode;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire [4:0] dst;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:647" *)
  wire [31:0] exception;
  (* enum_base_type = "MCause.Cause" *)
  (* enum_value_0000000000000000000000000000000 = "INSN_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000001 = "INSN_FAULT" *)
  (* enum_value_0000000000000000000000000000010 = "ILLEGAL_INSN" *)
  (* enum_value_0000000000000000000000000000011 = "BREAKPOINT" *)
  (* enum_value_0000000000000000000000000000100 = "LOAD_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000101 = "LOAD_FAULT" *)
  (* enum_value_0000000000000000000000000000110 = "STORE_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000111 = "STORE_FAULT" *)
  (* enum_value_0000000000000000000000000001000 = "ECALL_UMODE" *)
  (* enum_value_0000000000000000000000000001001 = "ECALL_SMODE" *)
  (* enum_value_0000000000000000000000000001011 = "ECALL_MMODE" *)
  (* enum_value_0000000000000000000000000001100 = "INSN_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001101 = "LOAD_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001111 = "STORE_PAGE_FAULT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:647" *)
  wire [30:0] \exception.e_type ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:647" *)
  wire \exception.valid ;
  (* enum_base_type = "ExceptCtl" *)
  (* enum_value_000 = "NONE" *)
  (* enum_value_001 = "LATCH_DECODER" *)
  (* enum_value_010 = "LATCH_JAL" *)
  (* enum_value_011 = "LATCH_STORE_ADR" *)
  (* enum_value_100 = "LATCH_LOAD_ADR" *)
  (* enum_value_101 = "ENTER_INT" *)
  (* enum_value_110 = "LEAVE_INT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:124" *)
  wire [2:0] exception__except_ctl;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:125" *)
  wire exception__exception;
  (* enum_base_type = "MemSel" *)
  (* enum_value_00 = "AUTO" *)
  (* enum_value_01 = "BYTE" *)
  (* enum_value_10 = "HWORD" *)
  (* enum_value_11 = "WORD" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:123" *)
  wire [1:0] exception__mem_sel;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:29" *)
  wire [31:0] gp;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:101" *)
  wire [31:0] \gp$50 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:311" *)
  wire [4:0] gp__adr_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:312" *)
  wire [4:0] gp__adr_w;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:228" *)
  reg gp__ctrl__allow_zero_wr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:228" *)
  wire \gp__ctrl__allow_zero_wr$72 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:226" *)
  wire gp__ctrl__reg_read;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:226" *)
  wire \gp__ctrl__reg_read$74 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:227" *)
  wire gp__ctrl__reg_write;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:227" *)
  wire \gp__ctrl__reg_write$76 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:313" *)
  wire [31:0] gp__dat_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:314" *)
  wire [31:0] gp__dat_w;
  (* enum_base_type = "RegRSel" *)
  (* enum_value_0 = "INSN_RS1" *)
  (* enum_value_1 = "INSN_RS2" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:258" *)
  wire gp__route__reg_r_sel;
  (* enum_base_type = "RegWSel" *)
  (* enum_value_0 = "INSN_RD" *)
  (* enum_value_1 = "ZERO" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:259" *)
  wire gp__route__reg_w_sel;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:32" *)
  wire [31:0] imm;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire [31:0] \imm$42 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:104" *)
  wire [31:0] \imm$51 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire [31:0] insn;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:52" *)
  wire insn_fetch;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:294" *)
  wire insn_fetch_next;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:251" *)
  input irq;
  wire irq;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:251" *)
  wire \irq$24 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:22" *)
  wire latch;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:81" *)
  wire \latch$46 ;
  (* init = 32'd0 *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:59" *)
  wire [31:0] latched_adr;
  (* init = 32'd0 *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:212" *)
  wire [31:0] \latched_adr$102 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:137" *)
  wire [31:0] mcause;
  (* enum_base_type = "MCause.Cause" *)
  (* enum_value_0000000000000000000000000000000 = "INSN_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000001 = "INSN_FAULT" *)
  (* enum_value_0000000000000000000000000000010 = "ILLEGAL_INSN" *)
  (* enum_value_0000000000000000000000000000011 = "BREAKPOINT" *)
  (* enum_value_0000000000000000000000000000100 = "LOAD_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000101 = "LOAD_FAULT" *)
  (* enum_value_0000000000000000000000000000110 = "STORE_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000111 = "STORE_FAULT" *)
  (* enum_value_0000000000000000000000000001000 = "ECALL_UMODE" *)
  (* enum_value_0000000000000000000000000001001 = "ECALL_SMODE" *)
  (* enum_value_0000000000000000000000000001011 = "ECALL_MMODE" *)
  (* enum_value_0000000000000000000000000001100 = "INSN_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001101 = "LOAD_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001111 = "STORE_PAGE_FAULT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:137" *)
  wire [30:0] \mcause.cause ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:137" *)
  wire \mcause.interrupt ;
  (* enum_base_type = "MemExtend" *)
  (* enum_value_0 = "ZERO" *)
  (* enum_value_1 = "SIGN" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:469" *)
  wire mem__extend;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:468" *)
  wire mem__insn_fetch;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:471" *)
  wire mem__latch_adr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:470" *)
  wire mem__latch_data;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:464" *)
  wire mem__req;
  (* enum_base_type = "MemSel" *)
  (* enum_value_00 = "AUTO" *)
  (* enum_value_01 = "BYTE" *)
  (* enum_value_10 = "HWORD" *)
  (* enum_value_11 = "WORD" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:465" *)
  wire [1:0] mem__sel;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:466" *)
  wire mem__valid;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:467" *)
  wire mem__write;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:250" *)
  wire mem_ack;
  (* enum_base_type = "MemExtend" *)
  (* enum_value_0 = "ZERO" *)
  (* enum_value_1 = "SIGN" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:91" *)
  wire mem_extend;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:46" *)
  wire mem_req;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:238" *)
  reg mem_reset_guard = 1'h1;
  (* enum_base_type = "MemSel" *)
  (* enum_value_00 = "AUTO" *)
  (* enum_value_01 = "BYTE" *)
  (* enum_value_10 = "HWORD" *)
  (* enum_value_11 = "WORD" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:49" *)
  wire [1:0] mem_sel;
  (* enum_base_type = "MemSel" *)
  (* enum_value_00 = "AUTO" *)
  (* enum_value_01 = "BYTE" *)
  (* enum_value_10 = "HWORD" *)
  (* enum_value_11 = "WORD" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:209" *)
  wire [1:0] \mem_sel$101 ;
  (* enum_base_type = "MemSel" *)
  (* enum_value_00 = "AUTO" *)
  (* enum_value_01 = "BYTE" *)
  (* enum_value_10 = "HWORD" *)
  (* enum_value_11 = "WORD" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:87" *)
  wire [1:0] \mem_sel$97 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire [31:0] o;
  (* enum_base_type = "OpcodeType" *)
  (* enum_value_00000 = "LOAD" *)
  (* enum_value_00010 = "CUSTOM_0" *)
  (* enum_value_00011 = "MISC_MEM" *)
  (* enum_value_00100 = "OP_IMM" *)
  (* enum_value_00101 = "AUIPC" *)
  (* enum_value_01000 = "STORE" *)
  (* enum_value_01100 = "OP" *)
  (* enum_value_01101 = "LUI" *)
  (* enum_value_11000 = "BRANCH" *)
  (* enum_value_11001 = "JALR" *)
  (* enum_value_11011 = "JAL" *)
  (* enum_value_11100 = "SYSTEM" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:647" *)
  wire [4:0] opcode;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [31:0] out__mcause;
  (* enum_base_type = "MCause.Cause" *)
  (* enum_value_0000000000000000000000000000000 = "INSN_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000001 = "INSN_FAULT" *)
  (* enum_value_0000000000000000000000000000010 = "ILLEGAL_INSN" *)
  (* enum_value_0000000000000000000000000000011 = "BREAKPOINT" *)
  (* enum_value_0000000000000000000000000000100 = "LOAD_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000101 = "LOAD_FAULT" *)
  (* enum_value_0000000000000000000000000000110 = "STORE_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000111 = "STORE_FAULT" *)
  (* enum_value_0000000000000000000000000001000 = "ECALL_UMODE" *)
  (* enum_value_0000000000000000000000000001001 = "ECALL_SMODE" *)
  (* enum_value_0000000000000000000000000001011 = "ECALL_MMODE" *)
  (* enum_value_0000000000000000000000000001100 = "INSN_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001101 = "LOAD_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001111 = "STORE_PAGE_FAULT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [30:0] \out__mcause.cause ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \out__mcause.interrupt ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:107" *)
  wire [29:0] pc;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:55" *)
  wire [29:0] \pc$96 ;
  (* enum_base_type = "PcAction" *)
  (* enum_value_00 = "HOLD" *)
  (* enum_value_01 = "INC" *)
  (* enum_value_10 = "LOAD_ALU_O" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:69" *)
  wire [1:0] pc__action;
  (* enum_base_type = "PcAction" *)
  (* enum_value_00 = "HOLD" *)
  (* enum_value_01 = "INC" *)
  (* enum_value_10 = "LOAD_ALU_O" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:69" *)
  wire [1:0] pc__ctrl__action;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:106" *)
  wire [29:0] pc__dat_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:107" *)
  wire [29:0] pc__dat_w;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:249" *)
  wire [31:0] read_data;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:322" *)
  reg [5:0] reg_r_adr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:323" *)
  reg [5:0] reg_w_adr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:293" *)
  wire req_next;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire [7:0] requested_op;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* enum_base_type = "ASrc" *)
  (* enum_value_000 = "GP" *)
  (* enum_value_001 = "IMM" *)
  (* enum_value_010 = "ALU_O" *)
  (* enum_value_011 = "ZERO" *)
  (* enum_value_100 = "FOUR" *)
  (* enum_value_101 = "NEG_ONE" *)
  (* enum_value_110 = "THIRTY_ONE" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:24" *)
  wire [2:0] sel;
  (* enum_base_type = "BSrc" *)
  (* enum_value_000 = "GP" *)
  (* enum_value_001 = "PC" *)
  (* enum_value_010 = "IMM" *)
  (* enum_value_011 = "ONE" *)
  (* enum_value_100 = "DAT_R" *)
  (* enum_value_101 = "CSR_IMM" *)
  (* enum_value_110 = "CSR" *)
  (* enum_value_111 = "MCAUSE_LATCH" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:83" *)
  wire [2:0] \sel$48 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:178" *)
  wire [1:0] src__alu_lo;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [31:0] src__csr__mie;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mie._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mie._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mie._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [19:0] \src__csr__mie._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__csr__mie.meie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__csr__mie.msie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__csr__mie.mtie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [31:0] src__csr__mip;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mip._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mip._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mip._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [19:0] \src__csr__mip._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__csr__mip.meip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__csr__mip.msip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__csr__mip.mtip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [31:0] src__csr__mstatus;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mstatus._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mstatus._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mstatus._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [18:0] \src__csr__mstatus._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__csr__mstatus.mie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__csr__mstatus.mpie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [1:0] \src__csr__mstatus.mpp ;
  (* enum_base_type = "ExceptCtl" *)
  (* enum_value_000 = "NONE" *)
  (* enum_value_001 = "LATCH_DECODER" *)
  (* enum_value_010 = "LATCH_JAL" *)
  (* enum_value_011 = "LATCH_STORE_ADR" *)
  (* enum_value_100 = "LATCH_LOAD_ADR" *)
  (* enum_value_101 = "ENTER_INT" *)
  (* enum_value_110 = "LEAVE_INT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:124" *)
  wire [2:0] src__ctrl__except_ctl;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:125" *)
  wire src__ctrl__exception;
  (* enum_base_type = "MemSel" *)
  (* enum_value_00 = "AUTO" *)
  (* enum_value_01 = "BYTE" *)
  (* enum_value_10 = "HWORD" *)
  (* enum_value_11 = "WORD" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:123" *)
  wire [1:0] src__ctrl__mem_sel;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [31:0] src__decode;
  (* enum_base_type = "MCause.Cause" *)
  (* enum_value_0000000000000000000000000000000 = "INSN_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000001 = "INSN_FAULT" *)
  (* enum_value_0000000000000000000000000000010 = "ILLEGAL_INSN" *)
  (* enum_value_0000000000000000000000000000011 = "BREAKPOINT" *)
  (* enum_value_0000000000000000000000000000100 = "LOAD_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000101 = "LOAD_FAULT" *)
  (* enum_value_0000000000000000000000000000110 = "STORE_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000111 = "STORE_FAULT" *)
  (* enum_value_0000000000000000000000000001000 = "ECALL_UMODE" *)
  (* enum_value_0000000000000000000000000001001 = "ECALL_SMODE" *)
  (* enum_value_0000000000000000000000000001011 = "ECALL_MMODE" *)
  (* enum_value_0000000000000000000000000001100 = "INSN_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001101 = "LOAD_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001111 = "STORE_PAGE_FAULT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [30:0] \src__decode.e_type ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__decode.valid ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire [4:0] src_a;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire [4:0] src_a_unreg;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire [4:0] src_b;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:61" *)
  wire [29:0] wb_adr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:217" *)
  wire [31:0] wb_dat_w;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:65" *)
  wire [3:0] wb_sel;
  (* init = 32'd0 *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:237" *)
  wire [31:0] write_data;
  assign bus__stb = \$6 [24] & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:257" *) \$2 ;
  assign do_decode = \$6 [31] & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:306" *) bus__ack;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:236" *)
  always @(posedge clk)
    data_adr <= \$3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:237" *)
  always @(posedge clk)
    bus__dat_w <= \$4 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:238" *)
  always @(posedge clk)
    mem_reset_guard <= \$5 ;
  assign \$1  = ~ (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:256" *) mem_reset_guard;
  assign bus__cyc = \$6 [24] & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:256" *) \$1 ;
  assign \$2  = ~ (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:257" *) mem_reset_guard;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:226" *)
  \sentinel_cpu.a_src  a_src (
    .alu(o),
    .clk(clk),
    .data(a),
    .gp(gp),
    .imm(imm),
    .latch(\$6 [2]),
    .rst(rst),
    .sel(\$6 [6:4])
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:225" *)
  \sentinel_cpu.addr_align  addr_align (
    .insn_fetch(\$6 [31]),
    .latched_adr(data_adr),
    .pc(pc),
    .\port$119$37 (\$6 [26:24]),
    .wb_adr(bus__adr),
    .wb_sel(bus__sel)
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:224" *)
  \sentinel_cpu.alu$128  \alu$128  (
    .a(a),
    .b(b),
    .clk(clk),
    .ctrl__zero(alu__ctrl__zero),
    .\o$32 (o),
    .\port$119$23 (\$6 [16:10]),
    .rst(rst)
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:227" *)
  \sentinel_cpu.b_src  b_src (
    .clk(clk),
    .csr(csr),
    .csr_imm(csr_imm),
    .data(b),
    .gp(gp),
    .imm(imm),
    .latch(\$6 [3]),
    .latched_adr(data_adr),
    .mcause(mcause),
    .pc(pc),
    .\port$119$38 (\$6 [27:25]),
    .rst(rst),
    .sel(\$6 [9:7]),
    .wb_dat_r(bus__dat_r)
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:228" *)
  \sentinel_cpu.control  control (
    .alu__ctrl__zero(alu__ctrl__zero),
    .clk(clk),
    .exception__exception(exception__exception),
    .mem__valid(bus__ack),
    .opcode_adr(decode__requested_op),
    .\port$119$13 (\$6 ),
    .rst(rst),
    .target(csr__route__target)
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:229" *)
  \sentinel_cpu.datapath  datapath (
    .clk(clk),
    .csr__dat_r(csr),
    .csr__mie_r(src__csr__mie),
    .csr__mip_r(src__csr__mip),
    .csr__mstatus_r(src__csr__mstatus),
    .ctrl__action(\$6 [1:0]),
    .gp__dat_r(gp),
    .pc__dat_r(pc),
    .\port$119$30 (\$6 [18:17]),
    .pub__adr(csr__adr),
    .pub__adr_r(reg_r_adr[4:0]),
    .pub__adr_w(reg_w_adr[4:0]),
    .pub__ctrl__allow_zero_wr(gp__ctrl__allow_zero_wr),
    .pub__ctrl__exception(\$6 [34:32]),
    .pub__ctrl__op(\$6 [22:21]),
    .pub__dat_w(o),
    .pub__mip_w(csr__mip_w),
    .rst(rst)
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:230" *)
  \sentinel_cpu.decode  decode (
    .clk(clk),
    .csr_encoding(csr_encoding),
    .dst(dst),
    .enable(do_decode),
    .exception(src__decode),
    .imm(imm),
    .insn(bus__dat_r),
    .requested_op(decode__requested_op),
    .rst(rst),
    .src_a(csr_imm),
    .src_b(src_b)
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:231" *)
  \sentinel_cpu.exception_router  exception_router (
    .clk(clk),
    .out__mcause(mcause),
    .rst(rst),
    .src__alu_lo(o[1:0]),
    .src__csr__mie(src__csr__mie),
    .src__csr__mip(src__csr__mip),
    .src__csr__mstatus(src__csr__mstatus),
    .src__ctrl__except_ctl(\$6 [34:32]),
    .src__ctrl__exception(exception__exception),
    .src__ctrl__mem_sel(\$6 [26:25]),
    .src__decode(src__decode)
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:232" *)
  \sentinel_cpu.wdata_align  wdata_align (
    .data(o),
    .latched_adr(data_adr),
    .mem_sel(\$6 [26:25]),
    .wb_dat_w(wb_dat_w)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$1 ) begin end
    \$3  = data_adr;
    if (\$6 [28]) begin
      \$3  = o;
    end
    if (rst) begin
      \$3  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$1 ) begin end
    \$4  = bus__dat_w;
    if (\$6 [29]) begin
      \$4  = wb_dat_w;
    end
    if (rst) begin
      \$4  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$1 ) begin end
    \$5  = 1'h0;
    if (rst) begin
      \$5  = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$1 ) begin end
    gp__ctrl__allow_zero_wr = 1'h0;
    (* full_case = 32'd1 *)
    casez (\$6 [20])
      1'h0:
          /* empty */;
      1'h1:
          gp__ctrl__allow_zero_wr = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez (\$6 [19])
      1'h0:
          (* full_case = 32'd1 *)
          if (\$6 [31]) begin
            reg_r_adr = { 1'h0, bus__dat_r[19:15] };
          end else begin
            reg_r_adr = { 1'h0, csr_imm };
          end
      1'h1:
          reg_r_adr = { 1'h0, src_b };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez (\$6 [20])
      1'h0:
          reg_w_adr = { 1'h0, dst };
      1'h1:
          reg_w_adr = 6'h00;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez (\$6 [23])
      1'h0:
          csr__adr = { 1'h0, csr_encoding };
      1'h1:
          csr__adr = { 1'h0, csr__route__target[3:0] };
    endcase
  end
  assign mem__latch_adr = \$6 [28];
  assign mem__latch_data = \$6 [29];
  assign write_data = bus__dat_w;
  assign mem__req = \$6 [24];
  assign mem__write = \$6 [30];
  assign wb_adr = bus__adr;
  assign wb_sel = bus__sel;
  assign read_data = bus__dat_r;
  assign mem_ack = bus__ack;
  assign \irq$24  = irq;
  assign ctrl__imod = \$6 [14];
  assign alu__ctrl__imod = \$6 [14];
  assign ctrl__omod = \$6 [16:15];
  assign alu__ctrl__omod = \$6 [16:15];
  assign ctrl__op = \$6 [13:10];
  assign alu__ctrl__op = \$6 [13:10];
  assign ctrl__zero = alu__ctrl__zero;
  assign data = a;
  assign latch = \$6 [2];
  assign alu__route__latch_a = \$6 [2];
  assign sel = \$6 [6:4];
  assign alu__route__a_src = \$6 [6:4];
  assign gp__dat_r = gp;
  assign \imm$42  = imm;
  assign alu = o;
  assign \data$45  = b;
  assign \latch$46  = \$6 [3];
  assign alu__route__latch_b = \$6 [3];
  assign \sel$48  = \$6 [9:7];
  assign alu__route__b_src = \$6 [9:7];
  assign \gp$50  = gp;
  assign \imm$51  = imm;
  assign pc__dat_r = pc;
  assign dat_r = bus__dat_r;
  assign src_a = csr_imm;
  assign csr__dat_r = csr;
  assign out__mcause = mcause;
  assign decode__opcode = bus__dat_r[6:2];
  assign opcode = bus__dat_r[6:2];
  assign requested_op = decode__requested_op;
  assign mem__valid = bus__ack;
  assign req_next = \$6 [24];
  assign insn_fetch_next = \$6 [31];
  assign mem__insn_fetch = \$6 [31];
  assign insn = bus__dat_r;
  assign \gp__ctrl__allow_zero_wr$72  = 1'h0;
  assign gp__ctrl__reg_read = \$6 [17];
  assign \gp__ctrl__reg_read$74  = \$6 [17];
  assign gp__ctrl__reg_write = \$6 [18];
  assign \gp__ctrl__reg_write$76  = \$6 [18];
  assign pc__ctrl__action = \$6 [1:0];
  assign pc__action = \$6 [1:0];
  assign csr__ctrl__exception = \$6 [34:32];
  assign \csr__ctrl__exception$80  = \$6 [34:32];
  assign csr__ctrl__op = \$6 [22:21];
  assign \csr__ctrl__op$82  = \$6 [22:21];
  assign gp__dat_w = o;
  assign gp__adr_r = reg_r_adr[4:0];
  assign gp__adr_w = reg_w_adr[4:0];
  assign pc__dat_w = o[31:2];
  assign csr__dat_w = o;
  assign mem_req = \$6 [24];
  assign mem_sel = \$6 [26:25];
  assign mem__sel = \$6 [26:25];
  assign insn_fetch = \$6 [31];
  assign latched_adr = data_adr;
  assign \pc$96  = pc;
  assign \mem_sel$97  = \$6 [26:25];
  assign mem_extend = \$6 [27];
  assign mem__extend = \$6 [27];
  assign \data_adr$100  = data_adr;
  assign \mem_sel$101  = \$6 [26:25];
  assign \latched_adr$102  = data_adr;
  assign \data$103  = o;
  assign gp__route__reg_r_sel = \$6 [19];
  assign src_a_unreg = bus__dat_r[19:15];
  assign gp__route__reg_w_sel = \$6 [20];
  assign csr__route__csr_sel = \$6 [23];
  assign src__ctrl__except_ctl = \$6 [34:32];
  assign exception__except_ctl = \$6 [34:32];
  assign src__ctrl__exception = exception__exception;
  assign src__ctrl__mem_sel = \$6 [26:25];
  assign exception__mem_sel = \$6 [26:25];
  assign src__alu_lo = o[1:0];
  assign csr__mstatus_r = src__csr__mstatus;
  assign csr__mip_r = src__csr__mip;
  assign csr__mie_r = src__csr__mie;
  assign exception = src__decode;
  assign bus__we = \$6 [30];
  assign \mcause.cause  = mcause[30:0];
  assign \mcause.interrupt  = mcause[31];
  assign \out__mcause.cause  = mcause[30:0];
  assign \out__mcause.interrupt  = mcause[31];
  assign \csr__mip_w._padding0  = csr__mip_w[2:0];
  assign \csr__mip_w.msip  = csr__mip_w[3];
  assign \csr__mip_w._padding1  = csr__mip_w[6:4];
  assign \csr__mip_w.mtip  = csr__mip_w[7];
  assign \csr__mip_w._padding2  = csr__mip_w[10:8];
  assign \csr__mip_w.meip  = csr__mip_w[11];
  assign \csr__mip_w._padding3  = csr__mip_w[31:12];
  assign \src__csr__mstatus._padding0  = src__csr__mstatus[2:0];
  assign \src__csr__mstatus.mie  = src__csr__mstatus[3];
  assign \src__csr__mstatus._padding1  = src__csr__mstatus[6:4];
  assign \src__csr__mstatus.mpie  = src__csr__mstatus[7];
  assign \src__csr__mstatus._padding2  = src__csr__mstatus[10:8];
  assign \src__csr__mstatus.mpp  = src__csr__mstatus[12:11];
  assign \src__csr__mstatus._padding3  = src__csr__mstatus[31:13];
  assign \csr__mstatus_r._padding0  = src__csr__mstatus[2:0];
  assign \csr__mstatus_r.mie  = src__csr__mstatus[3];
  assign \csr__mstatus_r._padding1  = src__csr__mstatus[6:4];
  assign \csr__mstatus_r.mpie  = src__csr__mstatus[7];
  assign \csr__mstatus_r._padding2  = src__csr__mstatus[10:8];
  assign \csr__mstatus_r.mpp  = src__csr__mstatus[12:11];
  assign \csr__mstatus_r._padding3  = src__csr__mstatus[31:13];
  assign \src__csr__mip._padding0  = src__csr__mip[2:0];
  assign \src__csr__mip.msip  = src__csr__mip[3];
  assign \src__csr__mip._padding1  = src__csr__mip[6:4];
  assign \src__csr__mip.mtip  = src__csr__mip[7];
  assign \src__csr__mip._padding2  = src__csr__mip[10:8];
  assign \src__csr__mip.meip  = src__csr__mip[11];
  assign \src__csr__mip._padding3  = src__csr__mip[31:12];
  assign \csr__mip_r._padding0  = src__csr__mip[2:0];
  assign \csr__mip_r.msip  = src__csr__mip[3];
  assign \csr__mip_r._padding1  = src__csr__mip[6:4];
  assign \csr__mip_r.mtip  = src__csr__mip[7];
  assign \csr__mip_r._padding2  = src__csr__mip[10:8];
  assign \csr__mip_r.meip  = src__csr__mip[11];
  assign \csr__mip_r._padding3  = src__csr__mip[31:12];
  assign \src__csr__mie._padding0  = src__csr__mie[2:0];
  assign \src__csr__mie.msie  = src__csr__mie[3];
  assign \src__csr__mie._padding1  = src__csr__mie[6:4];
  assign \src__csr__mie.mtie  = src__csr__mie[7];
  assign \src__csr__mie._padding2  = src__csr__mie[10:8];
  assign \src__csr__mie.meie  = src__csr__mie[11];
  assign \src__csr__mie._padding3  = src__csr__mie[31:12];
  assign \csr__mie_r._padding0  = src__csr__mie[2:0];
  assign \csr__mie_r.msie  = src__csr__mie[3];
  assign \csr__mie_r._padding1  = src__csr__mie[6:4];
  assign \csr__mie_r.mtie  = src__csr__mie[7];
  assign \csr__mie_r._padding2  = src__csr__mie[10:8];
  assign \csr__mie_r.meie  = src__csr__mie[11];
  assign \csr__mie_r._padding3  = src__csr__mie[31:12];
  assign \src__decode.valid  = src__decode[0];
  assign \src__decode.e_type  = src__decode[31:1];
  assign \exception.valid  = src__decode[0];
  assign \exception.e_type  = src__decode[31:1];
  assign csr__mip_w[11] = irq;
  assign { csr__mip_w[31:12], csr__mip_w[10:0] } = 31'h00000000;
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:42" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.a_src (rst, latch, sel, gp, alu, data, imm, clk);
  reg \$auto$verilog_backend.cc:2355:dump_module$2  = 0;
  reg [31:0] \$1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:35" *)
  input [31:0] alu;
  wire [31:0] alu;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:39" *)
  output [31:0] data;
  reg [31:0] data = 32'd0;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:29" *)
  input [31:0] gp;
  wire [31:0] gp;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:32" *)
  input [31:0] imm;
  wire [31:0] imm;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:22" *)
  input latch;
  wire latch;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* enum_base_type = "ASrc" *)
  (* enum_value_000 = "GP" *)
  (* enum_value_001 = "IMM" *)
  (* enum_value_010 = "ALU_O" *)
  (* enum_value_011 = "ZERO" *)
  (* enum_value_100 = "FOUR" *)
  (* enum_value_101 = "NEG_ONE" *)
  (* enum_value_110 = "THIRTY_ONE" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:24" *)
  input [2:0] sel;
  wire [2:0] sel;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:39" *)
  always @(posedge clk)
    data <= \$1 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$2 ) begin end
    \$1  = data;
    if (latch) begin
      casez (sel)
        3'h0:
            \$1  = gp;
        3'h1:
            \$1  = imm;
        3'h3:
            \$1  = 32'd0;
        3'h2:
            \$1  = alu;
        3'h4:
            \$1  = 32'd4;
        3'h5:
            \$1  = 32'd4294967295;
        3'h6:
            \$1  = 32'd31;
      endcase
    end
    if (rst) begin
      \$1  = 32'd0;
    end
  end
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:68" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.addr_align (insn_fetch, latched_adr, wb_adr, wb_sel, pc, \port$119$37 );
  reg \$auto$verilog_backend.cc:2355:dump_module$3  = 0;
  wire \$1 ;
  wire \$2 ;
  wire \$3 ;
  wire \$4 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:52" *)
  input insn_fetch;
  wire insn_fetch;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:59" *)
  input [31:0] latched_adr;
  wire [31:0] latched_adr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:46" *)
  wire mem_req;
  (* enum_base_type = "MemSel" *)
  (* enum_value_00 = "AUTO" *)
  (* enum_value_01 = "BYTE" *)
  (* enum_value_10 = "HWORD" *)
  (* enum_value_11 = "WORD" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:49" *)
  wire [1:0] mem_sel;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:55" *)
  input [29:0] pc;
  wire [29:0] pc;
  input [2:0] \port$119$37 ;
  wire [2:0] \port$119$37 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:61" *)
  output [29:0] wb_adr;
  reg [29:0] wb_adr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:65" *)
  output [3:0] wb_sel;
  reg [3:0] wb_sel;
  assign \$1  = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:83" *) latched_adr[1:0];
  assign \$2  = latched_adr[1:0] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:85" *) 1'h1;
  assign \$3  = latched_adr[1:0] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:87" *) 2'h2;
  assign \$4  = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:92" *) latched_adr[1];
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$3 ) begin end
    wb_sel = 4'h0;
    if (\port$119$37 [0]) begin
      (* full_case = 32'd1 *)
      if (insn_fetch) begin
        wb_sel = 4'hf;
      end else begin
        casez (\port$119$37 [2:1])
          2'h1:
              (* full_case = 32'd1 *)
              if (\$1 ) begin
                wb_sel = 4'h1;
              end else if (\$2 ) begin
                wb_sel = 4'h2;
              end else if (\$3 ) begin
                wb_sel = 4'h4;
              end else begin
                wb_sel = 4'h8;
              end
          2'h2:
              (* full_case = 32'd1 *)
              if (\$4 ) begin
                wb_sel = 4'h3;
              end else begin
                wb_sel = 4'hc;
              end
          2'h3:
              wb_sel = 4'hf;
        endcase
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$3 ) begin end
    wb_adr = 30'h00000000;
    if (\port$119$37 [0]) begin
      (* full_case = 32'd1 *)
      if (insn_fetch) begin
        wb_adr = pc;
      end else begin
        wb_adr = latched_adr[31:2];
      end
    end
  end
  assign mem_req = \port$119$37 [0];
  assign mem_sel = \port$119$37 [2:1];
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:331" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.alu$128 (rst, ctrl__zero, \port$119$23 , \o$32 , a, b, clk);
  reg \$auto$verilog_backend.cc:2355:dump_module$4  = 0;
  wire \$1 ;
  wire \$2 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  reg [31:0] \$7 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  input [31:0] a;
  wire [31:0] a;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:298" *)
  wire [31:0] \a$11 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:298" *)
  wire [31:0] \a$13 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:298" *)
  wire [31:0] \a$15 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:298" *)
  wire [31:0] \a$17 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:298" *)
  wire [31:0] \a$19 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:298" *)
  wire [31:0] \a$5 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:298" *)
  wire [32:0] \a$7 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:298" *)
  wire [31:0] \a$9 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  input [31:0] b;
  wire [31:0] b;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:299" *)
  wire [31:0] \b$10 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:299" *)
  wire [31:0] \b$12 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:299" *)
  wire [31:0] \b$14 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:299" *)
  wire [31:0] \b$16 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:299" *)
  wire [31:0] \b$18 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:299" *)
  wire [31:0] \b$20 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:299" *)
  wire [31:0] \b$6 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:299" *)
  wire [32:0] \b$8 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* enum_base_type = "ALUIMod" *)
  (* enum_value_0 = "NONE" *)
  (* enum_value_1 = "INV_MSB_A_B" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:237" *)
  wire ctrl__imod;
  (* enum_base_type = "ALUOMod" *)
  (* enum_value_00 = "NONE" *)
  (* enum_value_01 = "INV_LSB_O" *)
  (* enum_value_10 = "CLEAR_LSB_O" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:238" *)
  wire [1:0] ctrl__omod;
  (* enum_base_type = "OpType" *)
  (* enum_value_0000 = "ADD" *)
  (* enum_value_0001 = "SUB" *)
  (* enum_value_0010 = "AND" *)
  (* enum_value_0011 = "OR" *)
  (* enum_value_0100 = "XOR" *)
  (* enum_value_0101 = "SLL" *)
  (* enum_value_0110 = "SRL" *)
  (* enum_value_0111 = "SRA" *)
  (* enum_value_1000 = "CMP_LTU" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:236" *)
  wire [3:0] ctrl__op;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:239" *)
  output ctrl__zero;
  wire ctrl__zero;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:341" *)
  reg [31:0] mod_a;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:342" *)
  reg [31:0] mod_b;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:300" *)
  wire [31:0] o;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:300" *)
  wire [32:0] \o$24 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:300" *)
  wire [31:0] \o$25 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:300" *)
  wire [31:0] \o$26 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:300" *)
  wire [31:0] \o$27 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:300" *)
  wire [31:0] \o$28 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:300" *)
  wire [31:0] \o$29 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:300" *)
  wire [31:0] \o$30 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  output [31:0] \o$32 ;
  reg [31:0] \o$32  = 32'd0;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:320" *)
  reg [31:0] o_mux;
  input [6:0] \port$119$23 ;
  wire [6:0] \port$119$23 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  assign \$3  = ~ (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:352" *) b[31];
  assign ctrl__zero = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:389" *) \o$32 ;
  assign \$4  = \port$119$23 [6:5] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:383" *) 1'h1;
  assign \$5  = \port$119$23 [6:5] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:385" *) 2'h2;
  assign \$6  = ~ (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:384" *) o_mux[0];
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  always @(posedge clk)
    \o$32  <= \$7 ;
  assign \$2  = ~ (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:351" *) a[31];
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:332" *)
  \sentinel_cpu.alu$128.add  add (
    .a(mod_a),
    .b(mod_b),
    .o(o)
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:334" *)
  \sentinel_cpu.alu$128.and_  and_ (
    .a(mod_a),
    .b(mod_b),
    .o(\o$25 )
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:335" *)
  \sentinel_cpu.alu$128.or_  or_ (
    .a(mod_a),
    .b(mod_b),
    .o(\o$26 )
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:339" *)
  \sentinel_cpu.alu$128.sal  sal (
    .a(mod_a),
    .o(\o$30 )
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:337" *)
  \sentinel_cpu.alu$128.sll  sll (
    .a(mod_a),
    .o(\o$28 )
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:338" *)
  \sentinel_cpu.alu$128.srl  srl (
    .a(mod_a),
    .o(\o$29 )
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:333" *)
  \sentinel_cpu.alu$128.sub  sub (
    .o(\o$24 ),
    .\port$1508$0 (mod_a),
    .\port$1509$0 (mod_b)
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:336" *)
  \sentinel_cpu.alu$128.xor  \xor  (
    .a(mod_a),
    .b(mod_b),
    .o(\o$27 )
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$4 ) begin end
    mod_a[31] = a[31];
    if (\$1 ) begin
      mod_a[31] = \$2 ;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$4 ) begin end
    mod_b[31] = b[31];
    if (\$1 ) begin
      mod_b[31] = \$3 ;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$4 ) begin end
    o_mux = 32'd0;
    casez (\port$119$23 [3:0])
      4'h0:
          o_mux = o;
      4'h1:
          o_mux = \o$24 [31:0];
      4'h2:
          o_mux = \o$25 ;
      4'h3:
          o_mux = \o$26 ;
      4'h4:
          o_mux = \o$27 ;
      4'h5:
          o_mux = \o$28 ;
      4'h6:
          o_mux = \o$29 ;
      4'h7:
          o_mux = \o$30 ;
      4'h8:
          o_mux = { 31'h00000000, \o$24 [32] };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$4 ) begin end
    \$7  = o_mux;
    if (\$4 ) begin
      \$7 [0] = \$6 ;
    end else if (\$5 ) begin
      \$7 [0] = 1'h0;
    end
    if (rst) begin
      \$7  = 32'd0;
    end
  end
  assign ctrl__imod = \port$119$23 [4];
  assign \a$5  = mod_a;
  assign \b$6  = mod_b;
  assign \a$7  = { 1'h0, mod_a };
  assign \b$8  = { 1'h0, mod_b };
  assign \a$9  = mod_a;
  assign \b$10  = mod_b;
  assign \a$11  = mod_a;
  assign \b$12  = mod_b;
  assign \a$13  = mod_a;
  assign \b$14  = mod_b;
  assign \a$15  = mod_a;
  assign \b$16  = mod_b;
  assign \a$17  = mod_a;
  assign \b$18  = mod_b;
  assign \a$19  = mod_a;
  assign \b$20  = mod_b;
  assign ctrl__op = \port$119$23 [3:0];
  assign ctrl__omod = \port$119$23 [6:5];
  always @*
    mod_b[30:0] = b[30:0];
  always @*
    mod_a[30:0] = a[30:0];
  assign \$1  = \port$119$23 [4];
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:304" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.alu$128.add (a, b, o);
  wire [32:0] \$1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:298" *)
  input [31:0] a;
  wire [31:0] a;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:299" *)
  input [31:0] b;
  wire [31:0] b;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:300" *)
  output [31:0] o;
  wire [31:0] o;
  assign \$1  = a + (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:321" *) b;
  assign o = \$1 [31:0];
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:304" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.alu$128.and_ (a, b, o);
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:298" *)
  input [31:0] a;
  wire [31:0] a;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:299" *)
  input [31:0] b;
  wire [31:0] b;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:300" *)
  output [31:0] o;
  wire [31:0] o;
  assign o = a & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:323" *) b;
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:304" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.alu$128.or_ (a, b, o);
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:298" *)
  input [31:0] a;
  wire [31:0] a;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:299" *)
  input [31:0] b;
  wire [31:0] b;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:300" *)
  output [31:0] o;
  wire [31:0] o;
  assign o = a | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:324" *) b;
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:304" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.alu$128.sal (a, o);
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:298" *)
  input [31:0] a;
  wire [31:0] a;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:300" *)
  output [31:0] o;
  wire [31:0] o;
  assign o = { a[31], a[31:1] };
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:304" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.alu$128.sll (a, o);
  wire [32:0] \$1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:298" *)
  input [31:0] a;
  wire [31:0] a;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:300" *)
  output [31:0] o;
  wire [31:0] o;
  assign o = \$1 [31:0];
  assign \$1  = { a, 1'h0 };
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:304" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.alu$128.srl (a, o);
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:298" *)
  input [31:0] a;
  wire [31:0] a;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:300" *)
  output [31:0] o;
  wire [31:0] o;
  assign o = { 1'h0, a[31:1] };
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:304" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.alu$128.sub (\port$1508$0 , \port$1509$0 , o);
  wire [33:0] \$1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:298" *)
  wire [32:0] a;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:299" *)
  wire [32:0] b;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:300" *)
  output [32:0] o;
  wire [32:0] o;
  input [31:0] \port$1508$0 ;
  wire [31:0] \port$1508$0 ;
  input [31:0] \port$1509$0 ;
  wire [31:0] \port$1509$0 ;
  assign \$1  = \port$1508$0  - (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:322" *) \port$1509$0 ;
  assign a = { 1'h0, \port$1508$0  };
  assign b = { 1'h0, \port$1509$0  };
  assign o = \$1 [32:0];
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:304" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.alu$128.xor (a, b, o);
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:298" *)
  input [31:0] a;
  wire [31:0] a;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:299" *)
  input [31:0] b;
  wire [31:0] b;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:300" *)
  output [31:0] o;
  wire [31:0] o;
  assign o = a ^ (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:325" *) b;
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:140" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.b_src (clk, rst, latch, sel, \port$119$38 , gp, latched_adr, data, pc, csr, csr_imm, imm, mcause, wb_dat_r);
  reg \$auto$verilog_backend.cc:2355:dump_module$5  = 0;
  reg [31:0] \$1 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:126" *)
  input [31:0] csr;
  wire [31:0] csr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:121" *)
  input [4:0] csr_imm;
  wire [4:0] csr_imm;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:117" *)
  wire [31:0] dat_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:133" *)
  output [31:0] data;
  reg [31:0] data = 32'd0;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:145" *)
  wire [31:0] \data$16 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:95" *)
  wire [31:0] data_adr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:101" *)
  input [31:0] gp;
  wire [31:0] gp;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:104" *)
  input [31:0] imm;
  wire [31:0] imm;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:81" *)
  input latch;
  wire latch;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:95" *)
  input [31:0] latched_adr;
  wire [31:0] latched_adr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:137" *)
  input [31:0] mcause;
  wire [31:0] mcause;
  (* enum_base_type = "MCause.Cause" *)
  (* enum_value_0000000000000000000000000000000 = "INSN_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000001 = "INSN_FAULT" *)
  (* enum_value_0000000000000000000000000000010 = "ILLEGAL_INSN" *)
  (* enum_value_0000000000000000000000000000011 = "BREAKPOINT" *)
  (* enum_value_0000000000000000000000000000100 = "LOAD_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000101 = "LOAD_FAULT" *)
  (* enum_value_0000000000000000000000000000110 = "STORE_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000111 = "STORE_FAULT" *)
  (* enum_value_0000000000000000000000000001000 = "ECALL_UMODE" *)
  (* enum_value_0000000000000000000000000001001 = "ECALL_SMODE" *)
  (* enum_value_0000000000000000000000000001011 = "ECALL_MMODE" *)
  (* enum_value_0000000000000000000000000001100 = "INSN_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001101 = "LOAD_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001111 = "STORE_PAGE_FAULT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:137" *)
  wire [30:0] \mcause.cause ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:137" *)
  wire \mcause.interrupt ;
  (* enum_base_type = "MemExtend" *)
  (* enum_value_0 = "ZERO" *)
  (* enum_value_1 = "SIGN" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:138" *)
  wire mem_extend;
  (* enum_base_type = "MemExtend" *)
  (* enum_value_0 = "ZERO" *)
  (* enum_value_1 = "SIGN" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:91" *)
  wire \mem_extend$3 ;
  (* enum_base_type = "MemSel" *)
  (* enum_value_00 = "AUTO" *)
  (* enum_value_01 = "BYTE" *)
  (* enum_value_10 = "HWORD" *)
  (* enum_value_11 = "WORD" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:136" *)
  wire [1:0] mem_sel;
  (* enum_base_type = "MemSel" *)
  (* enum_value_00 = "AUTO" *)
  (* enum_value_01 = "BYTE" *)
  (* enum_value_10 = "HWORD" *)
  (* enum_value_11 = "WORD" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:87" *)
  wire [1:0] \mem_sel$1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:107" *)
  input [29:0] pc;
  wire [29:0] pc;
  input [2:0] \port$119$38 ;
  wire [2:0] \port$119$38 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* enum_base_type = "BSrc" *)
  (* enum_value_000 = "GP" *)
  (* enum_value_001 = "PC" *)
  (* enum_value_010 = "IMM" *)
  (* enum_value_011 = "ONE" *)
  (* enum_value_100 = "DAT_R" *)
  (* enum_value_101 = "CSR_IMM" *)
  (* enum_value_110 = "CSR" *)
  (* enum_value_111 = "MCAUSE_LATCH" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:83" *)
  input [2:0] sel;
  wire [2:0] sel;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:117" *)
  input [31:0] wb_dat_r;
  wire [31:0] wb_dat_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:133" *)
  always @(posedge clk)
    data <= \$1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:142" *)
  \sentinel_cpu.b_src.rdata_align  rdata_align (
    .data(\data$16 ),
    .latched_adr(latched_adr),
    .\port$119$38 (\port$119$38 ),
    .wb_dat_r(wb_dat_r)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$5 ) begin end
    \$1  = data;
    if (latch) begin
      (* full_case = 32'd1 *)
      casez (sel)
        3'h0:
            \$1  = gp;
        3'h2:
            \$1  = imm;
        3'h3:
            \$1  = 32'd1;
        3'h1:
            \$1  = { pc, 2'h0 };
        3'h4:
            \$1  = \data$16 ;
        3'h5:
            \$1  = { 27'h0000000, csr_imm };
        3'h6:
            \$1  = csr;
        3'h7:
            \$1  = mcause;
      endcase
    end
    if (rst) begin
      \$1  = 32'd0;
    end
  end
  assign mem_sel = \port$119$38 [1:0];
  assign \mem_sel$1  = \port$119$38 [1:0];
  assign mem_extend = \port$119$38 [2];
  assign \mem_extend$3  = \port$119$38 [2];
  assign data_adr = latched_adr;
  assign dat_r = wb_dat_r;
  assign \mcause.cause  = mcause[30:0];
  assign \mcause.interrupt  = mcause[31];
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:148" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.b_src.rdata_align (\port$119$38 , latched_adr, data, wb_dat_r);
  reg \$auto$verilog_backend.cc:2355:dump_module$6  = 0;
  wire \$1 ;
  wire \$2 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:145" *)
  output [31:0] data;
  reg [31:0] data;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:141" *)
  input [31:0] latched_adr;
  wire [31:0] latched_adr;
  (* enum_base_type = "MemExtend" *)
  (* enum_value_0 = "ZERO" *)
  (* enum_value_1 = "SIGN" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:138" *)
  wire mem_extend;
  (* enum_base_type = "MemSel" *)
  (* enum_value_00 = "AUTO" *)
  (* enum_value_01 = "BYTE" *)
  (* enum_value_10 = "HWORD" *)
  (* enum_value_11 = "WORD" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:136" *)
  wire [1:0] mem_sel;
  input [2:0] \port$119$38 ;
  wire [2:0] \port$119$38 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:150" *)
  reg [31:0] selected_dat;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:143" *)
  input [31:0] wb_dat_r;
  wire [31:0] wb_dat_r;
  assign \$5  = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:168" *) latched_adr[1];
  assign \$1  = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:154" *) latched_adr[1:0];
  assign \$2  = latched_adr[1:0] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:156" *) 1'h1;
  assign \$3  = latched_adr[1:0] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:158" *) 2'h2;
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$6 ) begin end
    selected_dat = 32'd0;
    casez (\port$119$38 [1:0])
      2'h1:
          (* full_case = 32'd1 *)
          if (\$1 ) begin
            selected_dat = { 24'h000000, wb_dat_r[7:0] };
          end else if (\$2 ) begin
            selected_dat = { 24'h000000, wb_dat_r[15:8] };
          end else if (\$3 ) begin
            selected_dat = { 24'h000000, wb_dat_r[23:16] };
          end else begin
            selected_dat = { 24'h000000, wb_dat_r[31:24] };
          end
      2'h2:
          (* full_case = 32'd1 *)
          if (\$5 ) begin
            selected_dat = { 16'h0000, wb_dat_r[15:0] };
          end else begin
            selected_dat = { 16'h0000, wb_dat_r[31:16] };
          end
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$6 ) begin end
    data = 32'd0;
    casez (\port$119$38 [1:0])
      2'h1:
          (* full_case = 32'd1 *)
          if (\$4 ) begin
            data = { selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7], selected_dat[7:0] };
          end else begin
            data = { 24'h000000, selected_dat[7:0] };
          end
      2'h2:
          (* full_case = 32'd1 *)
          if (\$6 ) begin
            data = { selected_dat[15], selected_dat[15], selected_dat[15], selected_dat[15], selected_dat[15], selected_dat[15], selected_dat[15], selected_dat[15], selected_dat[15], selected_dat[15], selected_dat[15], selected_dat[15], selected_dat[15], selected_dat[15], selected_dat[15], selected_dat[15], selected_dat[15:0] };
          end else begin
            data = { 16'h0000, selected_dat[15:0] };
          end
      2'h3:
          data = wb_dat_r;
    endcase
  end
  assign mem_sel = \port$119$38 [1:0];
  assign mem_extend = \port$119$38 [2];
  assign \$4  = \port$119$38 [2];
  assign \$6  = \port$119$38 [2];
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:477" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.control (clk, rst, alu__ctrl__zero, target, \port$119$13 , opcode_adr, exception__exception, mem__valid);
  reg \$auto$verilog_backend.cc:2355:dump_module$7  = 0;
  wire \$1 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire [7:0] addr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:636" *)
  wire [7:0] adr;
  (* enum_base_type = "ALUIMod" *)
  (* enum_value_0 = "NONE" *)
  (* enum_value_1 = "INV_MSB_A_B" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:237" *)
  wire alu__ctrl__imod;
  (* enum_base_type = "ALUOMod" *)
  (* enum_value_00 = "NONE" *)
  (* enum_value_01 = "INV_LSB_O" *)
  (* enum_value_10 = "CLEAR_LSB_O" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:238" *)
  wire [1:0] alu__ctrl__omod;
  (* enum_base_type = "OpType" *)
  (* enum_value_0000 = "ADD" *)
  (* enum_value_0001 = "SUB" *)
  (* enum_value_0010 = "AND" *)
  (* enum_value_0011 = "OR" *)
  (* enum_value_0100 = "XOR" *)
  (* enum_value_0101 = "SLL" *)
  (* enum_value_0110 = "SRL" *)
  (* enum_value_0111 = "SRA" *)
  (* enum_value_1000 = "CMP_LTU" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:236" *)
  wire [3:0] alu__ctrl__op;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:239" *)
  input alu__ctrl__zero;
  wire alu__ctrl__zero;
  (* enum_base_type = "ASrc" *)
  (* enum_value_000 = "GP" *)
  (* enum_value_001 = "IMM" *)
  (* enum_value_010 = "ALU_O" *)
  (* enum_value_011 = "ZERO" *)
  (* enum_value_100 = "FOUR" *)
  (* enum_value_101 = "NEG_ONE" *)
  (* enum_value_110 = "THIRTY_ONE" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:288" *)
  wire [2:0] alu__route__a_src;
  (* enum_base_type = "BSrc" *)
  (* enum_value_000 = "GP" *)
  (* enum_value_001 = "PC" *)
  (* enum_value_010 = "IMM" *)
  (* enum_value_011 = "ONE" *)
  (* enum_value_100 = "DAT_R" *)
  (* enum_value_101 = "CSR_IMM" *)
  (* enum_value_110 = "CSR" *)
  (* enum_value_111 = "MCAUSE_LATCH" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:289" *)
  wire [2:0] alu__route__b_src;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:290" *)
  wire alu__route__latch_a;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/alu.py:291" *)
  wire alu__route__latch_b;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:488" *)
  wire [1:0] cond_test;
  (* enum_base_type = "ExceptCtl" *)
  (* enum_value_000 = "NONE" *)
  (* enum_value_001 = "LATCH_DECODER" *)
  (* enum_value_010 = "LATCH_JAL" *)
  (* enum_value_011 = "LATCH_STORE_ADR" *)
  (* enum_value_100 = "LATCH_LOAD_ADR" *)
  (* enum_value_101 = "ENTER_INT" *)
  (* enum_value_110 = "LEAVE_INT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:531" *)
  wire [2:0] csr__ctrl__exception;
  (* enum_base_type = "CSROp" *)
  (* enum_value_00 = "NONE" *)
  (* enum_value_01 = "READ_CSR" *)
  (* enum_value_10 = "WRITE_CSR" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:530" *)
  wire [1:0] csr__ctrl__op;
  (* enum_base_type = "CSRSel" *)
  (* enum_value_0 = "INSN_CSR" *)
  (* enum_value_1 = "TRG_CSR" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:566" *)
  wire csr__route__csr_sel;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:567" *)
  wire [7:0] csr__route__target;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:452" *)
  wire [7:0] decode__requested_op;
  (* enum_base_type = "ExceptCtl" *)
  (* enum_value_000 = "NONE" *)
  (* enum_value_001 = "LATCH_DECODER" *)
  (* enum_value_010 = "LATCH_JAL" *)
  (* enum_value_011 = "LATCH_STORE_ADR" *)
  (* enum_value_100 = "LATCH_LOAD_ADR" *)
  (* enum_value_101 = "ENTER_INT" *)
  (* enum_value_110 = "LEAVE_INT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:124" *)
  wire [2:0] exception__except_ctl;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:125" *)
  input exception__exception;
  wire exception__exception;
  (* enum_base_type = "MemSel" *)
  (* enum_value_00 = "AUTO" *)
  (* enum_value_01 = "BYTE" *)
  (* enum_value_10 = "HWORD" *)
  (* enum_value_11 = "WORD" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:123" *)
  wire [1:0] exception__mem_sel;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [47:0] fields;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [2:0] \fields.a_src ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.alu_i_mod ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [1:0] \fields.alu_o_mod ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [3:0] \fields.alu_op ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [2:0] \fields.b_src ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [1:0] \fields.cond_test ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [1:0] \fields.csr_op ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.csr_sel ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [2:0] \fields.except_ctl ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.insn_fetch ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.invert_test ;
  (* enum_base_type = "JmpType" *)
  (* enum_value_00 = "CONT" *)
  (* enum_value_01 = "MAP" *)
  (* enum_value_10 = "DIRECT" *)
  (* enum_value_11 = "DIRECT_ZERO" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [1:0] \fields.jmp_type ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.latch_a ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.latch_adr ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.latch_b ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.latch_data ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.mem_extend ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.mem_req ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [1:0] \fields.mem_sel ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [1:0] \fields.pc_action ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.reg_r_sel ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.reg_read ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.reg_w_sel ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.reg_write ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [7:0] \fields.target ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.write_mem ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:226" *)
  wire gp__ctrl__reg_read;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:227" *)
  wire gp__ctrl__reg_write;
  (* enum_base_type = "RegRSel" *)
  (* enum_value_0 = "INSN_RS1" *)
  (* enum_value_1 = "INSN_RS2" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:258" *)
  wire gp__route__reg_r_sel;
  (* enum_base_type = "RegWSel" *)
  (* enum_value_0 = "INSN_RD" *)
  (* enum_value_1 = "ZERO" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:259" *)
  wire gp__route__reg_w_sel;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:489" *)
  wire invert_test;
  (* enum_base_type = "JmpType" *)
  (* enum_value_00 = "CONT" *)
  (* enum_value_01 = "MAP" *)
  (* enum_value_10 = "DIRECT" *)
  (* enum_value_11 = "DIRECT_ZERO" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:487" *)
  wire [1:0] jmp_type;
  (* enum_base_type = "JmpType" *)
  (* enum_value_00 = "CONT" *)
  (* enum_value_01 = "MAP" *)
  (* enum_value_10 = "DIRECT" *)
  (* enum_value_11 = "DIRECT_ZERO" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:632" *)
  wire [1:0] \jmp_type$33 ;
  (* enum_base_type = "MemExtend" *)
  (* enum_value_0 = "ZERO" *)
  (* enum_value_1 = "SIGN" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:469" *)
  wire mem__extend;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:468" *)
  wire mem__insn_fetch;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:471" *)
  wire mem__latch_adr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:470" *)
  wire mem__latch_data;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:464" *)
  wire mem__req;
  (* enum_base_type = "MemSel" *)
  (* enum_value_00 = "AUTO" *)
  (* enum_value_01 = "BYTE" *)
  (* enum_value_10 = "HWORD" *)
  (* enum_value_11 = "WORD" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:465" *)
  wire [1:0] mem__sel;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:466" *)
  input mem__valid;
  wire mem__valid;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:467" *)
  wire mem__write;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:452" *)
  input [7:0] opcode_adr;
  wire [7:0] opcode_adr;
  (* enum_base_type = "PcAction" *)
  (* enum_value_00 = "HOLD" *)
  (* enum_value_01 = "INC" *)
  (* enum_value_10 = "LOAD_ALU_O" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:69" *)
  wire [1:0] pc__action;
  output [34:0] \port$119$13 ;
  wire [34:0] \port$119$13 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:482" *)
  reg raw_test;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:631" *)
  output [7:0] target;
  wire [7:0] target;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:631" *)
  wire [7:0] \target$32 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:644" *)
  reg test;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:483" *)
  wire \test$35 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:638" *)
  wire [7:0] vec_adr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:443" *)
  wire [7:0] \vec_adr$39 ;
  assign \$1  = ~ (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:551" *) raw_test;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:480" *)
  \sentinel_cpu.control.sequencer  sequencer (
    .adr(addr),
    .clk(clk),
    .opcode_adr(opcode_adr),
    .\port$119$0 (fields[9:0]),
    .rst(rst),
    .test(test)
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:479" *)
  \sentinel_cpu.control.ucoderom  ucoderom (
    .clk(clk),
    .fields(fields),
    .r_port__addr(addr),
    .rst(rst)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    casez (fields[11:10])
      2'h0:
          raw_test = exception__exception;
      2'h1:
          raw_test = alu__ctrl__zero;
      2'h2:
          raw_test = mem__valid;
      2'h3:
          raw_test = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$7 ) begin end
    (* full_case = 32'd1 *)
    if (fields[12]) begin
      test = \$1 ;
    end else begin
      test = raw_test;
    end
  end
  assign csr__route__target = fields[7:0];
  assign jmp_type = fields[9:8];
  assign cond_test = fields[11:10];
  assign invert_test = fields[12];
  assign pc__action = fields[14:13];
  assign gp__ctrl__reg_read = fields[30];
  assign gp__ctrl__reg_write = fields[31];
  assign csr__ctrl__op = fields[35:34];
  assign gp__route__reg_r_sel = fields[32];
  assign gp__route__reg_w_sel = fields[33];
  assign csr__route__csr_sel = fields[36];
  assign alu__route__a_src = fields[19:17];
  assign alu__route__b_src = fields[22:20];
  assign alu__route__latch_a = fields[15];
  assign alu__route__latch_b = fields[16];
  assign alu__ctrl__op = fields[26:23];
  assign alu__ctrl__imod = fields[27];
  assign alu__ctrl__omod = fields[29:28];
  assign mem__req = fields[37];
  assign mem__sel = fields[39:38];
  assign exception__mem_sel = fields[39:38];
  assign mem__latch_adr = fields[41];
  assign mem__latch_data = fields[42];
  assign mem__write = fields[43];
  assign mem__insn_fetch = fields[44];
  assign mem__extend = fields[40];
  assign csr__ctrl__exception = fields[47:45];
  assign exception__except_ctl = fields[47:45];
  assign adr = addr;
  assign \target$32  = fields[7:0];
  assign \jmp_type$33  = fields[9:8];
  assign \test$35  = test;
  assign decode__requested_op = opcode_adr;
  assign vec_adr = 8'h00;
  assign \vec_adr$39  = 8'h00;
  assign target = fields[7:0];
  assign \port$119$13  = fields[47:13];
  assign \fields.target  = fields[7:0];
  assign \fields.jmp_type  = fields[9:8];
  assign \fields.cond_test  = fields[11:10];
  assign \fields.invert_test  = fields[12];
  assign \fields.pc_action  = fields[14:13];
  assign \fields.latch_a  = fields[15];
  assign \fields.latch_b  = fields[16];
  assign \fields.a_src  = fields[19:17];
  assign \fields.b_src  = fields[22:20];
  assign \fields.alu_op  = fields[26:23];
  assign \fields.alu_i_mod  = fields[27];
  assign \fields.alu_o_mod  = fields[29:28];
  assign \fields.reg_read  = fields[30];
  assign \fields.reg_write  = fields[31];
  assign \fields.reg_r_sel  = fields[32];
  assign \fields.reg_w_sel  = fields[33];
  assign \fields.csr_op  = fields[35:34];
  assign \fields.csr_sel  = fields[36];
  assign \fields.mem_req  = fields[37];
  assign \fields.mem_sel  = fields[39:38];
  assign \fields.mem_extend  = fields[40];
  assign \fields.latch_adr  = fields[41];
  assign \fields.latch_data  = fields[42];
  assign \fields.write_mem  = fields[43];
  assign \fields.insn_fetch  = fields[44];
  assign \fields.except_ctl  = fields[47:45];
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:647" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.control.sequencer (rst, \port$119$0 , test, adr, opcode_adr, clk);
  reg \$auto$verilog_backend.cc:2355:dump_module$8  = 0;
  wire [8:0] \$1 ;
  reg [7:0] \$2 ;
  reg \$3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:636" *)
  output [7:0] adr;
  reg [7:0] adr;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:640" *)
  reg ice40_rst_guard = 1'h1;
  (* enum_base_type = "JmpType" *)
  (* enum_value_00 = "CONT" *)
  (* enum_value_01 = "MAP" *)
  (* enum_value_10 = "DIRECT" *)
  (* enum_value_11 = "DIRECT_ZERO" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:632" *)
  wire [1:0] jmp_type;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:639" *)
  reg [7:0] next_adr = 8'h02;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:637" *)
  input [7:0] opcode_adr;
  wire [7:0] opcode_adr;
  input [9:0] \port$119$0 ;
  wire [9:0] \port$119$0 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:631" *)
  wire [7:0] target;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:644" *)
  input test;
  wire test;
  assign \$1  = adr + (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:649" *) 1'h1;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:639" *)
  always @(posedge clk)
    next_adr <= \$2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:640" *)
  always @(posedge clk)
    ice40_rst_guard <= \$3 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$8 ) begin end
    \$2  = \$1 [7:0];
    if (rst) begin
      \$2  = 8'h02;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$8 ) begin end
    \$3  = 1'h0;
    if (rst) begin
      \$3  = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$8 ) begin end
    (* full_case = 32'd1 *)
    casez (\port$119$0 [9:8])
      2'h0:
          adr = next_adr;
      2'h1:
          (* full_case = 32'd1 *)
          if (test) begin
            adr = \port$119$0 [7:0];
          end else begin
            adr = opcode_adr;
          end
      2'h2:
          (* full_case = 32'd1 *)
          if (test) begin
            adr = \port$119$0 [7:0];
          end else begin
            adr = next_adr;
          end
      2'h3:
          (* full_case = 32'd1 *)
          if (test) begin
            adr = \port$119$0 [7:0];
          end else begin
            adr = 8'h00;
          end
    endcase
    if (ice40_rst_guard) begin
      adr = next_adr;
    end
  end
  assign jmp_type = \port$119$0 [9:8];
  assign target = \port$119$0 [7:0];
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:181" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.control.ucoderom (rst, fields, r_port__addr, clk);
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire [7:0] addr;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/memory.py:241" *)
  output [47:0] fields;
  wire [47:0] fields;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [2:0] \fields.a_src ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.alu_i_mod ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [1:0] \fields.alu_o_mod ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [3:0] \fields.alu_op ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [2:0] \fields.b_src ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [1:0] \fields.cond_test ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [1:0] \fields.csr_op ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.csr_sel ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [2:0] \fields.except_ctl ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.insn_fetch ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.invert_test ;
  (* enum_base_type = "JmpType" *)
  (* enum_value_00 = "CONT" *)
  (* enum_value_01 = "MAP" *)
  (* enum_value_10 = "DIRECT" *)
  (* enum_value_11 = "DIRECT_ZERO" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [1:0] \fields.jmp_type ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.latch_a ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.latch_adr ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.latch_b ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.latch_data ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.mem_extend ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.mem_req ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [1:0] \fields.mem_sel ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [1:0] \fields.pc_action ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.reg_r_sel ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.reg_read ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.reg_w_sel ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.reg_write ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire [7:0] \fields.target ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:175" *)
  wire \fields.write_mem ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  input [7:0] r_port__addr;
  wire [7:0] r_port__addr;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/memory.py:241" *)
  wire [47:0] r_port__data;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/ucoderom.py:173" *)
  reg [47:0] ucode_mem [255:0];
  initial begin
    ucode_mem[0] = 48'h102040001a00;
    ucode_mem[1] = 48'h2001400081f0;
    ucode_mem[2] = 48'h000000378c00;
    ucode_mem[3] = 48'h000001000c00;
    ucode_mem[4] = 48'h000281000c00;
    ucode_mem[5] = 48'h001800005f0a;
    ucode_mem[6] = 48'h000000000000;
    ucode_mem[7] = 48'h000000000000;
    ucode_mem[8] = 48'h000000212e0e;
    ucode_mem[9] = 48'h000000210e12;
    ucode_mem[10] = 48'h000000210e16;
    ucode_mem[11] = 48'h000000000eff;
    ucode_mem[12] = 48'h000000212e1a;
    ucode_mem[13] = 48'h000000210e1e;
    ucode_mem[14] = 48'h000000000c00;
    ucode_mem[15] = 48'h020000000c00;
    ucode_mem[16] = 48'h016000479a10;
    ucode_mem[17] = 48'h000000000eb5;
    ucode_mem[18] = 48'h000000000c00;
    ucode_mem[19] = 48'h8280000002f0;
    ucode_mem[20] = 48'h01a000479a14;
    ucode_mem[21] = 48'h000000002eb5;
    ucode_mem[22] = 48'h000000000c00;
    ucode_mem[23] = 48'h82c0000002f0;
    ucode_mem[24] = 48'h00e000479a18;
    ucode_mem[25] = 48'h000000002eb5;
    ucode_mem[26] = 48'h000000000c00;
    ucode_mem[27] = 48'h020000000c00;
    ucode_mem[28] = 48'h006000479a1c;
    ucode_mem[29] = 48'h000000000eb5;
    ucode_mem[30] = 48'h000000000c00;
    ucode_mem[31] = 48'h8280000002f0;
    ucode_mem[32] = 48'h00a000479a20;
    ucode_mem[33] = 48'h000000002eb5;
    ucode_mem[34] = 48'h000000000000;
    ucode_mem[35] = 48'h000000000000;
    ucode_mem[36] = 48'h2000400001f0;
    ucode_mem[37] = 48'h00000037ae31;
    ucode_mem[38] = 48'h00000007ae34;
    ucode_mem[39] = 48'h00040007ae35;
    ucode_mem[40] = 48'h00040006ae32;
    ucode_mem[41] = 48'h00040006ae49;
    ucode_mem[42] = 48'h00040006ae4b;
    ucode_mem[43] = 48'h00000057ae34;
    ucode_mem[44] = 48'h00040057ae35;
    ucode_mem[45] = 48'h00040006ae37;
    ucode_mem[46] = 48'h00040006ae3b;
    ucode_mem[47] = 48'h000000000000;
    ucode_mem[48] = 48'h000000002e00;
    ucode_mem[49] = 48'h000001000eb5;
    ucode_mem[50] = 48'h000000610c00;
    ucode_mem[51] = 48'h000000000eb5;
    ucode_mem[52] = 48'h000000000eb6;
    ucode_mem[53] = 48'h000000610c00;
    ucode_mem[54] = 48'h000800000eb5;
    ucode_mem[55] = 48'h000000610c00;
    ucode_mem[56] = 48'h000000510c00;
    ucode_mem[57] = 48'h000080048c00;
    ucode_mem[58] = 48'h000001800eb6;
    ucode_mem[59] = 48'h000000610c00;
    ucode_mem[60] = 48'h0004005b8c00;
    ucode_mem[61] = 48'h000082610c00;
    ucode_mem[62] = 48'h000000048c00;
    ucode_mem[63] = 48'h000001000eb6;
    ucode_mem[64] = 48'h000000212e53;
    ucode_mem[65] = 48'h000000212e59;
    ucode_mem[66] = 48'h000000212e54;
    ucode_mem[67] = 48'h000000212e55;
    ucode_mem[68] = 48'h000000212e56;
    ucode_mem[69] = 48'h000000212e5e;
    ucode_mem[70] = 48'h000000212e57;
    ucode_mem[71] = 48'h000000212e58;
    ucode_mem[72] = 48'h000000000eff;
    ucode_mem[73] = 48'h000040610c00;
    ucode_mem[74] = 48'h000000010e39;
    ucode_mem[75] = 48'h000040610c00;
    ucode_mem[76] = 48'h0004000b8e3d;
    ucode_mem[77] = 48'h000000212e63;
    ucode_mem[78] = 48'h000000000000;
    ucode_mem[79] = 48'h000000000000;
    ucode_mem[80] = 48'h000000138c00;
    ucode_mem[81] = 48'h000000002c00;
    ucode_mem[82] = 48'h000080000e00;
    ucode_mem[83] = 48'h102000000eb5;
    ucode_mem[84] = 48'h10200c000eb5;
    ucode_mem[85] = 48'h102004000eb5;
    ucode_mem[86] = 48'h102002000eb5;
    ucode_mem[87] = 48'h102001800eb5;
    ucode_mem[88] = 48'h102001000eb5;
    ucode_mem[89] = 48'h000040068c00;
    ucode_mem[90] = 48'h000000218c00;
    ucode_mem[91] = 48'h000042b38668;
    ucode_mem[92] = 48'h000080848c00;
    ucode_mem[93] = 48'h000002b5975c;
    ucode_mem[94] = 48'h000040068c00;
    ucode_mem[95] = 48'h000000218c00;
    ucode_mem[96] = 48'h000043338668;
    ucode_mem[97] = 48'h000080848c00;
    ucode_mem[98] = 48'h000003359761;
    ucode_mem[99] = 48'h0000400c8c00;
    ucode_mem[100] = 48'h000001008c00;
    ucode_mem[101] = 48'h000043b58668;
    ucode_mem[102] = 48'h000080848c00;
    ucode_mem[103] = 48'h000003b59766;
    ucode_mem[104] = 48'h000000078c00;
    ucode_mem[105] = 48'h000000000eb5;
    ucode_mem[106] = 48'h000000000000;
    ucode_mem[107] = 48'h000000000000;
    ucode_mem[108] = 48'h000000000000;
    ucode_mem[109] = 48'h000000000000;
    ucode_mem[110] = 48'h000000000000;
    ucode_mem[111] = 48'h000000000000;
    ucode_mem[112] = 48'h000000000000;
    ucode_mem[113] = 48'h000000000000;
    ucode_mem[114] = 48'h000000000000;
    ucode_mem[115] = 48'h000000000000;
    ucode_mem[116] = 48'h000000000000;
    ucode_mem[117] = 48'h000000000000;
    ucode_mem[118] = 48'h000000000000;
    ucode_mem[119] = 48'h000000000000;
    ucode_mem[120] = 48'h000000000000;
    ucode_mem[121] = 48'h000000000000;
    ucode_mem[122] = 48'h000000000000;
    ucode_mem[123] = 48'h000000000000;
    ucode_mem[124] = 48'h000000000000;
    ucode_mem[125] = 48'h000000000000;
    ucode_mem[126] = 48'h000000000000;
    ucode_mem[127] = 48'h000000000000;
    ucode_mem[128] = 48'h000140212e9d;
    ucode_mem[129] = 48'h000140210ea2;
    ucode_mem[130] = 48'h000140210ea7;
    ucode_mem[131] = 48'h000000938e94;
    ucode_mem[132] = 48'h000000938c00;
    ucode_mem[133] = 48'h000000001697;
    ucode_mem[134] = 48'h4000000002f0;
    ucode_mem[135] = 48'h000000004e00;
    ucode_mem[136] = 48'h000000010e84;
    ucode_mem[137] = 48'h000000010e83;
    ucode_mem[138] = 48'h000000000eff;
    ucode_mem[139] = 48'h000000000eff;
    ucode_mem[140] = 48'h000000010e90;
    ucode_mem[141] = 48'h000000010e91;
    ucode_mem[142] = 48'h000000010e92;
    ucode_mem[143] = 48'h000000010e93;
    ucode_mem[144] = 48'h00000c138e94;
    ucode_mem[145] = 48'h00001c138e94;
    ucode_mem[146] = 48'h000004138e94;
    ucode_mem[147] = 48'h000014138e94;
    ucode_mem[148] = 48'h000000000697;
    ucode_mem[149] = 48'h4000000002f0;
    ucode_mem[150] = 48'h000000004e00;
    ucode_mem[151] = 48'h000000002e00;
    ucode_mem[152] = 48'h000000210c00;
    ucode_mem[153] = 48'h000020000c00;
    ucode_mem[154] = 48'h4000001982f0;
    ucode_mem[155] = 48'h000000004c00;
    ucode_mem[156] = 48'h102000000eb5;
    ucode_mem[157] = 48'h000000078c00;
    ucode_mem[158] = 48'h020000000c00;
    ucode_mem[159] = 48'h044000000c00;
    ucode_mem[160] = 48'h086000001aa0;
    ucode_mem[161] = 48'h000000001f00;
    ucode_mem[162] = 48'h000000078c00;
    ucode_mem[163] = 48'h6280000002f0;
    ucode_mem[164] = 48'h048000002c00;
    ucode_mem[165] = 48'h08a000001aa5;
    ucode_mem[166] = 48'h000000001f00;
    ucode_mem[167] = 48'h000000078c00;
    ucode_mem[168] = 48'h62c0000002f0;
    ucode_mem[169] = 48'h04c000002c00;
    ucode_mem[170] = 48'h08e000001aaa;
    ucode_mem[171] = 48'h000000001f00;
    ucode_mem[172] = 48'h000000000000;
    ucode_mem[173] = 48'h000000000000;
    ucode_mem[174] = 48'h000000000000;
    ucode_mem[175] = 48'h000000000000;
    ucode_mem[176] = 48'h000000138c00;
    ucode_mem[177] = 48'h000000000c00;
    ucode_mem[178] = 48'h4000000002f0;
    ucode_mem[179] = 48'h00000019cc00;
    ucode_mem[180] = 48'h102000000eb5;
    ucode_mem[181] = 48'h1020c0000b01;
    ucode_mem[182] = 48'h102840000b01;
    ucode_mem[183] = 48'h000000000000;
    ucode_mem[184] = 48'h000000000000;
    ucode_mem[185] = 48'h000000000000;
    ucode_mem[186] = 48'h000000000000;
    ucode_mem[187] = 48'h000000000000;
    ucode_mem[188] = 48'h000000000000;
    ucode_mem[189] = 48'h000000000000;
    ucode_mem[190] = 48'h000000000000;
    ucode_mem[191] = 48'h000000000000;
    ucode_mem[192] = 48'h000000012ed1;
    ucode_mem[193] = 48'h000000012ed8;
    ucode_mem[194] = 48'h000000012ed2;
    ucode_mem[195] = 48'h000000012ed3;
    ucode_mem[196] = 48'h000000012ed4;
    ucode_mem[197] = 48'h000000012edc;
    ucode_mem[198] = 48'h000000012ed5;
    ucode_mem[199] = 48'h000000012ed6;
    ucode_mem[200] = 48'h000000012ed7;
    ucode_mem[201] = 48'h000000000eff;
    ucode_mem[202] = 48'h000000000eff;
    ucode_mem[203] = 48'h000000000eff;
    ucode_mem[204] = 48'h000000000eff;
    ucode_mem[205] = 48'h000000012ee0;
    ucode_mem[206] = 48'h000000000000;
    ucode_mem[207] = 48'h000000000000;
    ucode_mem[208] = 48'h00000027ae53;
    ucode_mem[209] = 48'h102000000eb5;
    ucode_mem[210] = 48'h10200c000eb5;
    ucode_mem[211] = 48'h102004000eb5;
    ucode_mem[212] = 48'h102002000eb5;
    ucode_mem[213] = 48'h102001800eb5;
    ucode_mem[214] = 48'h102001000eb5;
    ucode_mem[215] = 48'h102000800eb5;
    ucode_mem[216] = 48'h0000400c8c00;
    ucode_mem[217] = 48'h000141008c00;
    ucode_mem[218] = 48'h000002b5965c;
    ucode_mem[219] = 48'h000040000e68;
    ucode_mem[220] = 48'h0000400c8c00;
    ucode_mem[221] = 48'h000141008c00;
    ucode_mem[222] = 48'h000003359661;
    ucode_mem[223] = 48'h000040000e68;
    ucode_mem[224] = 48'h0000400c8c00;
    ucode_mem[225] = 48'h000141008c00;
    ucode_mem[226] = 48'h000003b59666;
    ucode_mem[227] = 48'h000040000e68;
    ucode_mem[228] = 48'h000000000000;
    ucode_mem[229] = 48'h000000000000;
    ucode_mem[230] = 48'h000000000000;
    ucode_mem[231] = 48'h000000000000;
    ucode_mem[232] = 48'h000000000000;
    ucode_mem[233] = 48'h000000000000;
    ucode_mem[234] = 48'h000000000000;
    ucode_mem[235] = 48'h000000000000;
    ucode_mem[236] = 48'h000000000000;
    ucode_mem[237] = 48'h000000000000;
    ucode_mem[238] = 48'h000000000000;
    ucode_mem[239] = 48'h000000000000;
    ucode_mem[240] = 48'ha01400178c05;
    ucode_mem[241] = 48'h000000610c00;
    ucode_mem[242] = 48'h001800710c09;
    ucode_mem[243] = 48'h000000004c00;
    ucode_mem[244] = 48'h103800001f0a;
    ucode_mem[245] = 48'h000000000000;
    ucode_mem[246] = 48'h000000000000;
    ucode_mem[247] = 48'h000000000000;
    ucode_mem[248] = 48'h001400068c09;
    ucode_mem[249] = 48'h000000610c00;
    ucode_mem[250] = 48'h000000000c00;
    ucode_mem[251] = 48'h000000004c00;
    ucode_mem[252] = 48'hd02000000e00;
    ucode_mem[253] = 48'h000000000000;
    ucode_mem[254] = 48'h000000000efe;
    ucode_mem[255] = 48'h000000000eff;
  end
  reg [47:0] _0_;
  always @(posedge clk) begin
    _0_ <= ucode_mem[r_port__addr];
  end
  assign fields = _0_;
  assign addr = r_port__addr;
  assign r_port__data = fields;
  assign \fields.target  = fields[7:0];
  assign \fields.jmp_type  = fields[9:8];
  assign \fields.cond_test  = fields[11:10];
  assign \fields.invert_test  = fields[12];
  assign \fields.pc_action  = fields[14:13];
  assign \fields.latch_a  = fields[15];
  assign \fields.latch_b  = fields[16];
  assign \fields.a_src  = fields[19:17];
  assign \fields.b_src  = fields[22:20];
  assign \fields.alu_op  = fields[26:23];
  assign \fields.alu_i_mod  = fields[27];
  assign \fields.alu_o_mod  = fields[29:28];
  assign \fields.reg_read  = fields[30];
  assign \fields.reg_write  = fields[31];
  assign \fields.reg_r_sel  = fields[32];
  assign \fields.reg_w_sel  = fields[33];
  assign \fields.csr_op  = fields[35:34];
  assign \fields.csr_sel  = fields[36];
  assign \fields.mem_req  = fields[37];
  assign \fields.mem_sel  = fields[39:38];
  assign \fields.mem_extend  = fields[40];
  assign \fields.latch_adr  = fields[41];
  assign \fields.latch_data  = fields[42];
  assign \fields.write_mem  = fields[43];
  assign \fields.insn_fetch  = fields[44];
  assign \fields.except_ctl  = fields[47:45];
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:889" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.datapath (rst, ctrl__action, \port$119$30 , pub__ctrl__op, pub__ctrl__exception, gp__dat_r, pub__ctrl__allow_zero_wr, pub__mip_w, pub__adr_r, pub__adr_w, pub__adr, pub__dat_w, pc__dat_r, csr__dat_r, csr__mip_r, csr__mstatus_r, csr__mie_r, clk);
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:646" *)
  wire [4:0] csr__adr;
  (* enum_base_type = "ExceptCtl" *)
  (* enum_value_000 = "NONE" *)
  (* enum_value_001 = "LATCH_DECODER" *)
  (* enum_value_010 = "LATCH_JAL" *)
  (* enum_value_011 = "LATCH_STORE_ADR" *)
  (* enum_value_100 = "LATCH_LOAD_ADR" *)
  (* enum_value_101 = "ENTER_INT" *)
  (* enum_value_110 = "LEAVE_INT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:531" *)
  wire [2:0] csr__ctrl__exception;
  (* enum_base_type = "CSROp" *)
  (* enum_value_00 = "NONE" *)
  (* enum_value_01 = "READ_CSR" *)
  (* enum_value_10 = "WRITE_CSR" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:530" *)
  wire [1:0] csr__ctrl__op;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:647" *)
  output [31:0] csr__dat_r;
  wire [31:0] csr__dat_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:648" *)
  wire [31:0] csr__dat_w;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  output [31:0] csr__mie_r;
  wire [31:0] csr__mie_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mie_r._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mie_r._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mie_r._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [19:0] \csr__mie_r._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mie_r.meie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mie_r.msie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mie_r.mtie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  output [31:0] csr__mip_r;
  wire [31:0] csr__mip_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mip_r._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mip_r._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mip_r._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [19:0] \csr__mip_r._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mip_r.meip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mip_r.msip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mip_r.mtip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [31:0] csr__mip_w;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mip_w._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mip_w._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mip_w._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [19:0] \csr__mip_w._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mip_w.meip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mip_w.msip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mip_w.mtip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  output [31:0] csr__mstatus_r;
  wire [31:0] csr__mstatus_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mstatus_r._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mstatus_r._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [2:0] \csr__mstatus_r._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [18:0] \csr__mstatus_r._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mstatus_r.mie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire \csr__mstatus_r.mpie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  wire [1:0] \csr__mstatus_r.mpp ;
  (* enum_base_type = "PcAction" *)
  (* enum_value_00 = "HOLD" *)
  (* enum_value_01 = "INC" *)
  (* enum_value_10 = "LOAD_ALU_O" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:69" *)
  input [1:0] ctrl__action;
  wire [1:0] ctrl__action;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire [29:0] dat_r;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire [29:0] dat_w;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:311" *)
  wire [4:0] gp__adr_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:312" *)
  wire [4:0] gp__adr_w;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:228" *)
  wire gp__ctrl__allow_zero_wr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:226" *)
  wire gp__ctrl__reg_read;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:227" *)
  wire gp__ctrl__reg_write;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:363" *)
  output [31:0] gp__dat_r;
  wire [31:0] gp__dat_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:314" *)
  wire [31:0] gp__dat_w;
  (* enum_base_type = "PcAction" *)
  (* enum_value_00 = "HOLD" *)
  (* enum_value_01 = "INC" *)
  (* enum_value_10 = "LOAD_ALU_O" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:69" *)
  wire [1:0] pc__ctrl__action;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  output [29:0] pc__dat_r;
  wire [29:0] pc__dat_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:107" *)
  wire [29:0] pc__dat_w;
  input [1:0] \port$119$30 ;
  wire [1:0] \port$119$30 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:362" *)
  wire [4:0] priv__adr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:362" *)
  wire [4:0] \priv__adr$39 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:363" *)
  wire [31:0] priv__dat_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:363" *)
  wire [31:0] \priv__dat_r$41 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:364" *)
  wire [31:0] priv__dat_w;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:364" *)
  wire [31:0] \priv__dat_w$43 ;
  (* enum_base_type = "CSROp" *)
  (* enum_value_00 = "NONE" *)
  (* enum_value_01 = "READ_CSR" *)
  (* enum_value_10 = "WRITE_CSR" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:365" *)
  wire [1:0] priv__op;
  (* enum_base_type = "CSROp" *)
  (* enum_value_00 = "NONE" *)
  (* enum_value_01 = "READ_CSR" *)
  (* enum_value_10 = "WRITE_CSR" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:365" *)
  wire [1:0] \priv__op$45 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:362" *)
  input [4:0] pub__adr;
  wire [4:0] pub__adr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:311" *)
  input [4:0] pub__adr_r;
  wire [4:0] pub__adr_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:312" *)
  input [4:0] pub__adr_w;
  wire [4:0] pub__adr_w;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:228" *)
  input pub__ctrl__allow_zero_wr;
  wire pub__ctrl__allow_zero_wr;
  (* enum_base_type = "ExceptCtl" *)
  (* enum_value_000 = "NONE" *)
  (* enum_value_001 = "LATCH_DECODER" *)
  (* enum_value_010 = "LATCH_JAL" *)
  (* enum_value_011 = "LATCH_STORE_ADR" *)
  (* enum_value_100 = "LATCH_LOAD_ADR" *)
  (* enum_value_101 = "ENTER_INT" *)
  (* enum_value_110 = "LEAVE_INT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:531" *)
  input [2:0] pub__ctrl__exception;
  wire [2:0] pub__ctrl__exception;
  (* enum_base_type = "CSROp" *)
  (* enum_value_00 = "NONE" *)
  (* enum_value_01 = "READ_CSR" *)
  (* enum_value_10 = "WRITE_CSR" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:365" *)
  input [1:0] pub__ctrl__op;
  wire [1:0] pub__ctrl__op;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:226" *)
  wire pub__ctrl__reg_read;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:227" *)
  wire pub__ctrl__reg_write;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:313" *)
  wire [31:0] pub__dat_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:647" *)
  wire [31:0] \pub__dat_r$27 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:648" *)
  input [31:0] pub__dat_w;
  wire [31:0] pub__dat_w;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:648" *)
  wire [31:0] \pub__dat_w$28 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [31:0] pub__mie_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mie_r._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mie_r._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mie_r._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [19:0] \pub__mie_r._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mie_r.meie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mie_r.msie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mie_r.mtie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [31:0] pub__mip_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mip_r._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mip_r._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mip_r._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [19:0] \pub__mip_r._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mip_r.meip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mip_r.msip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mip_r.mtip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:882" *)
  input [31:0] pub__mip_w;
  wire [31:0] pub__mip_w;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mip_w._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mip_w._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mip_w._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [19:0] \pub__mip_w._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mip_w.meip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mip_w.msip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mip_w.mtip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [31:0] pub__mstatus_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mstatus_r._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mstatus_r._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mstatus_r._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [18:0] \pub__mstatus_r._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mstatus_r.mie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mstatus_r.mpie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [1:0] \pub__mstatus_r.mpp ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:893" *)
  \sentinel_cpu.datapath.csrfile  csrfile (
    .clk(clk),
    .priv__adr(pub__adr),
    .priv__dat_r(gp__dat_r),
    .priv__dat_w(priv__dat_w),
    .priv__op(pub__ctrl__op),
    .pub__ctrl__exception(pub__ctrl__exception),
    .pub__dat_r(csr__dat_r),
    .pub__dat_w(pub__dat_w),
    .pub__mie_r(csr__mie_r),
    .pub__mip_r(csr__mip_r),
    .pub__mip_w(pub__mip_w),
    .pub__mstatus_r(csr__mstatus_r),
    .rst(rst)
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:891" *)
  \sentinel_cpu.datapath.pc_mod  pc_mod (
    .clk(clk),
    .ctrl__action(ctrl__action),
    .dat_r(pc__dat_r),
    .dat_w(pub__dat_w[31:2]),
    .rst(rst)
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:892" *)
  \sentinel_cpu.datapath.regfile  regfile (
    .clk(clk),
    .\port$119$30 (\port$119$30 ),
    .priv__adr(pub__adr),
    .priv__dat_r(gp__dat_r),
    .priv__dat_w(priv__dat_w),
    .priv__op(pub__ctrl__op),
    .pub__adr_r(pub__adr_r),
    .pub__adr_w(pub__adr_w),
    .pub__ctrl__allow_zero_wr(pub__ctrl__allow_zero_wr),
    .pub__dat_w(pub__dat_w),
    .rst(rst)
  );
  assign gp__adr_r = pub__adr_r;
  assign gp__adr_w = pub__adr_w;
  assign gp__ctrl__allow_zero_wr = pub__ctrl__allow_zero_wr;
  assign pub__ctrl__reg_read = \port$119$30 [0];
  assign gp__ctrl__reg_read = \port$119$30 [0];
  assign pub__ctrl__reg_write = \port$119$30 [1];
  assign gp__ctrl__reg_write = \port$119$30 [1];
  assign pub__dat_r = gp__dat_r;
  assign gp__dat_w = pub__dat_w;
  assign pc__ctrl__action = ctrl__action;
  assign dat_r = pc__dat_r;
  assign dat_w = pub__dat_w[31:2];
  assign pc__dat_w = pub__dat_w[31:2];
  assign csr__adr = pub__adr;
  assign csr__ctrl__exception = pub__ctrl__exception;
  assign csr__ctrl__op = pub__ctrl__op;
  assign \pub__dat_r$27  = csr__dat_r;
  assign \pub__dat_w$28  = pub__dat_w;
  assign csr__dat_w = pub__dat_w;
  assign pub__mie_r = csr__mie_r;
  assign pub__mip_r = csr__mip_r;
  assign csr__mip_w = pub__mip_w;
  assign pub__mstatus_r = csr__mstatus_r;
  assign priv__adr = pub__adr;
  assign \priv__adr$39  = pub__adr;
  assign priv__dat_r = gp__dat_r;
  assign \priv__dat_r$41  = gp__dat_r;
  assign \priv__dat_w$43  = priv__dat_w;
  assign priv__op = pub__ctrl__op;
  assign \priv__op$45  = pub__ctrl__op;
  assign \csr__mie_r._padding0  = csr__mie_r[2:0];
  assign \csr__mie_r.msie  = csr__mie_r[3];
  assign \csr__mie_r._padding1  = csr__mie_r[6:4];
  assign \csr__mie_r.mtie  = csr__mie_r[7];
  assign \csr__mie_r._padding2  = csr__mie_r[10:8];
  assign \csr__mie_r.meie  = csr__mie_r[11];
  assign \csr__mie_r._padding3  = csr__mie_r[31:12];
  assign \pub__mie_r._padding0  = csr__mie_r[2:0];
  assign \pub__mie_r.msie  = csr__mie_r[3];
  assign \pub__mie_r._padding1  = csr__mie_r[6:4];
  assign \pub__mie_r.mtie  = csr__mie_r[7];
  assign \pub__mie_r._padding2  = csr__mie_r[10:8];
  assign \pub__mie_r.meie  = csr__mie_r[11];
  assign \pub__mie_r._padding3  = csr__mie_r[31:12];
  assign \csr__mip_r._padding0  = csr__mip_r[2:0];
  assign \csr__mip_r.msip  = csr__mip_r[3];
  assign \csr__mip_r._padding1  = csr__mip_r[6:4];
  assign \csr__mip_r.mtip  = csr__mip_r[7];
  assign \csr__mip_r._padding2  = csr__mip_r[10:8];
  assign \csr__mip_r.meip  = csr__mip_r[11];
  assign \csr__mip_r._padding3  = csr__mip_r[31:12];
  assign \pub__mip_r._padding0  = csr__mip_r[2:0];
  assign \pub__mip_r.msip  = csr__mip_r[3];
  assign \pub__mip_r._padding1  = csr__mip_r[6:4];
  assign \pub__mip_r.mtip  = csr__mip_r[7];
  assign \pub__mip_r._padding2  = csr__mip_r[10:8];
  assign \pub__mip_r.meip  = csr__mip_r[11];
  assign \pub__mip_r._padding3  = csr__mip_r[31:12];
  assign \pub__mip_w._padding0  = pub__mip_w[2:0];
  assign \pub__mip_w.msip  = pub__mip_w[3];
  assign \pub__mip_w._padding1  = pub__mip_w[6:4];
  assign \pub__mip_w.mtip  = pub__mip_w[7];
  assign \pub__mip_w._padding2  = pub__mip_w[10:8];
  assign \pub__mip_w.meip  = pub__mip_w[11];
  assign \pub__mip_w._padding3  = pub__mip_w[31:12];
  assign \csr__mip_w._padding0  = pub__mip_w[2:0];
  assign \csr__mip_w.msip  = pub__mip_w[3];
  assign \csr__mip_w._padding1  = pub__mip_w[6:4];
  assign \csr__mip_w.mtip  = pub__mip_w[7];
  assign \csr__mip_w._padding2  = pub__mip_w[10:8];
  assign \csr__mip_w.meip  = pub__mip_w[11];
  assign \csr__mip_w._padding3  = pub__mip_w[31:12];
  assign \csr__mstatus_r._padding0  = csr__mstatus_r[2:0];
  assign \csr__mstatus_r.mie  = csr__mstatus_r[3];
  assign \csr__mstatus_r._padding1  = csr__mstatus_r[6:4];
  assign \csr__mstatus_r.mpie  = csr__mstatus_r[7];
  assign \csr__mstatus_r._padding2  = csr__mstatus_r[10:8];
  assign \csr__mstatus_r.mpp  = csr__mstatus_r[12:11];
  assign \csr__mstatus_r._padding3  = csr__mstatus_r[31:13];
  assign \pub__mstatus_r._padding0  = csr__mstatus_r[2:0];
  assign \pub__mstatus_r.mie  = csr__mstatus_r[3];
  assign \pub__mstatus_r._padding1  = csr__mstatus_r[6:4];
  assign \pub__mstatus_r.mpie  = csr__mstatus_r[7];
  assign \pub__mstatus_r._padding2  = csr__mstatus_r[10:8];
  assign \pub__mstatus_r.mpp  = csr__mstatus_r[12:11];
  assign \pub__mstatus_r._padding3  = csr__mstatus_r[31:13];
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:694" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.datapath.csrfile (rst, priv__op, pub__ctrl__exception, priv__dat_r, pub__mip_w, priv__adr, pub__dat_w, pub__dat_r, priv__dat_w, pub__mip_r, pub__mstatus_r, pub__mie_r, clk);
  reg \$auto$verilog_backend.cc:2355:dump_module$9  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire \$18 ;
  reg [31:0] \$19 ;
  wire \$2 ;
  reg [31:0] \$20 ;
  reg [31:0] \$21 ;
  reg [4:0] \$22 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* init = 32'd0 *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:698" *)
  wire [31:0] mie;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:698" *)
  wire [2:0] \mie._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:698" *)
  wire [2:0] \mie._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:698" *)
  wire [2:0] \mie._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:698" *)
  wire [19:0] \mie._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:698" *)
  wire \mie.meie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:698" *)
  wire \mie.msie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:698" *)
  wire \mie.mtie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:697" *)
  wire [31:0] mip;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:697" *)
  wire [2:0] \mip._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:697" *)
  wire [2:0] \mip._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:697" *)
  wire [2:0] \mip._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:697" *)
  wire [19:0] \mip._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:697" *)
  wire \mip.meip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:697" *)
  wire \mip.msip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:697" *)
  wire \mip.mtip ;
  (* init = 32'd6144 *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:696" *)
  wire [31:0] mstatus;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:696" *)
  wire [2:0] \mstatus._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:696" *)
  wire [2:0] \mstatus._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:696" *)
  wire [2:0] \mstatus._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:696" *)
  wire [18:0] \mstatus._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:696" *)
  wire \mstatus.mie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:696" *)
  wire \mstatus.mpie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:696" *)
  wire [1:0] \mstatus.mpp ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:749" *)
  reg [4:0] prev_csr_adr = 5'h00;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:646" *)
  input [4:0] priv__adr;
  wire [4:0] priv__adr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:363" *)
  input [31:0] priv__dat_r;
  wire [31:0] priv__dat_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:364" *)
  output [31:0] priv__dat_w;
  reg [31:0] priv__dat_w;
  (* enum_base_type = "CSROp" *)
  (* enum_value_00 = "NONE" *)
  (* enum_value_01 = "READ_CSR" *)
  (* enum_value_10 = "WRITE_CSR" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:530" *)
  input [1:0] priv__op;
  wire [1:0] priv__op;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:646" *)
  wire [4:0] pub__adr;
  (* enum_base_type = "ExceptCtl" *)
  (* enum_value_000 = "NONE" *)
  (* enum_value_001 = "LATCH_DECODER" *)
  (* enum_value_010 = "LATCH_JAL" *)
  (* enum_value_011 = "LATCH_STORE_ADR" *)
  (* enum_value_100 = "LATCH_LOAD_ADR" *)
  (* enum_value_101 = "ENTER_INT" *)
  (* enum_value_110 = "LEAVE_INT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:531" *)
  input [2:0] pub__ctrl__exception;
  wire [2:0] pub__ctrl__exception;
  (* enum_base_type = "CSROp" *)
  (* enum_value_00 = "NONE" *)
  (* enum_value_01 = "READ_CSR" *)
  (* enum_value_10 = "WRITE_CSR" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:530" *)
  wire [1:0] pub__ctrl__op;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:647" *)
  output [31:0] pub__dat_r;
  reg [31:0] pub__dat_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:648" *)
  input [31:0] pub__dat_w;
  wire [31:0] pub__dat_w;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:698" *)
  output [31:0] pub__mie_r;
  reg [31:0] pub__mie_r = 32'd0;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mie_r._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mie_r._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mie_r._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [19:0] \pub__mie_r._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mie_r.meie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mie_r.msie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mie_r.mtie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:697" *)
  output [31:0] pub__mip_r;
  wire [31:0] pub__mip_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mip_r._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mip_r._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mip_r._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [19:0] \pub__mip_r._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mip_r.meip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mip_r.msip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mip_r.mtip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  input [31:0] pub__mip_w;
  wire [31:0] pub__mip_w;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mip_w._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mip_w._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mip_w._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [19:0] \pub__mip_w._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mip_w.meip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mip_w.msip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mip_w.mtip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:696" *)
  output [31:0] pub__mstatus_r;
  reg [31:0] pub__mstatus_r = 32'd6144;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mstatus_r._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mstatus_r._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [2:0] \pub__mstatus_r._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [18:0] \pub__mstatus_r._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mstatus_r.mie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire \pub__mstatus_r.mpie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:886" *)
  wire [1:0] \pub__mstatus_r.mpp ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:700" *)
  reg [31:0] read_buf = 32'd0;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  assign \$1  = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:754" *) prev_csr_adr;
  assign \$2  = prev_csr_adr == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:755" *) 4'hc;
  assign \$3  = \$1  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:754" *) \$2 ;
  assign \$4  = prev_csr_adr == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:756" *) 3'h4;
  assign \$5  = \$3  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:754" *) \$4 ;
  assign \$6  = ~ (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:754" *) \$5 ;
  assign \$7  = priv__adr == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:765" *) 3'h5;
  assign \$8  = priv__adr == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:766" *) 4'h9;
  assign \$9  = \$7  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:765" *) \$8 ;
  assign \$10  = priv__op == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:713" *) 2'h2;
  assign \$11  = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:714" *) priv__adr;
  assign \$12  = priv__adr == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:720" *) 3'h4;
  assign \$13  = priv__op == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:727" *) 1'h1;
  assign \$14  = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:728" *) priv__adr;
  assign \$15  = priv__adr == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:736" *) 3'h4;
  assign \$16  = priv__adr == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:742" *) 4'hc;
  assign \$17  = pub__ctrl__exception == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:775" *) 3'h5;
  assign \$18  = pub__ctrl__exception == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:780" *) 3'h6;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:696" *)
  always @(posedge clk)
    pub__mstatus_r <= \$19 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:698" *)
  always @(posedge clk)
    pub__mie_r <= \$20 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:700" *)
  always @(posedge clk)
    read_buf <= \$21 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:749" *)
  always @(posedge clk)
    prev_csr_adr <= \$22 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$9 ) begin end
    pub__dat_r = read_buf;
    if (\$6 ) begin
      pub__dat_r = priv__dat_r;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$9 ) begin end
    priv__dat_w[1:0] = pub__dat_w[1:0];
    if (\$9 ) begin
      priv__dat_w[1:0] = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$9 ) begin end
    \$19  = pub__mstatus_r;
    if (\$10 ) begin
      if (\$11 ) begin
        \$19 [3] = pub__dat_w[3];
        \$19 [7] = pub__dat_w[7];
      end
    end
    if (\$17 ) begin
      \$19 [7] = pub__mstatus_r[3];
      \$19 [3] = 1'h0;
    end else if (\$18 ) begin
      \$19 [3] = pub__mstatus_r[7];
      \$19 [7] = 1'h1;
    end
    if (rst) begin
      \$19  = 32'd6144;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$9 ) begin end
    \$20  = pub__mie_r;
    if (\$10 ) begin
      if (\$12 ) begin
        \$20 [11] = pub__dat_w[11];
      end
    end
    if (rst) begin
      \$20  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$9 ) begin end
    \$21  = read_buf;
    if (\$13 ) begin
      if (\$14 ) begin
        { \$21 [31:13], \$21 [10:8], \$21 [6:4], \$21 [2:0] } = 28'h0000000;
        \$21 [3] = pub__mstatus_r[3];
        \$21 [7] = pub__mstatus_r[7];
        \$21 [12:11] = pub__mstatus_r[12:11];
      end
      if (\$15 ) begin
        { \$21 [31:12], \$21 [10:0] } = 31'h00000000;
        \$21 [11] = pub__mie_r[11];
      end
      if (\$16 ) begin
        { \$21 [31:12], \$21 [10:0] } = 31'h00000000;
        \$21 [11] = pub__mip_r[11];
      end
    end
    if (rst) begin
      \$21  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$9 ) begin end
    \$22  = priv__adr;
    if (rst) begin
      \$22  = 5'h00;
    end
  end
  assign mstatus = pub__mstatus_r;
  assign mip = pub__mip_r;
  assign mie = pub__mie_r;
  assign pub__adr = priv__adr;
  assign pub__ctrl__op = priv__op;
  assign \pub__mstatus_r._padding0  = pub__mstatus_r[2:0];
  assign \pub__mstatus_r.mie  = pub__mstatus_r[3];
  assign \pub__mstatus_r._padding1  = pub__mstatus_r[6:4];
  assign \pub__mstatus_r.mpie  = pub__mstatus_r[7];
  assign \pub__mstatus_r._padding2  = pub__mstatus_r[10:8];
  assign \pub__mstatus_r.mpp  = pub__mstatus_r[12:11];
  assign \pub__mstatus_r._padding3  = pub__mstatus_r[31:13];
  assign \mstatus._padding0  = pub__mstatus_r[2:0];
  assign \mstatus.mie  = pub__mstatus_r[3];
  assign \mstatus._padding1  = pub__mstatus_r[6:4];
  assign \mstatus.mpie  = pub__mstatus_r[7];
  assign \mstatus._padding2  = pub__mstatus_r[10:8];
  assign \mstatus.mpp  = pub__mstatus_r[12:11];
  assign \mstatus._padding3  = pub__mstatus_r[31:13];
  assign \pub__mip_r._padding0  = pub__mip_r[2:0];
  assign \pub__mip_r.msip  = pub__mip_r[3];
  assign \pub__mip_r._padding1  = pub__mip_r[6:4];
  assign \pub__mip_r.mtip  = pub__mip_r[7];
  assign \pub__mip_r._padding2  = pub__mip_r[10:8];
  assign \pub__mip_r.meip  = pub__mip_r[11];
  assign \pub__mip_r._padding3  = pub__mip_r[31:12];
  assign \mip._padding0  = pub__mip_r[2:0];
  assign \mip.msip  = pub__mip_r[3];
  assign \mip._padding1  = pub__mip_r[6:4];
  assign \mip.mtip  = pub__mip_r[7];
  assign \mip._padding2  = pub__mip_r[10:8];
  assign \mip.meip  = pub__mip_r[11];
  assign \mip._padding3  = pub__mip_r[31:12];
  assign \pub__mie_r._padding0  = pub__mie_r[2:0];
  assign \pub__mie_r.msie  = pub__mie_r[3];
  assign \pub__mie_r._padding1  = pub__mie_r[6:4];
  assign \pub__mie_r.mtie  = pub__mie_r[7];
  assign \pub__mie_r._padding2  = pub__mie_r[10:8];
  assign \pub__mie_r.meie  = pub__mie_r[11];
  assign \pub__mie_r._padding3  = pub__mie_r[31:12];
  assign \mie._padding0  = pub__mie_r[2:0];
  assign \mie.msie  = pub__mie_r[3];
  assign \mie._padding1  = pub__mie_r[6:4];
  assign \mie.mtie  = pub__mie_r[7];
  assign \mie._padding2  = pub__mie_r[10:8];
  assign \mie.meie  = pub__mie_r[11];
  assign \mie._padding3  = pub__mie_r[31:12];
  assign \pub__mip_w._padding0  = pub__mip_w[2:0];
  assign \pub__mip_w.msip  = pub__mip_w[3];
  assign \pub__mip_w._padding1  = pub__mip_w[6:4];
  assign \pub__mip_w.mtip  = pub__mip_w[7];
  assign \pub__mip_w._padding2  = pub__mip_w[10:8];
  assign \pub__mip_w.meip  = pub__mip_w[11];
  assign \pub__mip_w._padding3  = pub__mip_w[31:12];
  assign pub__mip_r[11] = pub__mip_w[11];
  assign { pub__mip_r[31:12], pub__mip_r[10:0] } = 31'h00000000;
  always @*
    priv__dat_w[31:2] = pub__dat_w[31:2];
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:115" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.datapath.pc_mod (rst, ctrl__action, dat_w, dat_r, clk);
  reg \$auto$verilog_backend.cc:2355:dump_module$10  = 0;
  wire [30:0] \$1 ;
  reg [29:0] \$2 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* enum_base_type = "PcAction" *)
  (* enum_value_00 = "HOLD" *)
  (* enum_value_01 = "INC" *)
  (* enum_value_10 = "LOAD_ALU_O" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:69" *)
  input [1:0] ctrl__action;
  wire [1:0] ctrl__action;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  output [29:0] dat_r;
  reg [29:0] dat_r = 30'h00000000;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  input [29:0] dat_w;
  wire [29:0] dat_w;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  assign \$1  = dat_r + (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:119" *) 1'h1;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  always @(posedge clk)
    dat_r <= \$2 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$10 ) begin end
    \$2  = dat_r;
    casez (ctrl__action)
      2'h1:
          \$2  = \$1 [29:0];
      2'h2:
          \$2  = dat_w;
    endcase
    if (rst) begin
      \$2  = 30'h00000000;
    end
  end
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:393" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.datapath.regfile (rst, \port$119$30 , priv__op, priv__dat_r, pub__ctrl__allow_zero_wr, pub__adr_r, pub__adr_w, priv__adr, pub__dat_w, priv__dat_w, clk);
  reg \$auto$verilog_backend.cc:2355:dump_module$11  = 0;
  wire \$1 ;
  wire \$2 ;
  wire \$3 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  input [1:0] \port$119$30 ;
  wire [1:0] \port$119$30 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:362" *)
  input [4:0] priv__adr;
  wire [4:0] priv__adr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:313" *)
  output [31:0] priv__dat_r;
  wire [31:0] priv__dat_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:364" *)
  input [31:0] priv__dat_w;
  wire [31:0] priv__dat_w;
  (* enum_base_type = "CSROp" *)
  (* enum_value_00 = "NONE" *)
  (* enum_value_01 = "READ_CSR" *)
  (* enum_value_10 = "WRITE_CSR" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:365" *)
  input [1:0] priv__op;
  wire [1:0] priv__op;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:311" *)
  input [4:0] pub__adr_r;
  wire [4:0] pub__adr_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:312" *)
  input [4:0] pub__adr_w;
  wire [4:0] pub__adr_w;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:228" *)
  input pub__ctrl__allow_zero_wr;
  wire pub__ctrl__allow_zero_wr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:226" *)
  wire pub__ctrl__reg_read;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:227" *)
  wire pub__ctrl__reg_write;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:313" *)
  wire [31:0] pub__dat_r;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:314" *)
  input [31:0] pub__dat_w;
  wire [31:0] pub__dat_w;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/memory.py:240" *)
  reg [5:0] r_port__addr;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/memory.py:241" *)
  wire [31:0] r_port__data;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/memory.py:239" *)
  reg r_port__en;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/memory.py:401" *)
  reg [5:0] w_port__addr;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/memory.py:402" *)
  reg [31:0] w_port__data;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/memory.py:400" *)
  reg w_port__en;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:383" *)
  reg [31:0] mem [63:0];
  initial begin
    mem[0] = 32'd3735928559;
    mem[1] = 32'd0;
    mem[2] = 32'd0;
    mem[3] = 32'd0;
    mem[4] = 32'd0;
    mem[5] = 32'd0;
    mem[6] = 32'd0;
    mem[7] = 32'd0;
    mem[8] = 32'd0;
    mem[9] = 32'd0;
    mem[10] = 32'd0;
    mem[11] = 32'd0;
    mem[12] = 32'd0;
    mem[13] = 32'd0;
    mem[14] = 32'd0;
    mem[15] = 32'd0;
    mem[16] = 32'd0;
    mem[17] = 32'd0;
    mem[18] = 32'd0;
    mem[19] = 32'd0;
    mem[20] = 32'd0;
    mem[21] = 32'd0;
    mem[22] = 32'd0;
    mem[23] = 32'd0;
    mem[24] = 32'd0;
    mem[25] = 32'd0;
    mem[26] = 32'd0;
    mem[27] = 32'd0;
    mem[28] = 32'd0;
    mem[29] = 32'd0;
    mem[30] = 32'd0;
    mem[31] = 32'd0;
    mem[32] = 32'd0;
    mem[33] = 32'd0;
    mem[34] = 32'd0;
    mem[35] = 32'd0;
    mem[36] = 32'd0;
    mem[37] = 32'd0;
    mem[38] = 32'd0;
    mem[39] = 32'd0;
    mem[40] = 32'd0;
    mem[41] = 32'd0;
    mem[42] = 32'd0;
    mem[43] = 32'd0;
    mem[44] = 32'd0;
    mem[45] = 32'd0;
    mem[46] = 32'd0;
    mem[47] = 32'd0;
    mem[48] = 32'd0;
    mem[49] = 32'd0;
    mem[50] = 32'd0;
    mem[51] = 32'd0;
    mem[52] = 32'd0;
    mem[53] = 32'd0;
    mem[54] = 32'd0;
    mem[55] = 32'd0;
    mem[56] = 32'd0;
    mem[57] = 32'd0;
    mem[58] = 32'd0;
    mem[59] = 32'd0;
    mem[60] = 32'd0;
    mem[61] = 32'd0;
    mem[62] = 32'd0;
    mem[63] = 32'd0;
  end
  always @(posedge clk) begin
    if (w_port__en)
      mem[w_port__addr] <= w_port__data;
  end
  reg [31:0] _0_;
  always @(posedge clk) begin
    if (r_port__en) begin
      _0_ <= mem[r_port__addr];
      if (w_port__en && r_port__addr == w_port__addr)
        _0_ <= w_port__data;
    end
  end
  assign priv__dat_r = _0_;
  assign \$2  = pub__adr_w != (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:412" *) \$1 ;
  assign \$3  = \port$119$30 [1] & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/datapath.py:411" *) \$2 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$11 ) begin end
    r_port__addr = { 1'h0, pub__adr_r };
    casez (priv__op)
      2'h0:
          /* empty */;
      2'h1:
          r_port__addr = { 1'h1, priv__adr };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$11 ) begin end
    w_port__addr = { 1'h0, pub__adr_w };
    casez (priv__op)
      2'h0:
          /* empty */;
      2'h1:
          /* empty */;
      2'h2:
          w_port__addr = { 1'h1, priv__adr };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$11 ) begin end
    w_port__data = pub__dat_w;
    casez (priv__op)
      2'h0:
          /* empty */;
      2'h1:
          /* empty */;
      2'h2:
          w_port__data = priv__dat_w;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$11 ) begin end
    r_port__en = 1'h1;
    casez (priv__op)
      2'h0:
          r_port__en = \port$119$30 [0];
      2'h1:
          r_port__en = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$11 ) begin end
    w_port__en = 1'h0;
    casez (priv__op)
      2'h0:
          w_port__en = \$3 ;
      2'h1:
          /* empty */;
      2'h2:
          w_port__en = 1'h1;
    endcase
  end
  assign r_port__data = priv__dat_r;
  assign pub__dat_r = priv__dat_r;
  assign pub__ctrl__reg_read = \port$119$30 [0];
  assign pub__ctrl__reg_write = \port$119$30 [1];
  assign \$1  = pub__ctrl__allow_zero_wr;
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:650" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.decode (clk, rst, enable, src_a, src_b, dst, imm, requested_op, csr_encoding, exception, insn);
  reg \$auto$verilog_backend.cc:2355:dump_module$12  = 0;
  reg [4:0] \$1 ;
  reg [4:0] \$2 ;
  reg [4:0] \$3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:61" *)
  wire [11:0] addr;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:612" *)
  wire [1:0] csr_attr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:613" *)
  wire [1:0] \csr_attr$19 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:613" *)
  wire \csr_attr$19.ill ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:613" *)
  wire \csr_attr$19.ro0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:612" *)
  wire \csr_attr.ill ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:612" *)
  wire \csr_attr.ro0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:108" *)
  output [3:0] csr_encoding;
  wire [3:0] csr_encoding;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:108" *)
  wire [3:0] \csr_encoding$16 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:101" *)
  wire [1:0] data;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:101" *)
  wire \data.ill ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:101" *)
  wire \data.ro0 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire do_decode;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  output [4:0] dst;
  reg [4:0] dst = 5'h00;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:282" *)
  input enable;
  wire enable;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:613" *)
  output [31:0] exception;
  wire [31:0] exception;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:613" *)
  wire [31:0] \exception$21 ;
  (* enum_base_type = "MCause.Cause" *)
  (* enum_value_0000000000000000000000000000000 = "INSN_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000001 = "INSN_FAULT" *)
  (* enum_value_0000000000000000000000000000010 = "ILLEGAL_INSN" *)
  (* enum_value_0000000000000000000000000000011 = "BREAKPOINT" *)
  (* enum_value_0000000000000000000000000000100 = "LOAD_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000101 = "LOAD_FAULT" *)
  (* enum_value_0000000000000000000000000000110 = "STORE_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000111 = "STORE_FAULT" *)
  (* enum_value_0000000000000000000000000001000 = "ECALL_UMODE" *)
  (* enum_value_0000000000000000000000000001001 = "ECALL_SMODE" *)
  (* enum_value_0000000000000000000000000001011 = "ECALL_MMODE" *)
  (* enum_value_0000000000000000000000000001100 = "INSN_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001101 = "LOAD_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001111 = "STORE_PAGE_FAULT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:613" *)
  wire [30:0] \exception$21.e_type ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:613" *)
  wire \exception$21.valid ;
  (* enum_base_type = "MCause.Cause" *)
  (* enum_value_0000000000000000000000000000000 = "INSN_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000001 = "INSN_FAULT" *)
  (* enum_value_0000000000000000000000000000010 = "ILLEGAL_INSN" *)
  (* enum_value_0000000000000000000000000000011 = "BREAKPOINT" *)
  (* enum_value_0000000000000000000000000000100 = "LOAD_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000101 = "LOAD_FAULT" *)
  (* enum_value_0000000000000000000000000000110 = "STORE_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000111 = "STORE_FAULT" *)
  (* enum_value_0000000000000000000000000001000 = "ECALL_UMODE" *)
  (* enum_value_0000000000000000000000000001001 = "ECALL_SMODE" *)
  (* enum_value_0000000000000000000000000001011 = "ECALL_MMODE" *)
  (* enum_value_0000000000000000000000000001100 = "INSN_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001101 = "LOAD_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001111 = "STORE_PAGE_FAULT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:647" *)
  wire [30:0] \exception.e_type ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:647" *)
  wire \exception.valid ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:218" *)
  output [31:0] imm;
  wire [31:0] imm;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:218" *)
  wire [31:0] \imm$4 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:287" *)
  input [31:0] insn;
  wire [31:0] insn;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:81" *)
  wire [31:0] \insn$10 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:287" *)
  wire [31:0] \insn$18 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:214" *)
  wire [31:0] \insn$8 ;
  (* enum_base_type = "OpcodeType" *)
  (* enum_value_00000 = "LOAD" *)
  (* enum_value_00010 = "CUSTOM_0" *)
  (* enum_value_00011 = "MISC_MEM" *)
  (* enum_value_00100 = "OP_IMM" *)
  (* enum_value_00101 = "AUIPC" *)
  (* enum_value_01000 = "STORE" *)
  (* enum_value_01100 = "OP" *)
  (* enum_value_01101 = "LUI" *)
  (* enum_value_11000 = "BRANCH" *)
  (* enum_value_11001 = "JALR" *)
  (* enum_value_11011 = "JAL" *)
  (* enum_value_11100 = "SYSTEM" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:647" *)
  wire [4:0] opcode;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:102" *)
  output [7:0] requested_op;
  wire [7:0] requested_op;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:102" *)
  wire [7:0] \requested_op$14 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  output [4:0] src_a;
  reg [4:0] src_a = 5'h00;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  wire [4:0] src_a_unreg;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  output [4:0] src_b;
  reg [4:0] src_b = 5'h00;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:76" *)
  wire start;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:282" *)
  wire \start$17 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  always @(posedge clk)
    src_a <= \$1 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  always @(posedge clk)
    src_b <= \$2 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/wiring.py:167" *)
  always @(posedge clk)
    dst <= \$3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:652" *)
  \sentinel_cpu.decode.csr_attr$27  \csr_attr$27  (
    .addr(insn[31:20]),
    .clk(clk),
    .data(csr_attr),
    .rst(rst)
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:655" *)
  \sentinel_cpu.decode.except_ctrl  except_ctrl (
    .clk(clk),
    .csr_attr(csr_attr),
    .exception(exception),
    .insn(insn),
    .rst(rst),
    .start(enable)
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:653" *)
  \sentinel_cpu.decode.imm_gen  imm_gen (
    .clk(clk),
    .enable(enable),
    .imm(imm),
    .insn(insn),
    .rst(rst)
  );
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:654" *)
  \sentinel_cpu.decode.mapping  mapping (
    .clk(clk),
    .csr_attr(csr_attr),
    .csr_encoding(csr_encoding),
    .insn(insn),
    .requested_op(requested_op),
    .rst(rst),
    .start(enable)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$12 ) begin end
    \$1  = src_a;
    if (enable) begin
      \$1  = insn[19:15];
    end
    if (rst) begin
      \$1  = 5'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$12 ) begin end
    \$2  = src_b;
    if (enable) begin
      \$2  = insn[24:20];
    end
    if (rst) begin
      \$2  = 5'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$12 ) begin end
    \$3  = dst;
    if (enable) begin
      \$3  = insn[11:7];
    end
    if (rst) begin
      \$3  = 5'h00;
    end
  end
  assign opcode = insn[6:2];
  assign src_a_unreg = insn[19:15];
  assign \imm$4  = imm;
  assign addr = insn[31:20];
  assign do_decode = enable;
  assign \insn$8  = insn;
  assign start = enable;
  assign \insn$10  = insn;
  assign data = csr_attr;
  assign \requested_op$14  = requested_op;
  assign \csr_encoding$16  = csr_encoding;
  assign \start$17  = enable;
  assign \insn$18  = insn;
  assign \csr_attr$19  = csr_attr;
  assign \exception$21  = exception;
  assign \csr_attr.ill  = csr_attr[0];
  assign \csr_attr.ro0  = csr_attr[1];
  assign \data.ill  = csr_attr[0];
  assign \data.ro0  = csr_attr[1];
  assign \csr_attr$19.ill  = csr_attr[0];
  assign \csr_attr$19.ro0  = csr_attr[1];
  assign \exception.valid  = exception[0];
  assign \exception.e_type  = exception[31:1];
  assign \exception$21.valid  = exception[0];
  assign \exception$21.e_type  = exception[31:1];
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:104" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.decode.csr_attr$27 (clk, rst, data, addr);
  reg \$auto$verilog_backend.cc:2355:dump_module$13  = 0;
  reg [1:0] \$1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:61" *)
  input [11:0] addr;
  wire [11:0] addr;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:101" *)
  output [1:0] data;
  reg [1:0] data = 2'h0;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:101" *)
  wire \data.ill ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:101" *)
  wire \data.ro0 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:101" *)
  always @(posedge clk)
    data <= \$1 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$13 ) begin end
    (* full_case = 32'd1 *)
    casez ({ addr[11:10], addr[7:0] })
      10'h000:
          \$1  = 2'h0;
      10'h001:
          \$1  = 2'h2;
      10'h002:
          \$1  = 2'h1;
      10'h003:
          \$1  = 2'h1;
      10'h004:
          \$1  = 2'h0;
      10'h005:
          \$1  = 2'h0;
      10'h006:
          \$1  = 2'h1;
      10'h007:
          \$1  = 2'h1;
      10'h008:
          \$1  = 2'h1;
      10'h009:
          \$1  = 2'h1;
      10'h00a:
          \$1  = 2'h1;
      10'h00b:
          \$1  = 2'h1;
      10'h00c:
          \$1  = 2'h1;
      10'h00d:
          \$1  = 2'h1;
      10'h00e:
          \$1  = 2'h1;
      10'h00f:
          \$1  = 2'h1;
      10'h010:
          \$1  = 2'h2;
      10'h011:
          \$1  = 2'h1;
      10'h012:
          \$1  = 2'h1;
      10'h013:
          \$1  = 2'h1;
      10'h014:
          \$1  = 2'h1;
      10'h015:
          \$1  = 2'h1;
      10'h016:
          \$1  = 2'h1;
      10'h017:
          \$1  = 2'h1;
      10'h018:
          \$1  = 2'h1;
      10'h019:
          \$1  = 2'h1;
      10'h01a:
          \$1  = 2'h1;
      10'h01b:
          \$1  = 2'h1;
      10'h01c:
          \$1  = 2'h1;
      10'h01d:
          \$1  = 2'h1;
      10'h01e:
          \$1  = 2'h1;
      10'h01f:
          \$1  = 2'h1;
      10'h020:
          \$1  = 2'h2;
      10'h021:
          \$1  = 2'h1;
      10'h022:
          \$1  = 2'h1;
      10'h023:
          \$1  = 2'h2;
      10'h024:
          \$1  = 2'h2;
      10'h025:
          \$1  = 2'h2;
      10'h026:
          \$1  = 2'h2;
      10'h027:
          \$1  = 2'h2;
      10'h028:
          \$1  = 2'h2;
      10'h029:
          \$1  = 2'h2;
      10'h02a:
          \$1  = 2'h2;
      10'h02b:
          \$1  = 2'h2;
      10'h02c:
          \$1  = 2'h2;
      10'h02d:
          \$1  = 2'h2;
      10'h02e:
          \$1  = 2'h2;
      10'h02f:
          \$1  = 2'h2;
      10'h030:
          \$1  = 2'h2;
      10'h031:
          \$1  = 2'h2;
      10'h032:
          \$1  = 2'h2;
      10'h033:
          \$1  = 2'h2;
      10'h034:
          \$1  = 2'h2;
      10'h035:
          \$1  = 2'h2;
      10'h036:
          \$1  = 2'h2;
      10'h037:
          \$1  = 2'h2;
      10'h038:
          \$1  = 2'h2;
      10'h039:
          \$1  = 2'h2;
      10'h03a:
          \$1  = 2'h2;
      10'h03b:
          \$1  = 2'h2;
      10'h03c:
          \$1  = 2'h2;
      10'h03d:
          \$1  = 2'h2;
      10'h03e:
          \$1  = 2'h2;
      10'h03f:
          \$1  = 2'h2;
      10'h040:
          \$1  = 2'h0;
      10'h041:
          \$1  = 2'h0;
      10'h042:
          \$1  = 2'h0;
      10'h043:
          \$1  = 2'h2;
      10'h044:
          \$1  = 2'h0;
      10'h045:
          \$1  = 2'h1;
      10'h046:
          \$1  = 2'h1;
      10'h047:
          \$1  = 2'h1;
      10'h048:
          \$1  = 2'h1;
      10'h049:
          \$1  = 2'h1;
      10'h04a:
          \$1  = 2'h1;
      10'h04b:
          \$1  = 2'h1;
      10'h04c:
          \$1  = 2'h1;
      10'h04d:
          \$1  = 2'h1;
      10'h04e:
          \$1  = 2'h1;
      10'h04f:
          \$1  = 2'h1;
      10'h050:
          \$1  = 2'h1;
      10'h051:
          \$1  = 2'h1;
      10'h052:
          \$1  = 2'h1;
      10'h053:
          \$1  = 2'h1;
      10'h054:
          \$1  = 2'h1;
      10'h055:
          \$1  = 2'h1;
      10'h056:
          \$1  = 2'h1;
      10'h057:
          \$1  = 2'h1;
      10'h058:
          \$1  = 2'h1;
      10'h059:
          \$1  = 2'h1;
      10'h05a:
          \$1  = 2'h1;
      10'h05b:
          \$1  = 2'h1;
      10'h05c:
          \$1  = 2'h1;
      10'h05d:
          \$1  = 2'h1;
      10'h05e:
          \$1  = 2'h1;
      10'h05f:
          \$1  = 2'h1;
      10'h060:
          \$1  = 2'h1;
      10'h061:
          \$1  = 2'h1;
      10'h062:
          \$1  = 2'h1;
      10'h063:
          \$1  = 2'h1;
      10'h064:
          \$1  = 2'h1;
      10'h065:
          \$1  = 2'h1;
      10'h066:
          \$1  = 2'h1;
      10'h067:
          \$1  = 2'h1;
      10'h068:
          \$1  = 2'h1;
      10'h069:
          \$1  = 2'h1;
      10'h06a:
          \$1  = 2'h1;
      10'h06b:
          \$1  = 2'h1;
      10'h06c:
          \$1  = 2'h1;
      10'h06d:
          \$1  = 2'h1;
      10'h06e:
          \$1  = 2'h1;
      10'h06f:
          \$1  = 2'h1;
      10'h070:
          \$1  = 2'h1;
      10'h071:
          \$1  = 2'h1;
      10'h072:
          \$1  = 2'h1;
      10'h073:
          \$1  = 2'h1;
      10'h074:
          \$1  = 2'h1;
      10'h075:
          \$1  = 2'h1;
      10'h076:
          \$1  = 2'h1;
      10'h077:
          \$1  = 2'h1;
      10'h078:
          \$1  = 2'h1;
      10'h079:
          \$1  = 2'h1;
      10'h07a:
          \$1  = 2'h1;
      10'h07b:
          \$1  = 2'h1;
      10'h07c:
          \$1  = 2'h1;
      10'h07d:
          \$1  = 2'h1;
      10'h07e:
          \$1  = 2'h1;
      10'h07f:
          \$1  = 2'h1;
      10'h080:
          \$1  = 2'h1;
      10'h081:
          \$1  = 2'h1;
      10'h082:
          \$1  = 2'h1;
      10'h083:
          \$1  = 2'h1;
      10'h084:
          \$1  = 2'h1;
      10'h085:
          \$1  = 2'h1;
      10'h086:
          \$1  = 2'h1;
      10'h087:
          \$1  = 2'h1;
      10'h088:
          \$1  = 2'h1;
      10'h089:
          \$1  = 2'h1;
      10'h08a:
          \$1  = 2'h1;
      10'h08b:
          \$1  = 2'h1;
      10'h08c:
          \$1  = 2'h1;
      10'h08d:
          \$1  = 2'h1;
      10'h08e:
          \$1  = 2'h1;
      10'h08f:
          \$1  = 2'h1;
      10'h090:
          \$1  = 2'h1;
      10'h091:
          \$1  = 2'h1;
      10'h092:
          \$1  = 2'h1;
      10'h093:
          \$1  = 2'h1;
      10'h094:
          \$1  = 2'h1;
      10'h095:
          \$1  = 2'h1;
      10'h096:
          \$1  = 2'h1;
      10'h097:
          \$1  = 2'h1;
      10'h098:
          \$1  = 2'h1;
      10'h099:
          \$1  = 2'h1;
      10'h09a:
          \$1  = 2'h1;
      10'h09b:
          \$1  = 2'h1;
      10'h09c:
          \$1  = 2'h1;
      10'h09d:
          \$1  = 2'h1;
      10'h09e:
          \$1  = 2'h1;
      10'h09f:
          \$1  = 2'h1;
      10'h0a0:
          \$1  = 2'h1;
      10'h0a1:
          \$1  = 2'h1;
      10'h0a2:
          \$1  = 2'h1;
      10'h0a3:
          \$1  = 2'h1;
      10'h0a4:
          \$1  = 2'h1;
      10'h0a5:
          \$1  = 2'h1;
      10'h0a6:
          \$1  = 2'h1;
      10'h0a7:
          \$1  = 2'h1;
      10'h0a8:
          \$1  = 2'h1;
      10'h0a9:
          \$1  = 2'h1;
      10'h0aa:
          \$1  = 2'h1;
      10'h0ab:
          \$1  = 2'h1;
      10'h0ac:
          \$1  = 2'h1;
      10'h0ad:
          \$1  = 2'h1;
      10'h0ae:
          \$1  = 2'h1;
      10'h0af:
          \$1  = 2'h1;
      10'h0b0:
          \$1  = 2'h1;
      10'h0b1:
          \$1  = 2'h1;
      10'h0b2:
          \$1  = 2'h1;
      10'h0b3:
          \$1  = 2'h1;
      10'h0b4:
          \$1  = 2'h1;
      10'h0b5:
          \$1  = 2'h1;
      10'h0b6:
          \$1  = 2'h1;
      10'h0b7:
          \$1  = 2'h1;
      10'h0b8:
          \$1  = 2'h1;
      10'h0b9:
          \$1  = 2'h1;
      10'h0ba:
          \$1  = 2'h1;
      10'h0bb:
          \$1  = 2'h1;
      10'h0bc:
          \$1  = 2'h1;
      10'h0bd:
          \$1  = 2'h1;
      10'h0be:
          \$1  = 2'h1;
      10'h0bf:
          \$1  = 2'h1;
      10'h0c0:
          \$1  = 2'h1;
      10'h0c1:
          \$1  = 2'h1;
      10'h0c2:
          \$1  = 2'h1;
      10'h0c3:
          \$1  = 2'h1;
      10'h0c4:
          \$1  = 2'h1;
      10'h0c5:
          \$1  = 2'h1;
      10'h0c6:
          \$1  = 2'h1;
      10'h0c7:
          \$1  = 2'h1;
      10'h0c8:
          \$1  = 2'h1;
      10'h0c9:
          \$1  = 2'h1;
      10'h0ca:
          \$1  = 2'h1;
      10'h0cb:
          \$1  = 2'h1;
      10'h0cc:
          \$1  = 2'h1;
      10'h0cd:
          \$1  = 2'h1;
      10'h0ce:
          \$1  = 2'h1;
      10'h0cf:
          \$1  = 2'h1;
      10'h0d0:
          \$1  = 2'h1;
      10'h0d1:
          \$1  = 2'h1;
      10'h0d2:
          \$1  = 2'h1;
      10'h0d3:
          \$1  = 2'h1;
      10'h0d4:
          \$1  = 2'h1;
      10'h0d5:
          \$1  = 2'h1;
      10'h0d6:
          \$1  = 2'h1;
      10'h0d7:
          \$1  = 2'h1;
      10'h0d8:
          \$1  = 2'h1;
      10'h0d9:
          \$1  = 2'h1;
      10'h0da:
          \$1  = 2'h1;
      10'h0db:
          \$1  = 2'h1;
      10'h0dc:
          \$1  = 2'h1;
      10'h0dd:
          \$1  = 2'h1;
      10'h0de:
          \$1  = 2'h1;
      10'h0df:
          \$1  = 2'h1;
      10'h0e0:
          \$1  = 2'h1;
      10'h0e1:
          \$1  = 2'h1;
      10'h0e2:
          \$1  = 2'h1;
      10'h0e3:
          \$1  = 2'h1;
      10'h0e4:
          \$1  = 2'h1;
      10'h0e5:
          \$1  = 2'h1;
      10'h0e6:
          \$1  = 2'h1;
      10'h0e7:
          \$1  = 2'h1;
      10'h0e8:
          \$1  = 2'h1;
      10'h0e9:
          \$1  = 2'h1;
      10'h0ea:
          \$1  = 2'h1;
      10'h0eb:
          \$1  = 2'h1;
      10'h0ec:
          \$1  = 2'h1;
      10'h0ed:
          \$1  = 2'h1;
      10'h0ee:
          \$1  = 2'h1;
      10'h0ef:
          \$1  = 2'h1;
      10'h0f0:
          \$1  = 2'h1;
      10'h0f1:
          \$1  = 2'h1;
      10'h0f2:
          \$1  = 2'h1;
      10'h0f3:
          \$1  = 2'h1;
      10'h0f4:
          \$1  = 2'h1;
      10'h0f5:
          \$1  = 2'h1;
      10'h0f6:
          \$1  = 2'h1;
      10'h0f7:
          \$1  = 2'h1;
      10'h0f8:
          \$1  = 2'h1;
      10'h0f9:
          \$1  = 2'h1;
      10'h0fa:
          \$1  = 2'h1;
      10'h0fb:
          \$1  = 2'h1;
      10'h0fc:
          \$1  = 2'h1;
      10'h0fd:
          \$1  = 2'h1;
      10'h0fe:
          \$1  = 2'h1;
      10'h0ff:
          \$1  = 2'h1;
      10'h100:
          \$1  = 2'h1;
      10'h101:
          \$1  = 2'h1;
      10'h102:
          \$1  = 2'h1;
      10'h103:
          \$1  = 2'h1;
      10'h104:
          \$1  = 2'h1;
      10'h105:
          \$1  = 2'h1;
      10'h106:
          \$1  = 2'h1;
      10'h107:
          \$1  = 2'h1;
      10'h108:
          \$1  = 2'h1;
      10'h109:
          \$1  = 2'h1;
      10'h10a:
          \$1  = 2'h1;
      10'h10b:
          \$1  = 2'h1;
      10'h10c:
          \$1  = 2'h1;
      10'h10d:
          \$1  = 2'h1;
      10'h10e:
          \$1  = 2'h1;
      10'h10f:
          \$1  = 2'h1;
      10'h110:
          \$1  = 2'h1;
      10'h111:
          \$1  = 2'h1;
      10'h112:
          \$1  = 2'h1;
      10'h113:
          \$1  = 2'h1;
      10'h114:
          \$1  = 2'h1;
      10'h115:
          \$1  = 2'h1;
      10'h116:
          \$1  = 2'h1;
      10'h117:
          \$1  = 2'h1;
      10'h118:
          \$1  = 2'h1;
      10'h119:
          \$1  = 2'h1;
      10'h11a:
          \$1  = 2'h1;
      10'h11b:
          \$1  = 2'h1;
      10'h11c:
          \$1  = 2'h1;
      10'h11d:
          \$1  = 2'h1;
      10'h11e:
          \$1  = 2'h1;
      10'h11f:
          \$1  = 2'h1;
      10'h120:
          \$1  = 2'h1;
      10'h121:
          \$1  = 2'h1;
      10'h122:
          \$1  = 2'h1;
      10'h123:
          \$1  = 2'h1;
      10'h124:
          \$1  = 2'h1;
      10'h125:
          \$1  = 2'h1;
      10'h126:
          \$1  = 2'h1;
      10'h127:
          \$1  = 2'h1;
      10'h128:
          \$1  = 2'h1;
      10'h129:
          \$1  = 2'h1;
      10'h12a:
          \$1  = 2'h1;
      10'h12b:
          \$1  = 2'h1;
      10'h12c:
          \$1  = 2'h1;
      10'h12d:
          \$1  = 2'h1;
      10'h12e:
          \$1  = 2'h1;
      10'h12f:
          \$1  = 2'h1;
      10'h130:
          \$1  = 2'h1;
      10'h131:
          \$1  = 2'h1;
      10'h132:
          \$1  = 2'h1;
      10'h133:
          \$1  = 2'h1;
      10'h134:
          \$1  = 2'h1;
      10'h135:
          \$1  = 2'h1;
      10'h136:
          \$1  = 2'h1;
      10'h137:
          \$1  = 2'h1;
      10'h138:
          \$1  = 2'h1;
      10'h139:
          \$1  = 2'h1;
      10'h13a:
          \$1  = 2'h1;
      10'h13b:
          \$1  = 2'h1;
      10'h13c:
          \$1  = 2'h1;
      10'h13d:
          \$1  = 2'h1;
      10'h13e:
          \$1  = 2'h1;
      10'h13f:
          \$1  = 2'h1;
      10'h140:
          \$1  = 2'h1;
      10'h141:
          \$1  = 2'h1;
      10'h142:
          \$1  = 2'h1;
      10'h143:
          \$1  = 2'h1;
      10'h144:
          \$1  = 2'h1;
      10'h145:
          \$1  = 2'h1;
      10'h146:
          \$1  = 2'h1;
      10'h147:
          \$1  = 2'h1;
      10'h148:
          \$1  = 2'h1;
      10'h149:
          \$1  = 2'h1;
      10'h14a:
          \$1  = 2'h1;
      10'h14b:
          \$1  = 2'h1;
      10'h14c:
          \$1  = 2'h1;
      10'h14d:
          \$1  = 2'h1;
      10'h14e:
          \$1  = 2'h1;
      10'h14f:
          \$1  = 2'h1;
      10'h150:
          \$1  = 2'h1;
      10'h151:
          \$1  = 2'h1;
      10'h152:
          \$1  = 2'h1;
      10'h153:
          \$1  = 2'h1;
      10'h154:
          \$1  = 2'h1;
      10'h155:
          \$1  = 2'h1;
      10'h156:
          \$1  = 2'h1;
      10'h157:
          \$1  = 2'h1;
      10'h158:
          \$1  = 2'h1;
      10'h159:
          \$1  = 2'h1;
      10'h15a:
          \$1  = 2'h1;
      10'h15b:
          \$1  = 2'h1;
      10'h15c:
          \$1  = 2'h1;
      10'h15d:
          \$1  = 2'h1;
      10'h15e:
          \$1  = 2'h1;
      10'h15f:
          \$1  = 2'h1;
      10'h160:
          \$1  = 2'h1;
      10'h161:
          \$1  = 2'h1;
      10'h162:
          \$1  = 2'h1;
      10'h163:
          \$1  = 2'h1;
      10'h164:
          \$1  = 2'h1;
      10'h165:
          \$1  = 2'h1;
      10'h166:
          \$1  = 2'h1;
      10'h167:
          \$1  = 2'h1;
      10'h168:
          \$1  = 2'h1;
      10'h169:
          \$1  = 2'h1;
      10'h16a:
          \$1  = 2'h1;
      10'h16b:
          \$1  = 2'h1;
      10'h16c:
          \$1  = 2'h1;
      10'h16d:
          \$1  = 2'h1;
      10'h16e:
          \$1  = 2'h1;
      10'h16f:
          \$1  = 2'h1;
      10'h170:
          \$1  = 2'h1;
      10'h171:
          \$1  = 2'h1;
      10'h172:
          \$1  = 2'h1;
      10'h173:
          \$1  = 2'h1;
      10'h174:
          \$1  = 2'h1;
      10'h175:
          \$1  = 2'h1;
      10'h176:
          \$1  = 2'h1;
      10'h177:
          \$1  = 2'h1;
      10'h178:
          \$1  = 2'h1;
      10'h179:
          \$1  = 2'h1;
      10'h17a:
          \$1  = 2'h1;
      10'h17b:
          \$1  = 2'h1;
      10'h17c:
          \$1  = 2'h1;
      10'h17d:
          \$1  = 2'h1;
      10'h17e:
          \$1  = 2'h1;
      10'h17f:
          \$1  = 2'h1;
      10'h180:
          \$1  = 2'h1;
      10'h181:
          \$1  = 2'h1;
      10'h182:
          \$1  = 2'h1;
      10'h183:
          \$1  = 2'h1;
      10'h184:
          \$1  = 2'h1;
      10'h185:
          \$1  = 2'h1;
      10'h186:
          \$1  = 2'h1;
      10'h187:
          \$1  = 2'h1;
      10'h188:
          \$1  = 2'h1;
      10'h189:
          \$1  = 2'h1;
      10'h18a:
          \$1  = 2'h1;
      10'h18b:
          \$1  = 2'h1;
      10'h18c:
          \$1  = 2'h1;
      10'h18d:
          \$1  = 2'h1;
      10'h18e:
          \$1  = 2'h1;
      10'h18f:
          \$1  = 2'h1;
      10'h190:
          \$1  = 2'h1;
      10'h191:
          \$1  = 2'h1;
      10'h192:
          \$1  = 2'h1;
      10'h193:
          \$1  = 2'h1;
      10'h194:
          \$1  = 2'h1;
      10'h195:
          \$1  = 2'h1;
      10'h196:
          \$1  = 2'h1;
      10'h197:
          \$1  = 2'h1;
      10'h198:
          \$1  = 2'h1;
      10'h199:
          \$1  = 2'h1;
      10'h19a:
          \$1  = 2'h1;
      10'h19b:
          \$1  = 2'h1;
      10'h19c:
          \$1  = 2'h1;
      10'h19d:
          \$1  = 2'h1;
      10'h19e:
          \$1  = 2'h1;
      10'h19f:
          \$1  = 2'h1;
      10'h1a0:
          \$1  = 2'h1;
      10'h1a1:
          \$1  = 2'h1;
      10'h1a2:
          \$1  = 2'h1;
      10'h1a3:
          \$1  = 2'h1;
      10'h1a4:
          \$1  = 2'h1;
      10'h1a5:
          \$1  = 2'h1;
      10'h1a6:
          \$1  = 2'h1;
      10'h1a7:
          \$1  = 2'h1;
      10'h1a8:
          \$1  = 2'h1;
      10'h1a9:
          \$1  = 2'h1;
      10'h1aa:
          \$1  = 2'h1;
      10'h1ab:
          \$1  = 2'h1;
      10'h1ac:
          \$1  = 2'h1;
      10'h1ad:
          \$1  = 2'h1;
      10'h1ae:
          \$1  = 2'h1;
      10'h1af:
          \$1  = 2'h1;
      10'h1b0:
          \$1  = 2'h1;
      10'h1b1:
          \$1  = 2'h1;
      10'h1b2:
          \$1  = 2'h1;
      10'h1b3:
          \$1  = 2'h1;
      10'h1b4:
          \$1  = 2'h1;
      10'h1b5:
          \$1  = 2'h1;
      10'h1b6:
          \$1  = 2'h1;
      10'h1b7:
          \$1  = 2'h1;
      10'h1b8:
          \$1  = 2'h1;
      10'h1b9:
          \$1  = 2'h1;
      10'h1ba:
          \$1  = 2'h1;
      10'h1bb:
          \$1  = 2'h1;
      10'h1bc:
          \$1  = 2'h1;
      10'h1bd:
          \$1  = 2'h1;
      10'h1be:
          \$1  = 2'h1;
      10'h1bf:
          \$1  = 2'h1;
      10'h1c0:
          \$1  = 2'h1;
      10'h1c1:
          \$1  = 2'h1;
      10'h1c2:
          \$1  = 2'h1;
      10'h1c3:
          \$1  = 2'h1;
      10'h1c4:
          \$1  = 2'h1;
      10'h1c5:
          \$1  = 2'h1;
      10'h1c6:
          \$1  = 2'h1;
      10'h1c7:
          \$1  = 2'h1;
      10'h1c8:
          \$1  = 2'h1;
      10'h1c9:
          \$1  = 2'h1;
      10'h1ca:
          \$1  = 2'h1;
      10'h1cb:
          \$1  = 2'h1;
      10'h1cc:
          \$1  = 2'h1;
      10'h1cd:
          \$1  = 2'h1;
      10'h1ce:
          \$1  = 2'h1;
      10'h1cf:
          \$1  = 2'h1;
      10'h1d0:
          \$1  = 2'h1;
      10'h1d1:
          \$1  = 2'h1;
      10'h1d2:
          \$1  = 2'h1;
      10'h1d3:
          \$1  = 2'h1;
      10'h1d4:
          \$1  = 2'h1;
      10'h1d5:
          \$1  = 2'h1;
      10'h1d6:
          \$1  = 2'h1;
      10'h1d7:
          \$1  = 2'h1;
      10'h1d8:
          \$1  = 2'h1;
      10'h1d9:
          \$1  = 2'h1;
      10'h1da:
          \$1  = 2'h1;
      10'h1db:
          \$1  = 2'h1;
      10'h1dc:
          \$1  = 2'h1;
      10'h1dd:
          \$1  = 2'h1;
      10'h1de:
          \$1  = 2'h1;
      10'h1df:
          \$1  = 2'h1;
      10'h1e0:
          \$1  = 2'h1;
      10'h1e1:
          \$1  = 2'h1;
      10'h1e2:
          \$1  = 2'h1;
      10'h1e3:
          \$1  = 2'h1;
      10'h1e4:
          \$1  = 2'h1;
      10'h1e5:
          \$1  = 2'h1;
      10'h1e6:
          \$1  = 2'h1;
      10'h1e7:
          \$1  = 2'h1;
      10'h1e8:
          \$1  = 2'h1;
      10'h1e9:
          \$1  = 2'h1;
      10'h1ea:
          \$1  = 2'h1;
      10'h1eb:
          \$1  = 2'h1;
      10'h1ec:
          \$1  = 2'h1;
      10'h1ed:
          \$1  = 2'h1;
      10'h1ee:
          \$1  = 2'h1;
      10'h1ef:
          \$1  = 2'h1;
      10'h1f0:
          \$1  = 2'h1;
      10'h1f1:
          \$1  = 2'h1;
      10'h1f2:
          \$1  = 2'h1;
      10'h1f3:
          \$1  = 2'h1;
      10'h1f4:
          \$1  = 2'h1;
      10'h1f5:
          \$1  = 2'h1;
      10'h1f6:
          \$1  = 2'h1;
      10'h1f7:
          \$1  = 2'h1;
      10'h1f8:
          \$1  = 2'h1;
      10'h1f9:
          \$1  = 2'h1;
      10'h1fa:
          \$1  = 2'h1;
      10'h1fb:
          \$1  = 2'h1;
      10'h1fc:
          \$1  = 2'h1;
      10'h1fd:
          \$1  = 2'h1;
      10'h1fe:
          \$1  = 2'h1;
      10'h1ff:
          \$1  = 2'h1;
      10'h200:
          \$1  = 2'h2;
      10'h201:
          \$1  = 2'h1;
      10'h202:
          \$1  = 2'h2;
      10'h203:
          \$1  = 2'h2;
      10'h204:
          \$1  = 2'h2;
      10'h205:
          \$1  = 2'h2;
      10'h206:
          \$1  = 2'h2;
      10'h207:
          \$1  = 2'h2;
      10'h208:
          \$1  = 2'h2;
      10'h209:
          \$1  = 2'h2;
      10'h20a:
          \$1  = 2'h2;
      10'h20b:
          \$1  = 2'h2;
      10'h20c:
          \$1  = 2'h2;
      10'h20d:
          \$1  = 2'h2;
      10'h20e:
          \$1  = 2'h2;
      10'h20f:
          \$1  = 2'h2;
      10'h210:
          \$1  = 2'h2;
      10'h211:
          \$1  = 2'h2;
      10'h212:
          \$1  = 2'h2;
      10'h213:
          \$1  = 2'h2;
      10'h214:
          \$1  = 2'h2;
      10'h215:
          \$1  = 2'h2;
      10'h216:
          \$1  = 2'h2;
      10'h217:
          \$1  = 2'h2;
      10'h218:
          \$1  = 2'h2;
      10'h219:
          \$1  = 2'h2;
      10'h21a:
          \$1  = 2'h2;
      10'h21b:
          \$1  = 2'h2;
      10'h21c:
          \$1  = 2'h2;
      10'h21d:
          \$1  = 2'h2;
      10'h21e:
          \$1  = 2'h2;
      10'h21f:
          \$1  = 2'h2;
      10'h220:
          \$1  = 2'h1;
      10'h221:
          \$1  = 2'h1;
      10'h222:
          \$1  = 2'h1;
      10'h223:
          \$1  = 2'h1;
      10'h224:
          \$1  = 2'h1;
      10'h225:
          \$1  = 2'h1;
      10'h226:
          \$1  = 2'h1;
      10'h227:
          \$1  = 2'h1;
      10'h228:
          \$1  = 2'h1;
      10'h229:
          \$1  = 2'h1;
      10'h22a:
          \$1  = 2'h1;
      10'h22b:
          \$1  = 2'h1;
      10'h22c:
          \$1  = 2'h1;
      10'h22d:
          \$1  = 2'h1;
      10'h22e:
          \$1  = 2'h1;
      10'h22f:
          \$1  = 2'h1;
      10'h230:
          \$1  = 2'h1;
      10'h231:
          \$1  = 2'h1;
      10'h232:
          \$1  = 2'h1;
      10'h233:
          \$1  = 2'h1;
      10'h234:
          \$1  = 2'h1;
      10'h235:
          \$1  = 2'h1;
      10'h236:
          \$1  = 2'h1;
      10'h237:
          \$1  = 2'h1;
      10'h238:
          \$1  = 2'h1;
      10'h239:
          \$1  = 2'h1;
      10'h23a:
          \$1  = 2'h1;
      10'h23b:
          \$1  = 2'h1;
      10'h23c:
          \$1  = 2'h1;
      10'h23d:
          \$1  = 2'h1;
      10'h23e:
          \$1  = 2'h1;
      10'h23f:
          \$1  = 2'h1;
      10'h240:
          \$1  = 2'h1;
      10'h241:
          \$1  = 2'h1;
      10'h242:
          \$1  = 2'h1;
      10'h243:
          \$1  = 2'h1;
      10'h244:
          \$1  = 2'h1;
      10'h245:
          \$1  = 2'h1;
      10'h246:
          \$1  = 2'h1;
      10'h247:
          \$1  = 2'h1;
      10'h248:
          \$1  = 2'h1;
      10'h249:
          \$1  = 2'h1;
      10'h24a:
          \$1  = 2'h1;
      10'h24b:
          \$1  = 2'h1;
      10'h24c:
          \$1  = 2'h1;
      10'h24d:
          \$1  = 2'h1;
      10'h24e:
          \$1  = 2'h1;
      10'h24f:
          \$1  = 2'h1;
      10'h250:
          \$1  = 2'h1;
      10'h251:
          \$1  = 2'h1;
      10'h252:
          \$1  = 2'h1;
      10'h253:
          \$1  = 2'h1;
      10'h254:
          \$1  = 2'h1;
      10'h255:
          \$1  = 2'h1;
      10'h256:
          \$1  = 2'h1;
      10'h257:
          \$1  = 2'h1;
      10'h258:
          \$1  = 2'h1;
      10'h259:
          \$1  = 2'h1;
      10'h25a:
          \$1  = 2'h1;
      10'h25b:
          \$1  = 2'h1;
      10'h25c:
          \$1  = 2'h1;
      10'h25d:
          \$1  = 2'h1;
      10'h25e:
          \$1  = 2'h1;
      10'h25f:
          \$1  = 2'h1;
      10'h260:
          \$1  = 2'h1;
      10'h261:
          \$1  = 2'h1;
      10'h262:
          \$1  = 2'h1;
      10'h263:
          \$1  = 2'h1;
      10'h264:
          \$1  = 2'h1;
      10'h265:
          \$1  = 2'h1;
      10'h266:
          \$1  = 2'h1;
      10'h267:
          \$1  = 2'h1;
      10'h268:
          \$1  = 2'h1;
      10'h269:
          \$1  = 2'h1;
      10'h26a:
          \$1  = 2'h1;
      10'h26b:
          \$1  = 2'h1;
      10'h26c:
          \$1  = 2'h1;
      10'h26d:
          \$1  = 2'h1;
      10'h26e:
          \$1  = 2'h1;
      10'h26f:
          \$1  = 2'h1;
      10'h270:
          \$1  = 2'h1;
      10'h271:
          \$1  = 2'h1;
      10'h272:
          \$1  = 2'h1;
      10'h273:
          \$1  = 2'h1;
      10'h274:
          \$1  = 2'h1;
      10'h275:
          \$1  = 2'h1;
      10'h276:
          \$1  = 2'h1;
      10'h277:
          \$1  = 2'h1;
      10'h278:
          \$1  = 2'h1;
      10'h279:
          \$1  = 2'h1;
      10'h27a:
          \$1  = 2'h1;
      10'h27b:
          \$1  = 2'h1;
      10'h27c:
          \$1  = 2'h1;
      10'h27d:
          \$1  = 2'h1;
      10'h27e:
          \$1  = 2'h1;
      10'h27f:
          \$1  = 2'h1;
      10'h280:
          \$1  = 2'h2;
      10'h281:
          \$1  = 2'h1;
      10'h282:
          \$1  = 2'h2;
      10'h283:
          \$1  = 2'h2;
      10'h284:
          \$1  = 2'h2;
      10'h285:
          \$1  = 2'h2;
      10'h286:
          \$1  = 2'h2;
      10'h287:
          \$1  = 2'h2;
      10'h288:
          \$1  = 2'h2;
      10'h289:
          \$1  = 2'h2;
      10'h28a:
          \$1  = 2'h2;
      10'h28b:
          \$1  = 2'h2;
      10'h28c:
          \$1  = 2'h2;
      10'h28d:
          \$1  = 2'h2;
      10'h28e:
          \$1  = 2'h2;
      10'h28f:
          \$1  = 2'h2;
      10'h290:
          \$1  = 2'h2;
      10'h291:
          \$1  = 2'h2;
      10'h292:
          \$1  = 2'h2;
      10'h293:
          \$1  = 2'h2;
      10'h294:
          \$1  = 2'h2;
      10'h295:
          \$1  = 2'h2;
      10'h296:
          \$1  = 2'h2;
      10'h297:
          \$1  = 2'h2;
      10'h298:
          \$1  = 2'h2;
      10'h299:
          \$1  = 2'h2;
      10'h29a:
          \$1  = 2'h2;
      10'h29b:
          \$1  = 2'h2;
      10'h29c:
          \$1  = 2'h2;
      10'h29d:
          \$1  = 2'h2;
      10'h29e:
          \$1  = 2'h2;
      10'h29f:
          \$1  = 2'h2;
      10'h2a0:
          \$1  = 2'h1;
      10'h2a1:
          \$1  = 2'h1;
      10'h2a2:
          \$1  = 2'h1;
      10'h2a3:
          \$1  = 2'h1;
      10'h2a4:
          \$1  = 2'h1;
      10'h2a5:
          \$1  = 2'h1;
      10'h2a6:
          \$1  = 2'h1;
      10'h2a7:
          \$1  = 2'h1;
      10'h2a8:
          \$1  = 2'h1;
      10'h2a9:
          \$1  = 2'h1;
      10'h2aa:
          \$1  = 2'h1;
      10'h2ab:
          \$1  = 2'h1;
      10'h2ac:
          \$1  = 2'h1;
      10'h2ad:
          \$1  = 2'h1;
      10'h2ae:
          \$1  = 2'h1;
      10'h2af:
          \$1  = 2'h1;
      10'h2b0:
          \$1  = 2'h1;
      10'h2b1:
          \$1  = 2'h1;
      10'h2b2:
          \$1  = 2'h1;
      10'h2b3:
          \$1  = 2'h1;
      10'h2b4:
          \$1  = 2'h1;
      10'h2b5:
          \$1  = 2'h1;
      10'h2b6:
          \$1  = 2'h1;
      10'h2b7:
          \$1  = 2'h1;
      10'h2b8:
          \$1  = 2'h1;
      10'h2b9:
          \$1  = 2'h1;
      10'h2ba:
          \$1  = 2'h1;
      10'h2bb:
          \$1  = 2'h1;
      10'h2bc:
          \$1  = 2'h1;
      10'h2bd:
          \$1  = 2'h1;
      10'h2be:
          \$1  = 2'h1;
      10'h2bf:
          \$1  = 2'h1;
      10'h2c0:
          \$1  = 2'h1;
      10'h2c1:
          \$1  = 2'h1;
      10'h2c2:
          \$1  = 2'h1;
      10'h2c3:
          \$1  = 2'h1;
      10'h2c4:
          \$1  = 2'h1;
      10'h2c5:
          \$1  = 2'h1;
      10'h2c6:
          \$1  = 2'h1;
      10'h2c7:
          \$1  = 2'h1;
      10'h2c8:
          \$1  = 2'h1;
      10'h2c9:
          \$1  = 2'h1;
      10'h2ca:
          \$1  = 2'h1;
      10'h2cb:
          \$1  = 2'h1;
      10'h2cc:
          \$1  = 2'h1;
      10'h2cd:
          \$1  = 2'h1;
      10'h2ce:
          \$1  = 2'h1;
      10'h2cf:
          \$1  = 2'h1;
      10'h2d0:
          \$1  = 2'h1;
      10'h2d1:
          \$1  = 2'h1;
      10'h2d2:
          \$1  = 2'h1;
      10'h2d3:
          \$1  = 2'h1;
      10'h2d4:
          \$1  = 2'h1;
      10'h2d5:
          \$1  = 2'h1;
      10'h2d6:
          \$1  = 2'h1;
      10'h2d7:
          \$1  = 2'h1;
      10'h2d8:
          \$1  = 2'h1;
      10'h2d9:
          \$1  = 2'h1;
      10'h2da:
          \$1  = 2'h1;
      10'h2db:
          \$1  = 2'h1;
      10'h2dc:
          \$1  = 2'h1;
      10'h2dd:
          \$1  = 2'h1;
      10'h2de:
          \$1  = 2'h1;
      10'h2df:
          \$1  = 2'h1;
      10'h2e0:
          \$1  = 2'h1;
      10'h2e1:
          \$1  = 2'h1;
      10'h2e2:
          \$1  = 2'h1;
      10'h2e3:
          \$1  = 2'h1;
      10'h2e4:
          \$1  = 2'h1;
      10'h2e5:
          \$1  = 2'h1;
      10'h2e6:
          \$1  = 2'h1;
      10'h2e7:
          \$1  = 2'h1;
      10'h2e8:
          \$1  = 2'h1;
      10'h2e9:
          \$1  = 2'h1;
      10'h2ea:
          \$1  = 2'h1;
      10'h2eb:
          \$1  = 2'h1;
      10'h2ec:
          \$1  = 2'h1;
      10'h2ed:
          \$1  = 2'h1;
      10'h2ee:
          \$1  = 2'h1;
      10'h2ef:
          \$1  = 2'h1;
      10'h2f0:
          \$1  = 2'h1;
      10'h2f1:
          \$1  = 2'h1;
      10'h2f2:
          \$1  = 2'h1;
      10'h2f3:
          \$1  = 2'h1;
      10'h2f4:
          \$1  = 2'h1;
      10'h2f5:
          \$1  = 2'h1;
      10'h2f6:
          \$1  = 2'h1;
      10'h2f7:
          \$1  = 2'h1;
      10'h2f8:
          \$1  = 2'h1;
      10'h2f9:
          \$1  = 2'h1;
      10'h2fa:
          \$1  = 2'h1;
      10'h2fb:
          \$1  = 2'h1;
      10'h2fc:
          \$1  = 2'h1;
      10'h2fd:
          \$1  = 2'h1;
      10'h2fe:
          \$1  = 2'h1;
      10'h2ff:
          \$1  = 2'h1;
      10'h300:
          \$1  = 2'h1;
      10'h301:
          \$1  = 2'h1;
      10'h302:
          \$1  = 2'h1;
      10'h303:
          \$1  = 2'h1;
      10'h304:
          \$1  = 2'h1;
      10'h305:
          \$1  = 2'h1;
      10'h306:
          \$1  = 2'h1;
      10'h307:
          \$1  = 2'h1;
      10'h308:
          \$1  = 2'h1;
      10'h309:
          \$1  = 2'h1;
      10'h30a:
          \$1  = 2'h1;
      10'h30b:
          \$1  = 2'h1;
      10'h30c:
          \$1  = 2'h1;
      10'h30d:
          \$1  = 2'h1;
      10'h30e:
          \$1  = 2'h1;
      10'h30f:
          \$1  = 2'h1;
      10'h310:
          \$1  = 2'h1;
      10'h311:
          \$1  = 2'h2;
      10'h312:
          \$1  = 2'h2;
      10'h313:
          \$1  = 2'h2;
      10'h314:
          \$1  = 2'h2;
      10'h315:
          \$1  = 2'h2;
      10'h316:
          \$1  = 2'h1;
      10'h317:
          \$1  = 2'h1;
      10'h318:
          \$1  = 2'h1;
      10'h319:
          \$1  = 2'h1;
      10'h31a:
          \$1  = 2'h1;
      10'h31b:
          \$1  = 2'h1;
      10'h31c:
          \$1  = 2'h1;
      10'h31d:
          \$1  = 2'h1;
      10'h31e:
          \$1  = 2'h1;
      10'h31f:
          \$1  = 2'h1;
      10'h320:
          \$1  = 2'h1;
      10'h321:
          \$1  = 2'h1;
      10'h322:
          \$1  = 2'h1;
      10'h323:
          \$1  = 2'h1;
      10'h324:
          \$1  = 2'h1;
      10'h325:
          \$1  = 2'h1;
      10'h326:
          \$1  = 2'h1;
      10'h327:
          \$1  = 2'h1;
      10'h328:
          \$1  = 2'h1;
      10'h329:
          \$1  = 2'h1;
      10'h32a:
          \$1  = 2'h1;
      10'h32b:
          \$1  = 2'h1;
      10'h32c:
          \$1  = 2'h1;
      10'h32d:
          \$1  = 2'h1;
      10'h32e:
          \$1  = 2'h1;
      10'h32f:
          \$1  = 2'h1;
      10'h330:
          \$1  = 2'h1;
      10'h331:
          \$1  = 2'h1;
      10'h332:
          \$1  = 2'h1;
      10'h333:
          \$1  = 2'h1;
      10'h334:
          \$1  = 2'h1;
      10'h335:
          \$1  = 2'h1;
      10'h336:
          \$1  = 2'h1;
      10'h337:
          \$1  = 2'h1;
      10'h338:
          \$1  = 2'h1;
      10'h339:
          \$1  = 2'h1;
      10'h33a:
          \$1  = 2'h1;
      10'h33b:
          \$1  = 2'h1;
      10'h33c:
          \$1  = 2'h1;
      10'h33d:
          \$1  = 2'h1;
      10'h33e:
          \$1  = 2'h1;
      10'h33f:
          \$1  = 2'h1;
      10'h340:
          \$1  = 2'h1;
      10'h341:
          \$1  = 2'h1;
      10'h342:
          \$1  = 2'h1;
      10'h343:
          \$1  = 2'h1;
      10'h344:
          \$1  = 2'h1;
      10'h345:
          \$1  = 2'h1;
      10'h346:
          \$1  = 2'h1;
      10'h347:
          \$1  = 2'h1;
      10'h348:
          \$1  = 2'h1;
      10'h349:
          \$1  = 2'h1;
      10'h34a:
          \$1  = 2'h1;
      10'h34b:
          \$1  = 2'h1;
      10'h34c:
          \$1  = 2'h1;
      10'h34d:
          \$1  = 2'h1;
      10'h34e:
          \$1  = 2'h1;
      10'h34f:
          \$1  = 2'h1;
      10'h350:
          \$1  = 2'h1;
      10'h351:
          \$1  = 2'h1;
      10'h352:
          \$1  = 2'h1;
      10'h353:
          \$1  = 2'h1;
      10'h354:
          \$1  = 2'h1;
      10'h355:
          \$1  = 2'h1;
      10'h356:
          \$1  = 2'h1;
      10'h357:
          \$1  = 2'h1;
      10'h358:
          \$1  = 2'h1;
      10'h359:
          \$1  = 2'h1;
      10'h35a:
          \$1  = 2'h1;
      10'h35b:
          \$1  = 2'h1;
      10'h35c:
          \$1  = 2'h1;
      10'h35d:
          \$1  = 2'h1;
      10'h35e:
          \$1  = 2'h1;
      10'h35f:
          \$1  = 2'h1;
      10'h360:
          \$1  = 2'h1;
      10'h361:
          \$1  = 2'h1;
      10'h362:
          \$1  = 2'h1;
      10'h363:
          \$1  = 2'h1;
      10'h364:
          \$1  = 2'h1;
      10'h365:
          \$1  = 2'h1;
      10'h366:
          \$1  = 2'h1;
      10'h367:
          \$1  = 2'h1;
      10'h368:
          \$1  = 2'h1;
      10'h369:
          \$1  = 2'h1;
      10'h36a:
          \$1  = 2'h1;
      10'h36b:
          \$1  = 2'h1;
      10'h36c:
          \$1  = 2'h1;
      10'h36d:
          \$1  = 2'h1;
      10'h36e:
          \$1  = 2'h1;
      10'h36f:
          \$1  = 2'h1;
      10'h370:
          \$1  = 2'h1;
      10'h371:
          \$1  = 2'h1;
      10'h372:
          \$1  = 2'h1;
      10'h373:
          \$1  = 2'h1;
      10'h374:
          \$1  = 2'h1;
      10'h375:
          \$1  = 2'h1;
      10'h376:
          \$1  = 2'h1;
      10'h377:
          \$1  = 2'h1;
      10'h378:
          \$1  = 2'h1;
      10'h379:
          \$1  = 2'h1;
      10'h37a:
          \$1  = 2'h1;
      10'h37b:
          \$1  = 2'h1;
      10'h37c:
          \$1  = 2'h1;
      10'h37d:
          \$1  = 2'h1;
      10'h37e:
          \$1  = 2'h1;
      10'h37f:
          \$1  = 2'h1;
      10'h380:
          \$1  = 2'h1;
      10'h381:
          \$1  = 2'h1;
      10'h382:
          \$1  = 2'h1;
      10'h383:
          \$1  = 2'h1;
      10'h384:
          \$1  = 2'h1;
      10'h385:
          \$1  = 2'h1;
      10'h386:
          \$1  = 2'h1;
      10'h387:
          \$1  = 2'h1;
      10'h388:
          \$1  = 2'h1;
      10'h389:
          \$1  = 2'h1;
      10'h38a:
          \$1  = 2'h1;
      10'h38b:
          \$1  = 2'h1;
      10'h38c:
          \$1  = 2'h1;
      10'h38d:
          \$1  = 2'h1;
      10'h38e:
          \$1  = 2'h1;
      10'h38f:
          \$1  = 2'h1;
      10'h390:
          \$1  = 2'h1;
      10'h391:
          \$1  = 2'h1;
      10'h392:
          \$1  = 2'h1;
      10'h393:
          \$1  = 2'h1;
      10'h394:
          \$1  = 2'h1;
      10'h395:
          \$1  = 2'h1;
      10'h396:
          \$1  = 2'h1;
      10'h397:
          \$1  = 2'h1;
      10'h398:
          \$1  = 2'h1;
      10'h399:
          \$1  = 2'h1;
      10'h39a:
          \$1  = 2'h1;
      10'h39b:
          \$1  = 2'h1;
      10'h39c:
          \$1  = 2'h1;
      10'h39d:
          \$1  = 2'h1;
      10'h39e:
          \$1  = 2'h1;
      10'h39f:
          \$1  = 2'h1;
      10'h3a0:
          \$1  = 2'h1;
      10'h3a1:
          \$1  = 2'h1;
      10'h3a2:
          \$1  = 2'h1;
      10'h3a3:
          \$1  = 2'h1;
      10'h3a4:
          \$1  = 2'h1;
      10'h3a5:
          \$1  = 2'h1;
      10'h3a6:
          \$1  = 2'h1;
      10'h3a7:
          \$1  = 2'h1;
      10'h3a8:
          \$1  = 2'h1;
      10'h3a9:
          \$1  = 2'h1;
      10'h3aa:
          \$1  = 2'h1;
      10'h3ab:
          \$1  = 2'h1;
      10'h3ac:
          \$1  = 2'h1;
      10'h3ad:
          \$1  = 2'h1;
      10'h3ae:
          \$1  = 2'h1;
      10'h3af:
          \$1  = 2'h1;
      10'h3b0:
          \$1  = 2'h1;
      10'h3b1:
          \$1  = 2'h1;
      10'h3b2:
          \$1  = 2'h1;
      10'h3b3:
          \$1  = 2'h1;
      10'h3b4:
          \$1  = 2'h1;
      10'h3b5:
          \$1  = 2'h1;
      10'h3b6:
          \$1  = 2'h1;
      10'h3b7:
          \$1  = 2'h1;
      10'h3b8:
          \$1  = 2'h1;
      10'h3b9:
          \$1  = 2'h1;
      10'h3ba:
          \$1  = 2'h1;
      10'h3bb:
          \$1  = 2'h1;
      10'h3bc:
          \$1  = 2'h1;
      10'h3bd:
          \$1  = 2'h1;
      10'h3be:
          \$1  = 2'h1;
      10'h3bf:
          \$1  = 2'h1;
      10'h3c0:
          \$1  = 2'h1;
      10'h3c1:
          \$1  = 2'h1;
      10'h3c2:
          \$1  = 2'h1;
      10'h3c3:
          \$1  = 2'h1;
      10'h3c4:
          \$1  = 2'h1;
      10'h3c5:
          \$1  = 2'h1;
      10'h3c6:
          \$1  = 2'h1;
      10'h3c7:
          \$1  = 2'h1;
      10'h3c8:
          \$1  = 2'h1;
      10'h3c9:
          \$1  = 2'h1;
      10'h3ca:
          \$1  = 2'h1;
      10'h3cb:
          \$1  = 2'h1;
      10'h3cc:
          \$1  = 2'h1;
      10'h3cd:
          \$1  = 2'h1;
      10'h3ce:
          \$1  = 2'h1;
      10'h3cf:
          \$1  = 2'h1;
      10'h3d0:
          \$1  = 2'h1;
      10'h3d1:
          \$1  = 2'h1;
      10'h3d2:
          \$1  = 2'h1;
      10'h3d3:
          \$1  = 2'h1;
      10'h3d4:
          \$1  = 2'h1;
      10'h3d5:
          \$1  = 2'h1;
      10'h3d6:
          \$1  = 2'h1;
      10'h3d7:
          \$1  = 2'h1;
      10'h3d8:
          \$1  = 2'h1;
      10'h3d9:
          \$1  = 2'h1;
      10'h3da:
          \$1  = 2'h1;
      10'h3db:
          \$1  = 2'h1;
      10'h3dc:
          \$1  = 2'h1;
      10'h3dd:
          \$1  = 2'h1;
      10'h3de:
          \$1  = 2'h1;
      10'h3df:
          \$1  = 2'h1;
      10'h3e0:
          \$1  = 2'h1;
      10'h3e1:
          \$1  = 2'h1;
      10'h3e2:
          \$1  = 2'h1;
      10'h3e3:
          \$1  = 2'h1;
      10'h3e4:
          \$1  = 2'h1;
      10'h3e5:
          \$1  = 2'h1;
      10'h3e6:
          \$1  = 2'h1;
      10'h3e7:
          \$1  = 2'h1;
      10'h3e8:
          \$1  = 2'h1;
      10'h3e9:
          \$1  = 2'h1;
      10'h3ea:
          \$1  = 2'h1;
      10'h3eb:
          \$1  = 2'h1;
      10'h3ec:
          \$1  = 2'h1;
      10'h3ed:
          \$1  = 2'h1;
      10'h3ee:
          \$1  = 2'h1;
      10'h3ef:
          \$1  = 2'h1;
      10'h3f0:
          \$1  = 2'h1;
      10'h3f1:
          \$1  = 2'h1;
      10'h3f2:
          \$1  = 2'h1;
      10'h3f3:
          \$1  = 2'h1;
      10'h3f4:
          \$1  = 2'h1;
      10'h3f5:
          \$1  = 2'h1;
      10'h3f6:
          \$1  = 2'h1;
      10'h3f7:
          \$1  = 2'h1;
      10'h3f8:
          \$1  = 2'h1;
      10'h3f9:
          \$1  = 2'h1;
      10'h3fa:
          \$1  = 2'h1;
      10'h3fb:
          \$1  = 2'h1;
      10'h3fc:
          \$1  = 2'h1;
      10'h3fd:
          \$1  = 2'h1;
      10'h3fe:
          \$1  = 2'h1;
      10'h3ff:
          \$1  = 2'h1;
    endcase
    if (rst) begin
      \$1  = 2'h0;
    end
  end
  assign \data.ill  = data[0];
  assign \data.ro0  = data[1];
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:302" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.decode.except_ctrl (clk, rst, start, csr_attr, exception, insn);
  reg \$auto$verilog_backend.cc:2355:dump_module$14  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire \$18 ;
  wire \$19 ;
  wire \$2 ;
  wire \$20 ;
  wire \$21 ;
  wire \$22 ;
  wire \$23 ;
  wire \$24 ;
  wire \$25 ;
  wire \$26 ;
  wire \$27 ;
  wire \$28 ;
  wire \$29 ;
  wire \$3 ;
  wire \$30 ;
  wire \$31 ;
  wire \$32 ;
  wire \$33 ;
  wire \$34 ;
  wire \$35 ;
  wire \$36 ;
  wire \$37 ;
  wire \$38 ;
  wire \$39 ;
  wire \$4 ;
  wire \$40 ;
  wire \$41 ;
  wire \$42 ;
  reg \$43 ;
  reg [31:0] \$44 ;
  reg [1:0] \$45 ;
  reg [2:0] \$46 ;
  reg \$47 ;
  reg [4:0] \$48 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:613" *)
  input [1:0] csr_attr;
  wire [1:0] csr_attr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:613" *)
  wire \csr_attr.ill ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:613" *)
  wire \csr_attr.ro0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:309" *)
  reg [2:0] csr_op = 3'h0;
  (* enum_base_type = "Quadrant" *)
  (* enum_value_00 = "UNPRIVILEGED" *)
  (* enum_value_01 = "SUPERVISOR" *)
  (* enum_value_10 = "HYPERVISOR" *)
  (* enum_value_11 = "MACHINE" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:308" *)
  reg [1:0] csr_quadrant = 2'h0;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:310" *)
  reg csr_ro_space = 1'h0;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:613" *)
  output [31:0] exception;
  reg [31:0] exception = 32'd0;
  (* enum_base_type = "MCause.Cause" *)
  (* enum_value_0000000000000000000000000000000 = "INSN_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000001 = "INSN_FAULT" *)
  (* enum_value_0000000000000000000000000000010 = "ILLEGAL_INSN" *)
  (* enum_value_0000000000000000000000000000011 = "BREAKPOINT" *)
  (* enum_value_0000000000000000000000000000100 = "LOAD_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000101 = "LOAD_FAULT" *)
  (* enum_value_0000000000000000000000000000110 = "STORE_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000111 = "STORE_FAULT" *)
  (* enum_value_0000000000000000000000000001000 = "ECALL_UMODE" *)
  (* enum_value_0000000000000000000000000001001 = "ECALL_SMODE" *)
  (* enum_value_0000000000000000000000000001011 = "ECALL_MMODE" *)
  (* enum_value_0000000000000000000000000001100 = "INSN_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001101 = "LOAD_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001111 = "STORE_PAGE_FAULT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:613" *)
  wire [30:0] \exception.e_type ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:613" *)
  wire \exception.valid ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:307" *)
  reg forward_csr = 1'h0;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:287" *)
  input [31:0] insn;
  wire [31:0] insn;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:306" *)
  reg [4:0] src_a = 5'h00;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:282" *)
  input start;
  wire start;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:310" *)
  always @(posedge clk)
    csr_ro_space <= \$47 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:306" *)
  always @(posedge clk)
    src_a <= \$48 ;
  assign \$1  = insn[31:30] == (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/enum.py:303" *) 2'h3;
  assign \$2  = insn[14:12] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:327" *) 1'h1;
  assign \$3  = insn[14:12] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:327" *) 3'h5;
  assign \$4  = \$2  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:327" *) \$3 ;
  assign \$5  = insn[14:12] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:328" *) 1'h1;
  assign \$6  = | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:329" *) insn[31:25];
  assign \$7  = | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:332" *) insn[31:25];
  assign \$8  = insn[31:25] != (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:333" *) 6'h20;
  assign \$9  = \$7  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:332" *) \$8 ;
  assign \$10  = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:340" *) insn[14:12];
  assign \$11  = insn[14:12] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:340" *) 3'h5;
  assign \$12  = \$10  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:340" *) \$11 ;
  assign \$13  = | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:341" *) insn[31:25];
  assign \$14  = insn[31:25] != (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:342" *) 6'h20;
  assign \$15  = \$13  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:341" *) \$14 ;
  assign \$16  = | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:345" *) insn[31:25];
  assign \$17  = | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:350" *) insn[14:12];
  assign \$18  = insn[14:12] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:353" *) 2'h2;
  assign \$19  = insn[14:12] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:353" *) 2'h3;
  assign \$20  = \$18  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:353" *) \$19 ;
  assign \$21  = insn[14:12] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:356" *) 2'h3;
  assign \$22  = insn[14:12] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:356" *) 3'h6;
  assign \$23  = \$21  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:356" *) \$22 ;
  assign \$24  = insn[14:12] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:357" *) 3'h7;
  assign \$25  = \$23  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:356" *) \$24 ;
  assign \$26  = insn[14:12] >= (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:360" *) 2'h3;
  assign \$27  = | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:367" *) insn[14:12];
  assign \$28  = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:373" *) insn[31:7];
  assign \$29  = insn == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:375" *) 21'h100073;
  assign \$30  = insn == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:377" *) 30'h30200073;
  assign \$31  = insn == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:379" *) 29'h10500073;
  assign \$32  = | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:381" *) insn[14:12];
  assign \$33  = insn[14:12] != (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:381" *) 3'h4;
  assign \$34  = \$32  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:381" *) \$33 ;
  assign \$35  = insn[1:0] != (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:397" *) 2'h3;
  assign \$36  = csr_op == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:412" *) 1'h1;
  assign \$37  = csr_op == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:413" *) 3'h5;
  assign \$38  = \$36  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:412" *) \$37 ;
  assign \$39  = | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:414" *) src_a;
  assign \$40  = \$38  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:412" *) \$39 ;
  assign \$41  = csr_ro_space & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:412" *) \$40 ;
  assign \$42  = csr_quadrant != (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/lib/enum.py:310" *) 2'h3;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:307" *)
  always @(posedge clk)
    forward_csr <= \$43 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:613" *)
  always @(posedge clk)
    exception <= \$44 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:308" *)
  always @(posedge clk)
    csr_quadrant <= \$45 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:309" *)
  always @(posedge clk)
    csr_op <= \$46 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$14 ) begin end
    \$48  = src_a;
    if (start) begin
      \$48  = insn[19:15];
    end
    if (rst) begin
      \$48  = 5'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$14 ) begin end
    \$43  = 1'h0;
    if (start) begin
      casez (insn[6:2])
        5'h04:
            /* empty */;
        5'h0d:
            /* empty */;
        5'h05:
            /* empty */;
        5'h0c:
            /* empty */;
        5'h1b:
            /* empty */;
        5'h19:
            /* empty */;
        5'h18:
            /* empty */;
        5'h00:
            /* empty */;
        5'h08:
            /* empty */;
        5'h02:
            /* empty */;
        5'h03:
            /* empty */;
        5'h1c:
            if (\$28 ) begin
            end else if (\$29 ) begin
            end else if (\$30 ) begin
            end else if (\$31 ) begin
            end else if (\$34 ) begin
              \$43  = 1'h1;
            end
      endcase
    end
    if (rst) begin
      \$43  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$14 ) begin end
    \$44 [31:1] = 31'h00000002;
    \$44 [0] = 1'h0;
    if (start) begin
      (* full_case = 32'd1 *)
      casez (insn[6:2])
        5'h04:
            if (\$4 ) begin
              (* full_case = 32'd1 *)
              if (\$5 ) begin
                if (\$6 ) begin
                  \$44 [0] = 1'h1;
                end
              end else begin
                if (\$9 ) begin
                  \$44 [0] = 1'h1;
                end
              end
            end
        5'h0d:
            /* empty */;
        5'h05:
            /* empty */;
        5'h0c:
            (* full_case = 32'd1 *)
            if (\$12 ) begin
              if (\$15 ) begin
                \$44 [0] = 1'h1;
              end
            end else begin
              if (\$16 ) begin
                \$44 [0] = 1'h1;
              end
            end
        5'h1b:
            /* empty */;
        5'h19:
            if (\$17 ) begin
              \$44 [0] = 1'h1;
            end
        5'h18:
            if (\$20 ) begin
              \$44 [0] = 1'h1;
            end
        5'h00:
            if (\$25 ) begin
              \$44 [0] = 1'h1;
            end
        5'h08:
            if (\$26 ) begin
              \$44 [0] = 1'h1;
            end
        5'h02:
            \$44 [0] = 1'h1;
        5'h03:
            if (\$27 ) begin
              \$44 [0] = 1'h1;
            end
        5'h1c:
          begin
            \$44 [0] = 1'h1;
            if (\$28 ) begin
              \$44 [31:1] = 31'h0000000b;
            end else if (\$29 ) begin
              \$44 [31:1] = 31'h00000003;
            end else if (\$30 ) begin
              \$44 [0] = 1'h0;
            end else if (\$31 ) begin
              \$44 [0] = 1'h0;
            end else if (\$34 ) begin
              \$44 [0] = 1'h0;
            end
          end
        default:
            \$44 [0] = 1'h1;
      endcase
      if (\$35 ) begin
        \$44 [0] = 1'h1;
      end
    end
    if (forward_csr) begin
      \$44 [31:1] = 31'h00000002;
      \$44 [0] = 1'h0;
      if (csr_attr[0]) begin
        \$44 [0] = 1'h1;
      end else if (\$41 ) begin
        \$44 [0] = 1'h1;
      end else if (\$42 ) begin
        \$44 [0] = 1'h1;
      end
    end
    if (rst) begin
      \$44  = 32'd0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$14 ) begin end
    \$45  = insn[29:28];
    if (rst) begin
      \$45  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$14 ) begin end
    \$46  = insn[14:12];
    if (rst) begin
      \$46  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$14 ) begin end
    \$47  = \$1 ;
    if (rst) begin
      \$47  = 1'h0;
    end
  end
  assign \exception.valid  = exception[0];
  assign \exception.e_type  = exception[31:1];
  assign \csr_attr.ill  = csr_attr[0];
  assign \csr_attr.ro0  = csr_attr[1];
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:221" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.decode.imm_gen (clk, rst, enable, imm, insn);
  reg \$auto$verilog_backend.cc:2355:dump_module$15  = 0;
  reg [31:0] \$1 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:209" *)
  input enable;
  wire enable;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:218" *)
  output [31:0] imm;
  reg [31:0] imm = 32'd0;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:214" *)
  input [31:0] insn;
  wire [31:0] insn;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:218" *)
  always @(posedge clk)
    imm <= \$1 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$15 ) begin end
    \$1  = imm;
    if (enable) begin
      casez (insn[6:2])
        5'h04:
            \$1  = { insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31:20] };
        5'h19:
            \$1  = { insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31:20] };
        5'h00:
            \$1  = { insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31:20] };
        5'h0d:
            \$1  = { insn[31:12], 12'h000 };
        5'h05:
            \$1  = { insn[31:12], 12'h000 };
        5'h1b:
            \$1  = { insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[19:12], insn[20], insn[30:21], 1'h0 };
        5'h18:
            \$1  = { insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[7], insn[30:25], insn[11:8], 1'h0 };
        5'h08:
            \$1  = { insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31], insn[31:25], insn[11:7] };
      endcase
    end
    if (rst) begin
      \$1  = 32'd0;
    end
  end
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:111" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.decode.mapping (clk, rst, start, csr_attr, requested_op, csr_encoding, insn);
  reg \$auto$verilog_backend.cc:2355:dump_module$16  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire \$18 ;
  wire \$19 ;
  wire \$2 ;
  wire \$20 ;
  wire \$21 ;
  wire \$22 ;
  wire \$23 ;
  wire \$24 ;
  wire \$25 ;
  wire \$26 ;
  wire \$27 ;
  wire \$28 ;
  wire \$29 ;
  wire \$3 ;
  wire \$30 ;
  wire \$31 ;
  wire \$32 ;
  wire \$33 ;
  wire \$34 ;
  wire \$35 ;
  wire \$36 ;
  wire \$37 ;
  wire \$38 ;
  wire \$39 ;
  wire \$4 ;
  wire \$40 ;
  wire \$41 ;
  wire \$42 ;
  wire \$43 ;
  wire \$44 ;
  reg \$45 ;
  reg [2:0] \$46 ;
  reg [4:0] \$47 ;
  reg [4:0] \$48 ;
  reg [7:0] \$49 ;
  wire \$5 ;
  reg [3:0] \$50 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:612" *)
  input [1:0] csr_attr;
  wire [1:0] csr_attr;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:612" *)
  wire \csr_attr.ill ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/decode.py:612" *)
  wire \csr_attr.ro0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:108" *)
  output [3:0] csr_encoding;
  reg [3:0] csr_encoding = 4'h0;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:118" *)
  reg [2:0] csr_op = 3'h0;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:116" *)
  reg [4:0] dst = 5'h00;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:117" *)
  reg forward_csr = 1'h0;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:81" *)
  input [31:0] insn;
  wire [31:0] insn;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:102" *)
  output [7:0] requested_op;
  reg [7:0] requested_op = 8'h00;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:115" *)
  reg [4:0] src_a = 5'h00;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:76" *)
  input start;
  wire start;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:115" *)
  always @(posedge clk)
    src_a <= \$47 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:116" *)
  always @(posedge clk)
    dst <= \$48 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:102" *)
  always @(posedge clk)
    requested_op <= \$49 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:108" *)
  always @(posedge clk)
    csr_encoding <= \$50 ;
  assign \$1  = insn[14:12] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:137" *) 1'h1;
  assign \$2  = insn[14:12] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:137" *) 3'h5;
  assign \$3  = \$1  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:137" *) \$2 ;
  assign \$4  = insn == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:167" *) 30'h30200073;
  assign \$5  = insn == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:169" *) 29'h10500073;
  assign \$6  = | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:171" *) insn[14:12];
  assign \$7  = insn[14:12] != (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:171" *) 3'h4;
  assign \$8  = \$6  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:171" *) \$7 ;
  assign \$9  = csr_op == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:195" *) 1'h1;
  assign \$10  = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:195" *) dst;
  assign \$11  = \$9  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:195" *) \$10 ;
  assign \$12  = csr_op == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:197" *) 1'h1;
  assign \$13  = | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:197" *) dst;
  assign \$14  = \$12  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:197" *) \$13 ;
  assign \$15  = csr_op == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:199" *) 2'h2;
  assign \$16  = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:199" *) src_a;
  assign \$17  = \$15  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:199" *) \$16 ;
  assign \$18  = csr_op == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:201" *) 2'h2;
  assign \$19  = | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:201" *) src_a;
  assign \$20  = \$18  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:201" *) \$19 ;
  assign \$21  = csr_op == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:203" *) 2'h3;
  assign \$22  = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:203" *) src_a;
  assign \$23  = \$21  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:203" *) \$22 ;
  assign \$24  = csr_op == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:205" *) 2'h3;
  assign \$25  = | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:205" *) src_a;
  assign \$26  = \$24  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:205" *) \$25 ;
  assign \$27  = csr_op == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:207" *) 3'h5;
  assign \$28  = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:207" *) dst;
  assign \$29  = \$27  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:207" *) \$28 ;
  assign \$30  = csr_op == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:209" *) 3'h5;
  assign \$31  = | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:209" *) dst;
  assign \$32  = \$30  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:209" *) \$31 ;
  assign \$33  = csr_op == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:211" *) 3'h6;
  assign \$34  = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:211" *) src_a;
  assign \$35  = \$33  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:211" *) \$34 ;
  assign \$36  = csr_op == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:213" *) 3'h6;
  assign \$37  = | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:213" *) src_a;
  assign \$38  = \$36  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:213" *) \$37 ;
  assign \$39  = csr_op == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:215" *) 3'h7;
  assign \$40  = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:215" *) src_a;
  assign \$41  = \$39  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:215" *) \$40 ;
  assign \$42  = csr_op == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:217" *) 3'h7;
  assign \$43  = | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:217" *) src_a;
  assign \$44  = \$42  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:217" *) \$43 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:117" *)
  always @(posedge clk)
    forward_csr <= \$45 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/control.py:118" *)
  always @(posedge clk)
    csr_op <= \$46 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$16 ) begin end
    \$48  = dst;
    if (start) begin
      \$48  = insn[11:7];
    end
    if (rst) begin
      \$48  = 5'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$16 ) begin end
    \$49  = requested_op;
    if (start) begin
      casez (insn[6:2])
        5'h04:
            (* full_case = 32'd1 *)
            if (\$3 ) begin
              \$49  = { 4'h4, insn[30], insn[14:12] };
            end else begin
              \$49  = { 5'h08, insn[14:12] };
            end
        5'h0d:
            \$49  = 8'hd0;
        5'h05:
            \$49  = 8'h50;
        5'h0c:
            \$49  = { 4'hc, insn[30], insn[14:12] };
        5'h1b:
            \$49  = 8'hb0;
        5'h19:
            \$49  = 8'h98;
        5'h18:
            \$49  = { 5'h11, insn[14:12] };
        5'h00:
            \$49  = { 5'h01, insn[14:12] };
        5'h08:
            \$49  = { 5'h10, insn[14:12] };
        5'h03:
            \$49  = 8'h30;
        5'h1c:
            if (\$4 ) begin
              \$49  = 8'hf8;
            end else if (\$5 ) begin
              \$49  = 8'h30;
            end else if (\$8 ) begin
              \$49  = 8'h24;
            end
      endcase
    end
    if (forward_csr) begin
      (* full_case = 32'd1 *)
      if (csr_attr[0]) begin
      end else if (csr_attr[1]) begin
        \$49  = 8'h25;
      end else begin
        if (\$11 ) begin
          \$49  = 8'h26;
        end else if (\$14 ) begin
          \$49  = 8'h27;
        end else if (\$17 ) begin
          \$49  = 8'h28;
        end else if (\$20 ) begin
          \$49  = 8'h29;
        end else if (\$23 ) begin
          \$49  = 8'h28;
        end else if (\$26 ) begin
          \$49  = 8'h2a;
        end else if (\$29 ) begin
          \$49  = 8'h2b;
        end else if (\$32 ) begin
          \$49  = 8'h2c;
        end else if (\$35 ) begin
          \$49  = 8'h28;
        end else if (\$38 ) begin
          \$49  = 8'h2d;
        end else if (\$41 ) begin
          \$49  = 8'h28;
        end else if (\$44 ) begin
          \$49  = 8'h2e;
        end
      end
    end
    if (rst) begin
      \$49  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$16 ) begin end
    \$50  = csr_encoding;
    if (start) begin
      casez (insn[6:2])
        5'h04:
            /* empty */;
        5'h0d:
            /* empty */;
        5'h05:
            /* empty */;
        5'h0c:
            /* empty */;
        5'h1b:
            /* empty */;
        5'h19:
            /* empty */;
        5'h18:
            /* empty */;
        5'h00:
            /* empty */;
        5'h08:
            /* empty */;
        5'h03:
            /* empty */;
        5'h1c:
            if (\$4 ) begin
            end else if (\$5 ) begin
            end else if (\$8 ) begin
              \$50  = { insn[26], insn[22:20] };
            end
      endcase
    end
    if (rst) begin
      \$50  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$16 ) begin end
    \$45  = 1'h0;
    if (start) begin
      casez (insn[6:2])
        5'h04:
            /* empty */;
        5'h0d:
            /* empty */;
        5'h05:
            /* empty */;
        5'h0c:
            /* empty */;
        5'h1b:
            /* empty */;
        5'h19:
            /* empty */;
        5'h18:
            /* empty */;
        5'h00:
            /* empty */;
        5'h08:
            /* empty */;
        5'h03:
            /* empty */;
        5'h1c:
            if (\$4 ) begin
            end else if (\$5 ) begin
            end else if (\$8 ) begin
              \$45  = 1'h1;
            end
      endcase
    end
    if (rst) begin
      \$45  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$16 ) begin end
    \$46  = insn[14:12];
    if (rst) begin
      \$46  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$16 ) begin end
    \$47  = src_a;
    if (start) begin
      \$47  = insn[19:15];
    end
    if (rst) begin
      \$47  = 5'h00;
    end
  end
  assign \csr_attr.ill  = csr_attr[0];
  assign \csr_attr.ro0  = csr_attr[1];
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:221" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.exception_router (rst, src__ctrl__mem_sel, src__ctrl__except_ctl, src__alu_lo, src__csr__mip, src__csr__mstatus, src__csr__mie, src__decode, src__ctrl__exception, out__mcause, clk);
  reg \$auto$verilog_backend.cc:2355:dump_module$17  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire \$18 ;
  wire \$19 ;
  wire \$2 ;
  wire \$20 ;
  wire \$21 ;
  wire \$22 ;
  wire \$23 ;
  wire \$24 ;
  wire \$25 ;
  wire \$26 ;
  wire \$27 ;
  wire \$28 ;
  wire \$29 ;
  wire \$3 ;
  wire \$30 ;
  wire \$31 ;
  wire \$32 ;
  wire \$33 ;
  wire \$34 ;
  wire \$35 ;
  wire \$36 ;
  wire \$37 ;
  wire \$38 ;
  wire \$39 ;
  wire \$4 ;
  wire \$40 ;
  wire \$41 ;
  wire \$42 ;
  wire \$43 ;
  wire \$44 ;
  wire \$45 ;
  wire \$46 ;
  wire \$47 ;
  wire \$48 ;
  wire \$49 ;
  wire \$5 ;
  wire \$50 ;
  reg [31:0] \$51 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:223" *)
  wire exception;
  (* init = 32'd0 *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:224" *)
  wire [31:0] mcause_latch;
  (* enum_base_type = "MCause.Cause" *)
  (* enum_value_0000000000000000000000000000000 = "INSN_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000001 = "INSN_FAULT" *)
  (* enum_value_0000000000000000000000000000010 = "ILLEGAL_INSN" *)
  (* enum_value_0000000000000000000000000000011 = "BREAKPOINT" *)
  (* enum_value_0000000000000000000000000000100 = "LOAD_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000101 = "LOAD_FAULT" *)
  (* enum_value_0000000000000000000000000000110 = "STORE_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000111 = "STORE_FAULT" *)
  (* enum_value_0000000000000000000000000001000 = "ECALL_UMODE" *)
  (* enum_value_0000000000000000000000000001001 = "ECALL_SMODE" *)
  (* enum_value_0000000000000000000000000001011 = "ECALL_MMODE" *)
  (* enum_value_0000000000000000000000000001100 = "INSN_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001101 = "LOAD_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001111 = "STORE_PAGE_FAULT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:224" *)
  wire [30:0] \mcause_latch.cause ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:224" *)
  wire \mcause_latch.interrupt ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:216" *)
  wire out__exception;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:224" *)
  output [31:0] out__mcause;
  reg [31:0] out__mcause = 32'd0;
  (* enum_base_type = "MCause.Cause" *)
  (* enum_value_0000000000000000000000000000000 = "INSN_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000001 = "INSN_FAULT" *)
  (* enum_value_0000000000000000000000000000010 = "ILLEGAL_INSN" *)
  (* enum_value_0000000000000000000000000000011 = "BREAKPOINT" *)
  (* enum_value_0000000000000000000000000000100 = "LOAD_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000101 = "LOAD_FAULT" *)
  (* enum_value_0000000000000000000000000000110 = "STORE_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000111 = "STORE_FAULT" *)
  (* enum_value_0000000000000000000000000001000 = "ECALL_UMODE" *)
  (* enum_value_0000000000000000000000000001001 = "ECALL_SMODE" *)
  (* enum_value_0000000000000000000000000001011 = "ECALL_MMODE" *)
  (* enum_value_0000000000000000000000000001100 = "INSN_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001101 = "LOAD_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001111 = "STORE_PAGE_FAULT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [30:0] \out__mcause.cause ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \out__mcause.interrupt ;
  (* src = "/home/micko/.cache/pipx/8eadb4d1c8a36c5/lib/python3.13/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:178" *)
  input [1:0] src__alu_lo;
  wire [1:0] src__alu_lo;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  input [31:0] src__csr__mie;
  wire [31:0] src__csr__mie;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mie._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mie._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mie._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [19:0] \src__csr__mie._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__csr__mie.meie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__csr__mie.msie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__csr__mie.mtie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  input [31:0] src__csr__mip;
  wire [31:0] src__csr__mip;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mip._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mip._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mip._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [19:0] \src__csr__mip._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__csr__mip.meip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__csr__mip.msip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__csr__mip.mtip ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  input [31:0] src__csr__mstatus;
  wire [31:0] src__csr__mstatus;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mstatus._padding0 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mstatus._padding1 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [2:0] \src__csr__mstatus._padding2 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [18:0] \src__csr__mstatus._padding3 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__csr__mstatus.mie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__csr__mstatus.mpie ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [1:0] \src__csr__mstatus.mpp ;
  (* enum_base_type = "ExceptCtl" *)
  (* enum_value_000 = "NONE" *)
  (* enum_value_001 = "LATCH_DECODER" *)
  (* enum_value_010 = "LATCH_JAL" *)
  (* enum_value_011 = "LATCH_STORE_ADR" *)
  (* enum_value_100 = "LATCH_LOAD_ADR" *)
  (* enum_value_101 = "ENTER_INT" *)
  (* enum_value_110 = "LEAVE_INT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:124" *)
  input [2:0] src__ctrl__except_ctl;
  wire [2:0] src__ctrl__except_ctl;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:216" *)
  output src__ctrl__exception;
  reg src__ctrl__exception;
  (* enum_base_type = "MemSel" *)
  (* enum_value_00 = "AUTO" *)
  (* enum_value_01 = "BYTE" *)
  (* enum_value_10 = "HWORD" *)
  (* enum_value_11 = "WORD" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:123" *)
  input [1:0] src__ctrl__mem_sel;
  wire [1:0] src__ctrl__mem_sel;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  input [31:0] src__decode;
  wire [31:0] src__decode;
  (* enum_base_type = "MCause.Cause" *)
  (* enum_value_0000000000000000000000000000000 = "INSN_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000001 = "INSN_FAULT" *)
  (* enum_value_0000000000000000000000000000010 = "ILLEGAL_INSN" *)
  (* enum_value_0000000000000000000000000000011 = "BREAKPOINT" *)
  (* enum_value_0000000000000000000000000000100 = "LOAD_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000101 = "LOAD_FAULT" *)
  (* enum_value_0000000000000000000000000000110 = "STORE_MISALIGNED" *)
  (* enum_value_0000000000000000000000000000111 = "STORE_FAULT" *)
  (* enum_value_0000000000000000000000000001000 = "ECALL_UMODE" *)
  (* enum_value_0000000000000000000000000001001 = "ECALL_SMODE" *)
  (* enum_value_0000000000000000000000000001011 = "ECALL_MMODE" *)
  (* enum_value_0000000000000000000000000001100 = "INSN_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001101 = "LOAD_PAGE_FAULT" *)
  (* enum_value_0000000000000000000000000001111 = "STORE_PAGE_FAULT" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire [30:0] \src__decode.e_type ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/top.py:205" *)
  wire \src__decode.valid ;
  assign \$49  = \$43  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:254" *) \$48 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:224" *)
  always @(posedge clk)
    out__mcause <= \$51 ;
  assign \$1  = src__ctrl__except_ctl == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:232" *) 1'h1;
  assign \$2  = src__ctrl__except_ctl == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:244" *) 2'h3;
  assign \$3  = src__ctrl__except_ctl == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:253" *) 3'h4;
  assign \$4  = src__ctrl__except_ctl == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:261" *) 2'h2;
  assign \$5  = src__csr__mstatus[3] & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:237" *) src__csr__mip[11];
  assign \$6  = \$5  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:237" *) src__csr__mie[11];
  assign \$7  = src__ctrl__mem_sel == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:245" *) 2'h2;
  assign \$8  = \$7  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:245" *) src__alu_lo[0];
  assign \$10  = src__ctrl__mem_sel == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:247" *) 2'h3;
  assign \$13  = \$11  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:248" *) \$12 ;
  assign \$14  = \$10  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:247" *) \$13 ;
  assign \$15  = \$9  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:245" *) \$14 ;
  assign \$16  = src__ctrl__mem_sel == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:254" *) 2'h2;
  assign \$17  = \$16  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:254" *) src__alu_lo[0];
  assign \$19  = src__ctrl__mem_sel == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:256" *) 2'h3;
  assign \$22  = \$20  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:257" *) \$21 ;
  assign \$23  = \$19  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:256" *) \$22 ;
  assign \$24  = \$18  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:254" *) \$23 ;
  assign \$26  = src__ctrl__except_ctl == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:232" *) 1'h1;
  assign \$27  = src__ctrl__except_ctl == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:244" *) 2'h3;
  assign \$28  = src__ctrl__except_ctl == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:253" *) 3'h4;
  assign \$29  = src__ctrl__except_ctl == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:261" *) 2'h2;
  assign \$30  = src__csr__mstatus[3] & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:237" *) src__csr__mip[11];
  assign \$31  = \$30  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:237" *) src__csr__mie[11];
  assign \$32  = src__ctrl__mem_sel == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:245" *) 2'h2;
  assign \$33  = \$32  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:245" *) src__alu_lo[0];
  assign \$35  = src__ctrl__mem_sel == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:247" *) 2'h3;
  assign \$38  = \$36  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:248" *) \$37 ;
  assign \$39  = \$35  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:247" *) \$38 ;
  assign \$40  = \$34  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:245" *) \$39 ;
  assign \$41  = src__ctrl__mem_sel == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:254" *) 2'h2;
  assign \$42  = \$41  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:254" *) src__alu_lo[0];
  assign \$44  = src__ctrl__mem_sel == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:256" *) 2'h3;
  assign \$47  = \$45  | (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:257" *) \$46 ;
  assign \$48  = \$44  & (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/exception.py:256" *) \$47 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$17 ) begin end
    src__ctrl__exception = 1'h0;
    if (\$1 ) begin
      if (src__decode[0]) begin
        src__ctrl__exception = 1'h1;
      end
      if (\$6 ) begin
        src__ctrl__exception = 1'h1;
      end
    end else if (\$2 ) begin
      if (\$15 ) begin
        src__ctrl__exception = 1'h1;
      end
    end else if (\$3 ) begin
      if (\$24 ) begin
        src__ctrl__exception = 1'h1;
      end
    end else if (\$4 ) begin
      if (\$25 ) begin
        src__ctrl__exception = 1'h1;
      end
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$17 ) begin end
    \$51  = out__mcause;
    if (\$26 ) begin
      if (src__decode[0]) begin
        \$51 [30:0] = src__decode[31:1];
      end
      if (\$31 ) begin
        \$51 [30:0] = 31'h0000000b;
        \$51 [31] = 1'h1;
      end
    end else if (\$27 ) begin
      if (\$40 ) begin
        \$51 [30:0] = 31'h00000006;
      end
    end else if (\$28 ) begin
      if (\$49 ) begin
        \$51 [30:0] = 31'h00000004;
      end
    end else if (\$29 ) begin
      if (\$50 ) begin
        \$51 [30:0] = 31'h00000000;
      end
    end
    if (rst) begin
      \$51  = 32'd0;
    end
  end
  assign exception = src__ctrl__exception;
  assign out__exception = src__ctrl__exception;
  assign mcause_latch = out__mcause;
  assign \out__mcause.cause  = out__mcause[30:0];
  assign \out__mcause.interrupt  = out__mcause[31];
  assign \mcause_latch.cause  = out__mcause[30:0];
  assign \mcause_latch.interrupt  = out__mcause[31];
  assign \src__decode.valid  = src__decode[0];
  assign \src__decode.e_type  = src__decode[31:1];
  assign \src__csr__mstatus._padding0  = src__csr__mstatus[2:0];
  assign \src__csr__mstatus.mie  = src__csr__mstatus[3];
  assign \src__csr__mstatus._padding1  = src__csr__mstatus[6:4];
  assign \src__csr__mstatus.mpie  = src__csr__mstatus[7];
  assign \src__csr__mstatus._padding2  = src__csr__mstatus[10:8];
  assign \src__csr__mstatus.mpp  = src__csr__mstatus[12:11];
  assign \src__csr__mstatus._padding3  = src__csr__mstatus[31:13];
  assign \src__csr__mip._padding0  = src__csr__mip[2:0];
  assign \src__csr__mip.msip  = src__csr__mip[3];
  assign \src__csr__mip._padding1  = src__csr__mip[6:4];
  assign \src__csr__mip.mtip  = src__csr__mip[7];
  assign \src__csr__mip._padding2  = src__csr__mip[10:8];
  assign \src__csr__mip.meip  = src__csr__mip[11];
  assign \src__csr__mip._padding3  = src__csr__mip[31:12];
  assign \src__csr__mie._padding0  = src__csr__mie[2:0];
  assign \src__csr__mie.msie  = src__csr__mie[3];
  assign \src__csr__mie._padding1  = src__csr__mie[6:4];
  assign \src__csr__mie.mtie  = src__csr__mie[7];
  assign \src__csr__mie._padding2  = src__csr__mie[10:8];
  assign \src__csr__mie.meie  = src__csr__mie[11];
  assign \src__csr__mie._padding3  = src__csr__mie[31:12];
  assign \$9  = \$8 ;
  assign \$11  = src__alu_lo[0];
  assign \$12  = src__alu_lo[1];
  assign \$18  = \$17 ;
  assign \$20  = src__alu_lo[0];
  assign \$21  = src__alu_lo[1];
  assign \$25  = src__alu_lo[1];
  assign \$34  = \$33 ;
  assign \$36  = src__alu_lo[0];
  assign \$37  = src__alu_lo[1];
  assign \$43  = \$42 ;
  assign \$45  = src__alu_lo[0];
  assign \$46  = src__alu_lo[1];
  assign \$50  = src__alu_lo[1];
endmodule

(* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:220" *)
(* generator = "Amaranth" *)
module \sentinel_cpu.wdata_align (latched_adr, data, wb_dat_w, mem_sel);
  reg \$auto$verilog_backend.cc:2355:dump_module$18  = 0;
  wire \$1 ;
  wire \$2 ;
  wire \$3 ;
  wire \$4 ;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:214" *)
  input [31:0] data;
  wire [31:0] data;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:212" *)
  input [31:0] latched_adr;
  wire [31:0] latched_adr;
  (* enum_base_type = "MemSel" *)
  (* enum_value_00 = "AUTO" *)
  (* enum_value_01 = "BYTE" *)
  (* enum_value_10 = "HWORD" *)
  (* enum_value_11 = "WORD" *)
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:209" *)
  input [1:0] mem_sel;
  wire [1:0] mem_sel;
  (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:217" *)
  output [31:0] wb_dat_w;
  reg [31:0] wb_dat_w;
  assign \$1  = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:225" *) latched_adr[1:0];
  assign \$2  = latched_adr[1:0] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:227" *) 1'h1;
  assign \$3  = latched_adr[1:0] == (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:229" *) 2'h2;
  assign \$4  = ! (* src = "/home/micko/src/litex/pythondata-cpu-sentinel/pythondata_cpu_sentinel/sources/src/sentinel/align.py:234" *) latched_adr[1];
  always @* begin
    if (\$auto$verilog_backend.cc:2355:dump_module$18 ) begin end
    wb_dat_w = 32'd0;
    casez (mem_sel)
      2'h1:
          (* full_case = 32'd1 *)
          if (\$1 ) begin
            wb_dat_w[7:0] = data[7:0];
          end else if (\$2 ) begin
            wb_dat_w[15:8] = data[7:0];
          end else if (\$3 ) begin
            wb_dat_w[23:16] = data[7:0];
          end else begin
            wb_dat_w[31:24] = data[7:0];
          end
      2'h2:
          (* full_case = 32'd1 *)
          if (\$4 ) begin
            wb_dat_w[15:0] = data[15:0];
          end else begin
            wb_dat_w[31:16] = data[15:0];
          end
      2'h3:
          wb_dat_w = data;
    endcase
  end
endmodule
