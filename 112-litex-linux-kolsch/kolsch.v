// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : kolsch.v
// Device     : CCGM1A1
// LiteX sha1 : edc0fea4a
// Date       : 2025-06-27 09:41:12
//------------------------------------------------------------------------------

`timescale 1ns / 1ps

//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module kolsch (
    input  wire          clk48,
    output wire   [12:0] sdram_a,
    output wire    [1:0] sdram_ba,
    output wire          sdram_cas_n,
    output wire          sdram_cke,
    output wire          sdram_clock,
    output wire          sdram_cs_n,
    output wire    [1:0] sdram_dm,
    inout  wire   [15:0] sdram_dq,
    output wire          sdram_ras_n,
    output wire          sdram_we_n,
    input  wire          serial_rx,
    output reg           serial_tx,
    output reg           spisdcard_clk,
    output reg           spisdcard_cs_n,
    input  wire          spisdcard_miso,
    output reg           spisdcard_mosi,
    output wire          user_led_n0
);


//------------------------------------------------------------------------------
// Hierarchy
//------------------------------------------------------------------------------

/*
_SoCLinux
└─── crg (_CRG)
│    └─── pll (GateMatePLL)
│    │    └─── [CC_PLL]
│    └─── [CC_USR_RSTN]
└─── bus (SoCBusHandler)
│    └─── _interconnect (InterconnectShared)
│    │    └─── arbiter (Arbiter)
│    │    │    └─── rr (RoundRobin)
│    │    └─── decoder (Decoder)
│    │    └─── timeout (Timeout)
│    │    │    └─── waittimer_0* (WaitTimer)
└─── csr (SoCCSRHandler)
└─── irq (SoCIRQHandler)
└─── ctrl (SoCController)
└─── cpu (VexRiscvSMP)
│    └─── [VexRiscvLitexSmpCluster_Cc1_Iw32Is4096Iy1_Dw32Ds4096Dy1_ITs4DTs4_Ldw16_Ood_Hb1]
└─── rom (SRAM)
└─── sram (SRAM)
└─── identifier (Identifier)
└─── uart_phy (RS232PHY)
│    └─── tx (RS232PHYTX)
│    │    └─── clk_phase_accum (RS232ClkPhaseAccum)
│    │    └─── fsm (FSM)
│    └─── rx (RS232PHYRX)
│    │    └─── clk_phase_accum (RS232ClkPhaseAccum)
│    │    └─── fsm (FSM)
└─── uart (UART)
│    └─── ev (EventManager)
│    │    └─── eventsourceprocess_0* (EventSourceProcess)
│    │    └─── eventsourceprocess_1* (EventSourceProcess)
│    └─── tx_fifo (SyncFIFO)
│    │    └─── fifo (SyncFIFOBuffered)
│    │    │    └─── fifo (SyncFIFO)
│    └─── rx_fifo (SyncFIFO)
│    │    └─── fifo (SyncFIFOBuffered)
│    │    │    └─── fifo (SyncFIFO)
└─── timer0 (Timer)
│    └─── ev (EventManager)
│    │    └─── eventsourceprocess_0* (EventSourceProcess)
└─── leds (LedChaser)
│    └─── waittimer_0* (WaitTimer)
└─── sdrphy (GENSDRPHY)
└─── sdram (LiteDRAMCore)
│    └─── dfii (DFIInjector)
│    │    └─── pi0 (PhaseInjector)
│    └─── controller (LiteDRAMController)
│    │    └─── refresher (Refresher)
│    │    │    └─── timer (RefreshTimer)
│    │    │    └─── postponer (RefreshPostponer)
│    │    │    └─── sequencer (RefreshSequencer)
│    │    │    │    └─── refreshexecuter_0* (RefreshExecuter)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_0* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_1* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_2* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_3* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── multiplexer (Multiplexer)
│    │    │    └─── choose_cmd (_CommandChooser)
│    │    │    │    └─── roundrobin_0* (RoundRobin)
│    │    │    └─── choose_req (_CommandChooser)
│    │    │    │    └─── roundrobin_0* (RoundRobin)
│    │    │    └─── _steerer_0* (_Steerer)
│    │    │    └─── trrdcon (tXXDController)
│    │    │    └─── tfawcon (tFAWController)
│    │    │    └─── tccdcon (tXXDController)
│    │    │    └─── twtrcon (tXXDController)
│    │    │    └─── fsm (FSM)
│    └─── crossbar (LiteDRAMCrossbar)
│    │    └─── roundrobin_0* (RoundRobin)
│    │    └─── roundrobin_1* (RoundRobin)
│    │    └─── roundrobin_2* (RoundRobin)
│    │    └─── roundrobin_3* (RoundRobin)
└─── converter_0* (Converter)
│    └─── downconverter_0* (DownConverter)
└─── wishbone_bridge (LiteDRAMWishbone2Native)
│    └─── fsm (FSM)
└─── spisdcard (SPIMaster)
│    └─── fsm (FSM)
└─── csr_bridge (Wishbone2CSR)
│    └─── fsm (FSM)
└─── csr_bankarray (CSRBankArray)
│    └─── csrbank_0* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    └─── sram_0* (SRAM)
│    └─── csrbank_1* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    └─── csrbank_2* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstorage_3* (CSRStorage)
│    │    └─── csrstorage_4* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    └─── csrbank_3* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstorage_3* (CSRStorage)
│    │    └─── csrstorage_4* (CSRStorage)
│    └─── csrbank_4* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstorage_3* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstatus_2* (CSRStatus)
│    │    └─── csrstorage_4* (CSRStorage)
│    └─── csrbank_5* (CSRBank)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstatus_2* (CSRStatus)
│    │    └─── csrstatus_3* (CSRStatus)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_4* (CSRStatus)
│    │    └─── csrstatus_5* (CSRStatus)
└─── csr_interconnect (InterconnectShared)
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_IOBUF]
└─── [CC_IOBUF]
└─── [CC_IOBUF]
└─── [CC_IOBUF]
└─── [CC_IOBUF]
└─── [CC_IOBUF]
└─── [CC_IOBUF]
└─── [CC_IOBUF]
└─── [CC_IOBUF]
└─── [CC_IOBUF]
└─── [CC_IOBUF]
└─── [CC_IOBUF]
└─── [CC_IOBUF]
└─── [CC_IOBUF]
└─── [CC_IOBUF]
└─── [CC_IOBUF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_ODDR]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
└─── [CC_DFF]
* : Generated name.
[]: BlackBox.
*/

//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

wire          builder_align_q;
reg     [2:0] builder_bankmachine0_next_state = 3'd0;
reg     [2:0] builder_bankmachine0_state = 3'd0;
reg     [2:0] builder_bankmachine1_next_state = 3'd0;
reg     [2:0] builder_bankmachine1_state = 3'd0;
reg     [2:0] builder_bankmachine2_next_state = 3'd0;
reg     [2:0] builder_bankmachine2_state = 3'd0;
reg     [2:0] builder_bankmachine3_next_state = 3'd0;
reg     [2:0] builder_bankmachine3_state = 3'd0;
wire          builder_colognechipsdrtristateimpl0__i;
wire          builder_colognechipsdrtristateimpl0__o;
wire          builder_colognechipsdrtristateimpl0_oe_n;
wire          builder_colognechipsdrtristateimpl10__i;
wire          builder_colognechipsdrtristateimpl10__o;
wire          builder_colognechipsdrtristateimpl10_oe_n;
wire          builder_colognechipsdrtristateimpl11__i;
wire          builder_colognechipsdrtristateimpl11__o;
wire          builder_colognechipsdrtristateimpl11_oe_n;
wire          builder_colognechipsdrtristateimpl12__i;
wire          builder_colognechipsdrtristateimpl12__o;
wire          builder_colognechipsdrtristateimpl12_oe_n;
wire          builder_colognechipsdrtristateimpl13__i;
wire          builder_colognechipsdrtristateimpl13__o;
wire          builder_colognechipsdrtristateimpl13_oe_n;
wire          builder_colognechipsdrtristateimpl14__i;
wire          builder_colognechipsdrtristateimpl14__o;
wire          builder_colognechipsdrtristateimpl14_oe_n;
wire          builder_colognechipsdrtristateimpl15__i;
wire          builder_colognechipsdrtristateimpl15__o;
wire          builder_colognechipsdrtristateimpl15_oe_n;
wire          builder_colognechipsdrtristateimpl1__i;
wire          builder_colognechipsdrtristateimpl1__o;
wire          builder_colognechipsdrtristateimpl1_oe_n;
wire          builder_colognechipsdrtristateimpl2__i;
wire          builder_colognechipsdrtristateimpl2__o;
wire          builder_colognechipsdrtristateimpl2_oe_n;
wire          builder_colognechipsdrtristateimpl3__i;
wire          builder_colognechipsdrtristateimpl3__o;
wire          builder_colognechipsdrtristateimpl3_oe_n;
wire          builder_colognechipsdrtristateimpl4__i;
wire          builder_colognechipsdrtristateimpl4__o;
wire          builder_colognechipsdrtristateimpl4_oe_n;
wire          builder_colognechipsdrtristateimpl5__i;
wire          builder_colognechipsdrtristateimpl5__o;
wire          builder_colognechipsdrtristateimpl5_oe_n;
wire          builder_colognechipsdrtristateimpl6__i;
wire          builder_colognechipsdrtristateimpl6__o;
wire          builder_colognechipsdrtristateimpl6_oe_n;
wire          builder_colognechipsdrtristateimpl7__i;
wire          builder_colognechipsdrtristateimpl7__o;
wire          builder_colognechipsdrtristateimpl7_oe_n;
wire          builder_colognechipsdrtristateimpl8__i;
wire          builder_colognechipsdrtristateimpl8__o;
wire          builder_colognechipsdrtristateimpl8_oe_n;
wire          builder_colognechipsdrtristateimpl9__i;
wire          builder_colognechipsdrtristateimpl9__o;
wire          builder_colognechipsdrtristateimpl9_oe_n;
reg    [29:0] builder_comb_rhs_self0 = 30'd0;
reg    [31:0] builder_comb_rhs_self1 = 32'd0;
reg     [1:0] builder_comb_rhs_self10 = 2'd0;
reg           builder_comb_rhs_self11 = 1'd0;
reg           builder_comb_rhs_self12 = 1'd0;
reg           builder_comb_rhs_self13 = 1'd0;
reg           builder_comb_rhs_self14 = 1'd0;
reg    [12:0] builder_comb_rhs_self15 = 13'd0;
reg     [1:0] builder_comb_rhs_self16 = 2'd0;
reg           builder_comb_rhs_self17 = 1'd0;
reg           builder_comb_rhs_self18 = 1'd0;
reg           builder_comb_rhs_self19 = 1'd0;
reg     [3:0] builder_comb_rhs_self2 = 4'd0;
reg    [22:0] builder_comb_rhs_self20 = 23'd0;
reg           builder_comb_rhs_self21 = 1'd0;
reg           builder_comb_rhs_self22 = 1'd0;
reg    [22:0] builder_comb_rhs_self23 = 23'd0;
reg           builder_comb_rhs_self24 = 1'd0;
reg           builder_comb_rhs_self25 = 1'd0;
reg    [22:0] builder_comb_rhs_self26 = 23'd0;
reg           builder_comb_rhs_self27 = 1'd0;
reg           builder_comb_rhs_self28 = 1'd0;
reg    [22:0] builder_comb_rhs_self29 = 23'd0;
reg           builder_comb_rhs_self3 = 1'd0;
reg           builder_comb_rhs_self30 = 1'd0;
reg           builder_comb_rhs_self31 = 1'd0;
reg           builder_comb_rhs_self4 = 1'd0;
reg           builder_comb_rhs_self5 = 1'd0;
reg     [2:0] builder_comb_rhs_self6 = 3'd0;
reg     [1:0] builder_comb_rhs_self7 = 2'd0;
reg           builder_comb_rhs_self8 = 1'd0;
reg    [12:0] builder_comb_rhs_self9 = 13'd0;
reg           builder_comb_t_self0 = 1'd0;
reg           builder_comb_t_self1 = 1'd0;
reg           builder_comb_t_self2 = 1'd0;
reg           builder_comb_t_self3 = 1'd0;
reg           builder_comb_t_self4 = 1'd0;
reg           builder_comb_t_self5 = 1'd0;
reg    [19:0] builder_count = 20'd1000000;
wire    [4:0] builder_csr_bankarray_adr;
wire   [31:0] builder_csr_bankarray_csrbank0_bus_errors_r;
reg           builder_csr_bankarray_csrbank0_bus_errors_re = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank0_bus_errors_w;
reg           builder_csr_bankarray_csrbank0_bus_errors_we = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank0_reset0_r;
reg           builder_csr_bankarray_csrbank0_reset0_re = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank0_reset0_w;
reg           builder_csr_bankarray_csrbank0_reset0_we = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank0_scratch0_r;
reg           builder_csr_bankarray_csrbank0_scratch0_re = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank0_scratch0_w;
reg           builder_csr_bankarray_csrbank0_scratch0_we = 1'd0;
wire          builder_csr_bankarray_csrbank0_sel;
wire          builder_csr_bankarray_csrbank1_out0_r;
reg           builder_csr_bankarray_csrbank1_out0_re = 1'd0;
wire          builder_csr_bankarray_csrbank1_out0_w;
reg           builder_csr_bankarray_csrbank1_out0_we = 1'd0;
wire          builder_csr_bankarray_csrbank1_sel;
wire    [3:0] builder_csr_bankarray_csrbank2_dfii_control0_r;
reg           builder_csr_bankarray_csrbank2_dfii_control0_re = 1'd0;
wire    [3:0] builder_csr_bankarray_csrbank2_dfii_control0_w;
reg           builder_csr_bankarray_csrbank2_dfii_control0_we = 1'd0;
wire   [12:0] builder_csr_bankarray_csrbank2_dfii_pi0_address0_r;
reg           builder_csr_bankarray_csrbank2_dfii_pi0_address0_re = 1'd0;
wire   [12:0] builder_csr_bankarray_csrbank2_dfii_pi0_address0_w;
reg           builder_csr_bankarray_csrbank2_dfii_pi0_address0_we = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank2_dfii_pi0_baddress0_r;
reg           builder_csr_bankarray_csrbank2_dfii_pi0_baddress0_re = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank2_dfii_pi0_baddress0_w;
reg           builder_csr_bankarray_csrbank2_dfii_pi0_baddress0_we = 1'd0;
wire    [7:0] builder_csr_bankarray_csrbank2_dfii_pi0_command0_r;
reg           builder_csr_bankarray_csrbank2_dfii_pi0_command0_re = 1'd0;
wire    [7:0] builder_csr_bankarray_csrbank2_dfii_pi0_command0_w;
reg           builder_csr_bankarray_csrbank2_dfii_pi0_command0_we = 1'd0;
wire   [15:0] builder_csr_bankarray_csrbank2_dfii_pi0_rddata_r;
reg           builder_csr_bankarray_csrbank2_dfii_pi0_rddata_re = 1'd0;
wire   [15:0] builder_csr_bankarray_csrbank2_dfii_pi0_rddata_w;
reg           builder_csr_bankarray_csrbank2_dfii_pi0_rddata_we = 1'd0;
wire   [15:0] builder_csr_bankarray_csrbank2_dfii_pi0_wrdata0_r;
reg           builder_csr_bankarray_csrbank2_dfii_pi0_wrdata0_re = 1'd0;
wire   [15:0] builder_csr_bankarray_csrbank2_dfii_pi0_wrdata0_w;
reg           builder_csr_bankarray_csrbank2_dfii_pi0_wrdata0_we = 1'd0;
wire          builder_csr_bankarray_csrbank2_sel;
wire   [15:0] builder_csr_bankarray_csrbank3_clk_divider0_r;
reg           builder_csr_bankarray_csrbank3_clk_divider0_re = 1'd0;
wire   [15:0] builder_csr_bankarray_csrbank3_clk_divider0_w;
reg           builder_csr_bankarray_csrbank3_clk_divider0_we = 1'd0;
wire   [15:0] builder_csr_bankarray_csrbank3_control0_r;
reg           builder_csr_bankarray_csrbank3_control0_re = 1'd0;
wire   [15:0] builder_csr_bankarray_csrbank3_control0_w;
reg           builder_csr_bankarray_csrbank3_control0_we = 1'd0;
wire   [16:0] builder_csr_bankarray_csrbank3_cs0_r;
reg           builder_csr_bankarray_csrbank3_cs0_re = 1'd0;
wire   [16:0] builder_csr_bankarray_csrbank3_cs0_w;
reg           builder_csr_bankarray_csrbank3_cs0_we = 1'd0;
wire          builder_csr_bankarray_csrbank3_loopback0_r;
reg           builder_csr_bankarray_csrbank3_loopback0_re = 1'd0;
wire          builder_csr_bankarray_csrbank3_loopback0_w;
reg           builder_csr_bankarray_csrbank3_loopback0_we = 1'd0;
wire    [7:0] builder_csr_bankarray_csrbank3_miso_r;
reg           builder_csr_bankarray_csrbank3_miso_re = 1'd0;
wire    [7:0] builder_csr_bankarray_csrbank3_miso_w;
reg           builder_csr_bankarray_csrbank3_miso_we = 1'd0;
wire    [7:0] builder_csr_bankarray_csrbank3_mosi0_r;
reg           builder_csr_bankarray_csrbank3_mosi0_re = 1'd0;
wire    [7:0] builder_csr_bankarray_csrbank3_mosi0_w;
reg           builder_csr_bankarray_csrbank3_mosi0_we = 1'd0;
wire          builder_csr_bankarray_csrbank3_sel;
wire    [1:0] builder_csr_bankarray_csrbank3_status_r;
reg           builder_csr_bankarray_csrbank3_status_re = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank3_status_w;
reg           builder_csr_bankarray_csrbank3_status_we = 1'd0;
wire          builder_csr_bankarray_csrbank4_en0_r;
reg           builder_csr_bankarray_csrbank4_en0_re = 1'd0;
wire          builder_csr_bankarray_csrbank4_en0_w;
reg           builder_csr_bankarray_csrbank4_en0_we = 1'd0;
wire          builder_csr_bankarray_csrbank4_ev_enable0_r;
reg           builder_csr_bankarray_csrbank4_ev_enable0_re = 1'd0;
wire          builder_csr_bankarray_csrbank4_ev_enable0_w;
reg           builder_csr_bankarray_csrbank4_ev_enable0_we = 1'd0;
wire          builder_csr_bankarray_csrbank4_ev_pending_r;
reg           builder_csr_bankarray_csrbank4_ev_pending_re = 1'd0;
wire          builder_csr_bankarray_csrbank4_ev_pending_w;
reg           builder_csr_bankarray_csrbank4_ev_pending_we = 1'd0;
wire          builder_csr_bankarray_csrbank4_ev_status_r;
reg           builder_csr_bankarray_csrbank4_ev_status_re = 1'd0;
wire          builder_csr_bankarray_csrbank4_ev_status_w;
reg           builder_csr_bankarray_csrbank4_ev_status_we = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank4_load0_r;
reg           builder_csr_bankarray_csrbank4_load0_re = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank4_load0_w;
reg           builder_csr_bankarray_csrbank4_load0_we = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank4_reload0_r;
reg           builder_csr_bankarray_csrbank4_reload0_re = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank4_reload0_w;
reg           builder_csr_bankarray_csrbank4_reload0_we = 1'd0;
wire          builder_csr_bankarray_csrbank4_sel;
wire          builder_csr_bankarray_csrbank4_update_value0_r;
reg           builder_csr_bankarray_csrbank4_update_value0_re = 1'd0;
wire          builder_csr_bankarray_csrbank4_update_value0_w;
reg           builder_csr_bankarray_csrbank4_update_value0_we = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank4_value_r;
reg           builder_csr_bankarray_csrbank4_value_re = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank4_value_w;
reg           builder_csr_bankarray_csrbank4_value_we = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank5_ev_enable0_r;
reg           builder_csr_bankarray_csrbank5_ev_enable0_re = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank5_ev_enable0_w;
reg           builder_csr_bankarray_csrbank5_ev_enable0_we = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank5_ev_pending_r;
reg           builder_csr_bankarray_csrbank5_ev_pending_re = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank5_ev_pending_w;
reg           builder_csr_bankarray_csrbank5_ev_pending_we = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank5_ev_status_r;
reg           builder_csr_bankarray_csrbank5_ev_status_re = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank5_ev_status_w;
reg           builder_csr_bankarray_csrbank5_ev_status_we = 1'd0;
wire          builder_csr_bankarray_csrbank5_rxempty_r;
reg           builder_csr_bankarray_csrbank5_rxempty_re = 1'd0;
wire          builder_csr_bankarray_csrbank5_rxempty_w;
reg           builder_csr_bankarray_csrbank5_rxempty_we = 1'd0;
wire          builder_csr_bankarray_csrbank5_rxfull_r;
reg           builder_csr_bankarray_csrbank5_rxfull_re = 1'd0;
wire          builder_csr_bankarray_csrbank5_rxfull_w;
reg           builder_csr_bankarray_csrbank5_rxfull_we = 1'd0;
wire          builder_csr_bankarray_csrbank5_sel;
wire          builder_csr_bankarray_csrbank5_txempty_r;
reg           builder_csr_bankarray_csrbank5_txempty_re = 1'd0;
wire          builder_csr_bankarray_csrbank5_txempty_w;
reg           builder_csr_bankarray_csrbank5_txempty_we = 1'd0;
wire          builder_csr_bankarray_csrbank5_txfull_r;
reg           builder_csr_bankarray_csrbank5_txfull_re = 1'd0;
wire          builder_csr_bankarray_csrbank5_txfull_w;
reg           builder_csr_bankarray_csrbank5_txfull_we = 1'd0;
wire    [7:0] builder_csr_bankarray_dat_r;
wire   [13:0] builder_csr_bankarray_interface0_bank_bus_adr;
reg    [31:0] builder_csr_bankarray_interface0_bank_bus_dat_r = 32'd0;
wire   [31:0] builder_csr_bankarray_interface0_bank_bus_dat_w;
wire          builder_csr_bankarray_interface0_bank_bus_re;
wire          builder_csr_bankarray_interface0_bank_bus_we;
wire   [13:0] builder_csr_bankarray_interface1_bank_bus_adr;
reg    [31:0] builder_csr_bankarray_interface1_bank_bus_dat_r = 32'd0;
wire   [31:0] builder_csr_bankarray_interface1_bank_bus_dat_w;
wire          builder_csr_bankarray_interface1_bank_bus_re;
wire          builder_csr_bankarray_interface1_bank_bus_we;
wire   [13:0] builder_csr_bankarray_interface2_bank_bus_adr;
reg    [31:0] builder_csr_bankarray_interface2_bank_bus_dat_r = 32'd0;
wire   [31:0] builder_csr_bankarray_interface2_bank_bus_dat_w;
wire          builder_csr_bankarray_interface2_bank_bus_re;
wire          builder_csr_bankarray_interface2_bank_bus_we;
wire   [13:0] builder_csr_bankarray_interface3_bank_bus_adr;
reg    [31:0] builder_csr_bankarray_interface3_bank_bus_dat_r = 32'd0;
wire   [31:0] builder_csr_bankarray_interface3_bank_bus_dat_w;
wire          builder_csr_bankarray_interface3_bank_bus_re;
wire          builder_csr_bankarray_interface3_bank_bus_we;
wire   [13:0] builder_csr_bankarray_interface4_bank_bus_adr;
reg    [31:0] builder_csr_bankarray_interface4_bank_bus_dat_r = 32'd0;
wire   [31:0] builder_csr_bankarray_interface4_bank_bus_dat_w;
wire          builder_csr_bankarray_interface4_bank_bus_re;
wire          builder_csr_bankarray_interface4_bank_bus_we;
wire   [13:0] builder_csr_bankarray_interface5_bank_bus_adr;
reg    [31:0] builder_csr_bankarray_interface5_bank_bus_dat_r = 32'd0;
wire   [31:0] builder_csr_bankarray_interface5_bank_bus_dat_w;
wire          builder_csr_bankarray_interface5_bank_bus_re;
wire          builder_csr_bankarray_interface5_bank_bus_we;
wire          builder_csr_bankarray_sel;
reg           builder_csr_bankarray_sel_r = 1'd0;
wire   [13:0] builder_csr_bankarray_sram_bus_adr;
reg    [31:0] builder_csr_bankarray_sram_bus_dat_r = 32'd0;
wire   [31:0] builder_csr_bankarray_sram_bus_dat_w;
wire          builder_csr_bankarray_sram_bus_re;
wire          builder_csr_bankarray_sram_bus_we;
wire   [13:0] builder_csr_interconnect_adr;
wire   [31:0] builder_csr_interconnect_dat_r;
wire   [31:0] builder_csr_interconnect_dat_w;
wire          builder_csr_interconnect_re;
wire          builder_csr_interconnect_we;
wire          builder_done;
reg           builder_error = 1'd0;
wire          builder_gatematepll0;
wire          builder_gatematepll1;
reg           builder_gatematepll2 = 1'd0;
wire          builder_gatematepll3;
wire          builder_gatematepll4;
wire          builder_gatematepll_locked_s1;
wire          builder_grant;
reg           builder_interface0_ack = 1'd0;
wire   [29:0] builder_interface0_adr;
wire    [1:0] builder_interface0_bte;
wire    [2:0] builder_interface0_cti;
wire          builder_interface0_cyc;
reg    [31:0] builder_interface0_dat_r = 32'd0;
wire   [31:0] builder_interface0_dat_w;
reg           builder_interface0_err = 1'd0;
wire    [3:0] builder_interface0_sel;
wire          builder_interface0_stb;
wire          builder_interface0_we;
reg    [13:0] builder_interface1_adr = 14'd0;
reg    [13:0] builder_interface1_adr_wishbone2csr_next_value1 = 14'd0;
reg           builder_interface1_adr_wishbone2csr_next_value_ce1 = 1'd0;
wire   [31:0] builder_interface1_dat_r;
reg    [31:0] builder_interface1_dat_w = 32'd0;
reg    [31:0] builder_interface1_dat_w_wishbone2csr_next_value0 = 32'd0;
reg           builder_interface1_dat_w_wishbone2csr_next_value_ce0 = 1'd0;
reg           builder_interface1_re = 1'd0;
reg           builder_interface1_re_wishbone2csr_next_value2 = 1'd0;
reg           builder_interface1_re_wishbone2csr_next_value_ce2 = 1'd0;
reg           builder_interface1_we = 1'd0;
reg           builder_interface1_we_wishbone2csr_next_value3 = 1'd0;
reg           builder_interface1_we_wishbone2csr_next_value_ce3 = 1'd0;
reg     [1:0] builder_litedramwishbone2native_next_state = 2'd0;
reg     [1:0] builder_litedramwishbone2native_state = 2'd0;
reg           builder_locked0 = 1'd0;
reg           builder_locked1 = 1'd0;
reg           builder_locked10 = 1'd0;
reg           builder_locked11 = 1'd0;
reg           builder_locked2 = 1'd0;
reg           builder_locked3 = 1'd0;
reg           builder_locked4 = 1'd0;
reg           builder_locked5 = 1'd0;
reg           builder_locked6 = 1'd0;
reg           builder_locked7 = 1'd0;
reg           builder_locked8 = 1'd0;
reg           builder_locked9 = 1'd0;
reg     [2:0] builder_multiplexer_next_state = 3'd0;
reg     [2:0] builder_multiplexer_state = 3'd0;
reg           builder_multiregimpl0 = 1'd0;
reg           builder_multiregimpl1 = 1'd0;
reg           builder_new_master_rdata_valid0 = 1'd0;
reg           builder_new_master_rdata_valid1 = 1'd0;
reg           builder_new_master_rdata_valid10 = 1'd0;
reg           builder_new_master_rdata_valid11 = 1'd0;
reg           builder_new_master_rdata_valid2 = 1'd0;
reg           builder_new_master_rdata_valid3 = 1'd0;
reg           builder_new_master_rdata_valid4 = 1'd0;
reg           builder_new_master_rdata_valid5 = 1'd0;
reg           builder_new_master_rdata_valid6 = 1'd0;
reg           builder_new_master_rdata_valid7 = 1'd0;
reg           builder_new_master_rdata_valid8 = 1'd0;
reg           builder_new_master_rdata_valid9 = 1'd0;
reg           builder_new_master_wdata_ready0 = 1'd0;
reg           builder_new_master_wdata_ready1 = 1'd0;
reg           builder_new_master_wdata_ready2 = 1'd0;
reg     [1:0] builder_refresher_next_state = 2'd0;
reg     [1:0] builder_refresher_state = 2'd0;
wire          builder_request;
wire          builder_roundrobin0_ce;
reg     [1:0] builder_roundrobin0_grant = 2'd0;
wire    [2:0] builder_roundrobin0_request;
wire          builder_roundrobin1_ce;
reg     [1:0] builder_roundrobin1_grant = 2'd0;
wire    [2:0] builder_roundrobin1_request;
wire          builder_roundrobin2_ce;
reg     [1:0] builder_roundrobin2_grant = 2'd0;
wire    [2:0] builder_roundrobin2_request;
wire          builder_roundrobin3_ce;
reg     [1:0] builder_roundrobin3_grant = 2'd0;
wire    [2:0] builder_roundrobin3_request;
reg           builder_rs232phyrx_next_state = 1'd0;
reg           builder_rs232phyrx_state = 1'd0;
reg           builder_rs232phytx_next_state = 1'd0;
reg           builder_rs232phytx_state = 1'd0;
wire          builder_rst10;
wire          builder_rst11;
reg           builder_shared_ack = 1'd0;
wire   [29:0] builder_shared_adr;
wire    [1:0] builder_shared_bte;
wire    [2:0] builder_shared_cti;
wire          builder_shared_cyc;
reg    [31:0] builder_shared_dat_r = 32'd0;
wire   [31:0] builder_shared_dat_w;
wire          builder_shared_err;
wire    [3:0] builder_shared_sel;
wire          builder_shared_stb;
wire          builder_shared_we;
reg     [5:0] builder_slave_sel = 6'd0;
reg     [5:0] builder_slave_sel_r = 6'd0;
reg     [1:0] builder_spimaster_next_state = 2'd0;
reg     [1:0] builder_spimaster_state = 2'd0;
reg           builder_sync_f_self = 1'd0;
reg     [1:0] builder_sync_rhs_self0 = 2'd0;
reg    [12:0] builder_sync_rhs_self1 = 13'd0;
reg           builder_sync_rhs_self2 = 1'd0;
reg           builder_sync_rhs_self3 = 1'd0;
reg           builder_sync_rhs_self4 = 1'd0;
reg           builder_sync_rhs_self5 = 1'd0;
reg           builder_sync_rhs_self6 = 1'd0;
wire          builder_wait;
reg     [1:0] builder_wishbone2csr_next_state = 2'd0;
reg     [1:0] builder_wishbone2csr_state = 2'd0;
wire          crg_clkin;
wire          crg_clkout0;
wire          crg_clkout1;
wire          crg_locked;
wire          crg_reset;
reg           crg_rst = 1'd0;
wire          crg_rst_n;
reg           leds_chaser = 1'd0;
reg    [23:0] leds_count = 24'd12000000;
wire          leds_done;
reg           leds_leds = 1'd0;
reg           leds_mode = 1'd0;
reg           leds_re = 1'd0;
reg           leds_storage = 1'd0;
wire          leds_wait;
wire          sdrphy_dfi_p0_act_n;
wire   [12:0] sdrphy_dfi_p0_address;
wire    [1:0] sdrphy_dfi_p0_bank;
wire          sdrphy_dfi_p0_cas_n;
wire          sdrphy_dfi_p0_cke;
wire          sdrphy_dfi_p0_cs_n;
wire          sdrphy_dfi_p0_odt;
wire          sdrphy_dfi_p0_ras_n;
wire   [15:0] sdrphy_dfi_p0_rddata;
wire          sdrphy_dfi_p0_rddata_en;
reg           sdrphy_dfi_p0_rddata_valid = 1'd0;
wire          sdrphy_dfi_p0_reset_n;
wire          sdrphy_dfi_p0_we_n;
wire   [15:0] sdrphy_dfi_p0_wrdata;
wire          sdrphy_dfi_p0_wrdata_en;
wire    [1:0] sdrphy_dfi_p0_wrdata_mask;
reg     [2:0] sdrphy_rddata_en = 3'd0;
reg           soclinux_aborted = 1'd0;
reg           soclinux_aborted_litedramwishbone2native_next_value = 1'd0;
reg           soclinux_aborted_litedramwishbone2native_next_value_ce = 1'd0;
reg           soclinux_address_re = 1'd0;
reg    [12:0] soclinux_address_storage = 13'd0;
reg           soclinux_baddress_re = 1'd0;
reg     [1:0] soclinux_baddress_storage = 2'd0;
reg           soclinux_bankmachine0_auto_precharge = 1'd0;
reg    [12:0] soclinux_bankmachine0_cmd_payload_a = 13'd0;
wire    [1:0] soclinux_bankmachine0_cmd_payload_ba;
reg           soclinux_bankmachine0_cmd_payload_cas = 1'd0;
reg           soclinux_bankmachine0_cmd_payload_is_cmd = 1'd0;
reg           soclinux_bankmachine0_cmd_payload_is_read = 1'd0;
reg           soclinux_bankmachine0_cmd_payload_is_write = 1'd0;
reg           soclinux_bankmachine0_cmd_payload_ras = 1'd0;
reg           soclinux_bankmachine0_cmd_payload_we = 1'd0;
reg           soclinux_bankmachine0_cmd_ready = 1'd0;
reg           soclinux_bankmachine0_cmd_valid = 1'd0;
reg     [2:0] soclinux_bankmachine0_consume = 3'd0;
wire          soclinux_bankmachine0_do_read;
wire          soclinux_bankmachine0_fifo_in_first;
wire          soclinux_bankmachine0_fifo_in_last;
wire   [22:0] soclinux_bankmachine0_fifo_in_payload_addr;
wire          soclinux_bankmachine0_fifo_in_payload_we;
wire          soclinux_bankmachine0_fifo_out_first;
wire          soclinux_bankmachine0_fifo_out_last;
wire   [22:0] soclinux_bankmachine0_fifo_out_payload_addr;
wire          soclinux_bankmachine0_fifo_out_payload_we;
reg     [3:0] soclinux_bankmachine0_level = 4'd0;
wire          soclinux_bankmachine0_pipe_valid_sink_first;
wire          soclinux_bankmachine0_pipe_valid_sink_last;
wire   [22:0] soclinux_bankmachine0_pipe_valid_sink_payload_addr;
wire          soclinux_bankmachine0_pipe_valid_sink_payload_we;
wire          soclinux_bankmachine0_pipe_valid_sink_ready;
wire          soclinux_bankmachine0_pipe_valid_sink_valid;
reg           soclinux_bankmachine0_pipe_valid_source_first = 1'd0;
reg           soclinux_bankmachine0_pipe_valid_source_last = 1'd0;
reg    [22:0] soclinux_bankmachine0_pipe_valid_source_payload_addr = 23'd0;
reg           soclinux_bankmachine0_pipe_valid_source_payload_we = 1'd0;
wire          soclinux_bankmachine0_pipe_valid_source_ready;
reg           soclinux_bankmachine0_pipe_valid_source_valid = 1'd0;
reg     [2:0] soclinux_bankmachine0_produce = 3'd0;
wire    [2:0] soclinux_bankmachine0_rdport_adr;
wire   [25:0] soclinux_bankmachine0_rdport_dat_r;
reg           soclinux_bankmachine0_refresh_gnt = 1'd0;
wire          soclinux_bankmachine0_refresh_req;
reg           soclinux_bankmachine0_replace = 1'd0;
wire   [22:0] soclinux_bankmachine0_req_addr;
wire          soclinux_bankmachine0_req_lock;
reg           soclinux_bankmachine0_req_rdata_valid = 1'd0;
wire          soclinux_bankmachine0_req_ready;
wire          soclinux_bankmachine0_req_valid;
reg           soclinux_bankmachine0_req_wdata_ready = 1'd0;
wire          soclinux_bankmachine0_req_we;
reg    [12:0] soclinux_bankmachine0_row = 13'd0;
reg           soclinux_bankmachine0_row_close = 1'd0;
reg           soclinux_bankmachine0_row_col_n_addr_sel = 1'd0;
wire          soclinux_bankmachine0_row_hit;
reg           soclinux_bankmachine0_row_open = 1'd0;
reg           soclinux_bankmachine0_row_opened = 1'd0;
reg           soclinux_bankmachine0_sink_first = 1'd0;
reg           soclinux_bankmachine0_sink_last = 1'd0;
wire   [22:0] soclinux_bankmachine0_sink_payload_addr;
wire          soclinux_bankmachine0_sink_payload_we;
wire          soclinux_bankmachine0_sink_ready;
wire          soclinux_bankmachine0_sink_sink_first;
wire          soclinux_bankmachine0_sink_sink_last;
wire   [22:0] soclinux_bankmachine0_sink_sink_payload_addr;
wire          soclinux_bankmachine0_sink_sink_payload_we;
wire          soclinux_bankmachine0_sink_sink_ready;
wire          soclinux_bankmachine0_sink_sink_valid;
wire          soclinux_bankmachine0_sink_valid;
wire          soclinux_bankmachine0_source_first;
wire          soclinux_bankmachine0_source_last;
wire   [22:0] soclinux_bankmachine0_source_payload_addr;
wire          soclinux_bankmachine0_source_payload_we;
wire          soclinux_bankmachine0_source_ready;
wire          soclinux_bankmachine0_source_source_first;
wire          soclinux_bankmachine0_source_source_last;
wire   [22:0] soclinux_bankmachine0_source_source_payload_addr;
wire          soclinux_bankmachine0_source_source_payload_we;
wire          soclinux_bankmachine0_source_source_ready;
wire          soclinux_bankmachine0_source_source_valid;
wire          soclinux_bankmachine0_source_valid;
wire   [25:0] soclinux_bankmachine0_syncfifo0_din;
wire   [25:0] soclinux_bankmachine0_syncfifo0_dout;
wire          soclinux_bankmachine0_syncfifo0_re;
wire          soclinux_bankmachine0_syncfifo0_readable;
wire          soclinux_bankmachine0_syncfifo0_we;
wire          soclinux_bankmachine0_syncfifo0_writable;
reg           soclinux_bankmachine0_trascon_count = 1'd0;
reg           soclinux_bankmachine0_trascon_ready = 1'd0;
wire          soclinux_bankmachine0_trascon_valid;
reg           soclinux_bankmachine0_trccon_count = 1'd0;
reg           soclinux_bankmachine0_trccon_ready = 1'd0;
wire          soclinux_bankmachine0_trccon_valid;
reg     [1:0] soclinux_bankmachine0_twtpcon_count = 2'd0;
reg           soclinux_bankmachine0_twtpcon_ready = 1'd0;
wire          soclinux_bankmachine0_twtpcon_valid;
reg     [2:0] soclinux_bankmachine0_wrport_adr = 3'd0;
wire   [25:0] soclinux_bankmachine0_wrport_dat_r;
wire   [25:0] soclinux_bankmachine0_wrport_dat_w;
wire          soclinux_bankmachine0_wrport_we;
reg           soclinux_bankmachine1_auto_precharge = 1'd0;
reg    [12:0] soclinux_bankmachine1_cmd_payload_a = 13'd0;
wire    [1:0] soclinux_bankmachine1_cmd_payload_ba;
reg           soclinux_bankmachine1_cmd_payload_cas = 1'd0;
reg           soclinux_bankmachine1_cmd_payload_is_cmd = 1'd0;
reg           soclinux_bankmachine1_cmd_payload_is_read = 1'd0;
reg           soclinux_bankmachine1_cmd_payload_is_write = 1'd0;
reg           soclinux_bankmachine1_cmd_payload_ras = 1'd0;
reg           soclinux_bankmachine1_cmd_payload_we = 1'd0;
reg           soclinux_bankmachine1_cmd_ready = 1'd0;
reg           soclinux_bankmachine1_cmd_valid = 1'd0;
reg     [2:0] soclinux_bankmachine1_consume = 3'd0;
wire          soclinux_bankmachine1_do_read;
wire          soclinux_bankmachine1_fifo_in_first;
wire          soclinux_bankmachine1_fifo_in_last;
wire   [22:0] soclinux_bankmachine1_fifo_in_payload_addr;
wire          soclinux_bankmachine1_fifo_in_payload_we;
wire          soclinux_bankmachine1_fifo_out_first;
wire          soclinux_bankmachine1_fifo_out_last;
wire   [22:0] soclinux_bankmachine1_fifo_out_payload_addr;
wire          soclinux_bankmachine1_fifo_out_payload_we;
reg     [3:0] soclinux_bankmachine1_level = 4'd0;
wire          soclinux_bankmachine1_pipe_valid_sink_first;
wire          soclinux_bankmachine1_pipe_valid_sink_last;
wire   [22:0] soclinux_bankmachine1_pipe_valid_sink_payload_addr;
wire          soclinux_bankmachine1_pipe_valid_sink_payload_we;
wire          soclinux_bankmachine1_pipe_valid_sink_ready;
wire          soclinux_bankmachine1_pipe_valid_sink_valid;
reg           soclinux_bankmachine1_pipe_valid_source_first = 1'd0;
reg           soclinux_bankmachine1_pipe_valid_source_last = 1'd0;
reg    [22:0] soclinux_bankmachine1_pipe_valid_source_payload_addr = 23'd0;
reg           soclinux_bankmachine1_pipe_valid_source_payload_we = 1'd0;
wire          soclinux_bankmachine1_pipe_valid_source_ready;
reg           soclinux_bankmachine1_pipe_valid_source_valid = 1'd0;
reg     [2:0] soclinux_bankmachine1_produce = 3'd0;
wire    [2:0] soclinux_bankmachine1_rdport_adr;
wire   [25:0] soclinux_bankmachine1_rdport_dat_r;
reg           soclinux_bankmachine1_refresh_gnt = 1'd0;
wire          soclinux_bankmachine1_refresh_req;
reg           soclinux_bankmachine1_replace = 1'd0;
wire   [22:0] soclinux_bankmachine1_req_addr;
wire          soclinux_bankmachine1_req_lock;
reg           soclinux_bankmachine1_req_rdata_valid = 1'd0;
wire          soclinux_bankmachine1_req_ready;
wire          soclinux_bankmachine1_req_valid;
reg           soclinux_bankmachine1_req_wdata_ready = 1'd0;
wire          soclinux_bankmachine1_req_we;
reg    [12:0] soclinux_bankmachine1_row = 13'd0;
reg           soclinux_bankmachine1_row_close = 1'd0;
reg           soclinux_bankmachine1_row_col_n_addr_sel = 1'd0;
wire          soclinux_bankmachine1_row_hit;
reg           soclinux_bankmachine1_row_open = 1'd0;
reg           soclinux_bankmachine1_row_opened = 1'd0;
reg           soclinux_bankmachine1_sink_first = 1'd0;
reg           soclinux_bankmachine1_sink_last = 1'd0;
wire   [22:0] soclinux_bankmachine1_sink_payload_addr;
wire          soclinux_bankmachine1_sink_payload_we;
wire          soclinux_bankmachine1_sink_ready;
wire          soclinux_bankmachine1_sink_sink_first;
wire          soclinux_bankmachine1_sink_sink_last;
wire   [22:0] soclinux_bankmachine1_sink_sink_payload_addr;
wire          soclinux_bankmachine1_sink_sink_payload_we;
wire          soclinux_bankmachine1_sink_sink_ready;
wire          soclinux_bankmachine1_sink_sink_valid;
wire          soclinux_bankmachine1_sink_valid;
wire          soclinux_bankmachine1_source_first;
wire          soclinux_bankmachine1_source_last;
wire   [22:0] soclinux_bankmachine1_source_payload_addr;
wire          soclinux_bankmachine1_source_payload_we;
wire          soclinux_bankmachine1_source_ready;
wire          soclinux_bankmachine1_source_source_first;
wire          soclinux_bankmachine1_source_source_last;
wire   [22:0] soclinux_bankmachine1_source_source_payload_addr;
wire          soclinux_bankmachine1_source_source_payload_we;
wire          soclinux_bankmachine1_source_source_ready;
wire          soclinux_bankmachine1_source_source_valid;
wire          soclinux_bankmachine1_source_valid;
wire   [25:0] soclinux_bankmachine1_syncfifo1_din;
wire   [25:0] soclinux_bankmachine1_syncfifo1_dout;
wire          soclinux_bankmachine1_syncfifo1_re;
wire          soclinux_bankmachine1_syncfifo1_readable;
wire          soclinux_bankmachine1_syncfifo1_we;
wire          soclinux_bankmachine1_syncfifo1_writable;
reg           soclinux_bankmachine1_trascon_count = 1'd0;
reg           soclinux_bankmachine1_trascon_ready = 1'd0;
wire          soclinux_bankmachine1_trascon_valid;
reg           soclinux_bankmachine1_trccon_count = 1'd0;
reg           soclinux_bankmachine1_trccon_ready = 1'd0;
wire          soclinux_bankmachine1_trccon_valid;
reg     [1:0] soclinux_bankmachine1_twtpcon_count = 2'd0;
reg           soclinux_bankmachine1_twtpcon_ready = 1'd0;
wire          soclinux_bankmachine1_twtpcon_valid;
reg     [2:0] soclinux_bankmachine1_wrport_adr = 3'd0;
wire   [25:0] soclinux_bankmachine1_wrport_dat_r;
wire   [25:0] soclinux_bankmachine1_wrport_dat_w;
wire          soclinux_bankmachine1_wrport_we;
reg           soclinux_bankmachine2_auto_precharge = 1'd0;
reg    [12:0] soclinux_bankmachine2_cmd_payload_a = 13'd0;
wire    [1:0] soclinux_bankmachine2_cmd_payload_ba;
reg           soclinux_bankmachine2_cmd_payload_cas = 1'd0;
reg           soclinux_bankmachine2_cmd_payload_is_cmd = 1'd0;
reg           soclinux_bankmachine2_cmd_payload_is_read = 1'd0;
reg           soclinux_bankmachine2_cmd_payload_is_write = 1'd0;
reg           soclinux_bankmachine2_cmd_payload_ras = 1'd0;
reg           soclinux_bankmachine2_cmd_payload_we = 1'd0;
reg           soclinux_bankmachine2_cmd_ready = 1'd0;
reg           soclinux_bankmachine2_cmd_valid = 1'd0;
reg     [2:0] soclinux_bankmachine2_consume = 3'd0;
wire          soclinux_bankmachine2_do_read;
wire          soclinux_bankmachine2_fifo_in_first;
wire          soclinux_bankmachine2_fifo_in_last;
wire   [22:0] soclinux_bankmachine2_fifo_in_payload_addr;
wire          soclinux_bankmachine2_fifo_in_payload_we;
wire          soclinux_bankmachine2_fifo_out_first;
wire          soclinux_bankmachine2_fifo_out_last;
wire   [22:0] soclinux_bankmachine2_fifo_out_payload_addr;
wire          soclinux_bankmachine2_fifo_out_payload_we;
reg     [3:0] soclinux_bankmachine2_level = 4'd0;
wire          soclinux_bankmachine2_pipe_valid_sink_first;
wire          soclinux_bankmachine2_pipe_valid_sink_last;
wire   [22:0] soclinux_bankmachine2_pipe_valid_sink_payload_addr;
wire          soclinux_bankmachine2_pipe_valid_sink_payload_we;
wire          soclinux_bankmachine2_pipe_valid_sink_ready;
wire          soclinux_bankmachine2_pipe_valid_sink_valid;
reg           soclinux_bankmachine2_pipe_valid_source_first = 1'd0;
reg           soclinux_bankmachine2_pipe_valid_source_last = 1'd0;
reg    [22:0] soclinux_bankmachine2_pipe_valid_source_payload_addr = 23'd0;
reg           soclinux_bankmachine2_pipe_valid_source_payload_we = 1'd0;
wire          soclinux_bankmachine2_pipe_valid_source_ready;
reg           soclinux_bankmachine2_pipe_valid_source_valid = 1'd0;
reg     [2:0] soclinux_bankmachine2_produce = 3'd0;
wire    [2:0] soclinux_bankmachine2_rdport_adr;
wire   [25:0] soclinux_bankmachine2_rdport_dat_r;
reg           soclinux_bankmachine2_refresh_gnt = 1'd0;
wire          soclinux_bankmachine2_refresh_req;
reg           soclinux_bankmachine2_replace = 1'd0;
wire   [22:0] soclinux_bankmachine2_req_addr;
wire          soclinux_bankmachine2_req_lock;
reg           soclinux_bankmachine2_req_rdata_valid = 1'd0;
wire          soclinux_bankmachine2_req_ready;
wire          soclinux_bankmachine2_req_valid;
reg           soclinux_bankmachine2_req_wdata_ready = 1'd0;
wire          soclinux_bankmachine2_req_we;
reg    [12:0] soclinux_bankmachine2_row = 13'd0;
reg           soclinux_bankmachine2_row_close = 1'd0;
reg           soclinux_bankmachine2_row_col_n_addr_sel = 1'd0;
wire          soclinux_bankmachine2_row_hit;
reg           soclinux_bankmachine2_row_open = 1'd0;
reg           soclinux_bankmachine2_row_opened = 1'd0;
reg           soclinux_bankmachine2_sink_first = 1'd0;
reg           soclinux_bankmachine2_sink_last = 1'd0;
wire   [22:0] soclinux_bankmachine2_sink_payload_addr;
wire          soclinux_bankmachine2_sink_payload_we;
wire          soclinux_bankmachine2_sink_ready;
wire          soclinux_bankmachine2_sink_sink_first;
wire          soclinux_bankmachine2_sink_sink_last;
wire   [22:0] soclinux_bankmachine2_sink_sink_payload_addr;
wire          soclinux_bankmachine2_sink_sink_payload_we;
wire          soclinux_bankmachine2_sink_sink_ready;
wire          soclinux_bankmachine2_sink_sink_valid;
wire          soclinux_bankmachine2_sink_valid;
wire          soclinux_bankmachine2_source_first;
wire          soclinux_bankmachine2_source_last;
wire   [22:0] soclinux_bankmachine2_source_payload_addr;
wire          soclinux_bankmachine2_source_payload_we;
wire          soclinux_bankmachine2_source_ready;
wire          soclinux_bankmachine2_source_source_first;
wire          soclinux_bankmachine2_source_source_last;
wire   [22:0] soclinux_bankmachine2_source_source_payload_addr;
wire          soclinux_bankmachine2_source_source_payload_we;
wire          soclinux_bankmachine2_source_source_ready;
wire          soclinux_bankmachine2_source_source_valid;
wire          soclinux_bankmachine2_source_valid;
wire   [25:0] soclinux_bankmachine2_syncfifo2_din;
wire   [25:0] soclinux_bankmachine2_syncfifo2_dout;
wire          soclinux_bankmachine2_syncfifo2_re;
wire          soclinux_bankmachine2_syncfifo2_readable;
wire          soclinux_bankmachine2_syncfifo2_we;
wire          soclinux_bankmachine2_syncfifo2_writable;
reg           soclinux_bankmachine2_trascon_count = 1'd0;
reg           soclinux_bankmachine2_trascon_ready = 1'd0;
wire          soclinux_bankmachine2_trascon_valid;
reg           soclinux_bankmachine2_trccon_count = 1'd0;
reg           soclinux_bankmachine2_trccon_ready = 1'd0;
wire          soclinux_bankmachine2_trccon_valid;
reg     [1:0] soclinux_bankmachine2_twtpcon_count = 2'd0;
reg           soclinux_bankmachine2_twtpcon_ready = 1'd0;
wire          soclinux_bankmachine2_twtpcon_valid;
reg     [2:0] soclinux_bankmachine2_wrport_adr = 3'd0;
wire   [25:0] soclinux_bankmachine2_wrport_dat_r;
wire   [25:0] soclinux_bankmachine2_wrport_dat_w;
wire          soclinux_bankmachine2_wrport_we;
reg           soclinux_bankmachine3_auto_precharge = 1'd0;
reg    [12:0] soclinux_bankmachine3_cmd_payload_a = 13'd0;
wire    [1:0] soclinux_bankmachine3_cmd_payload_ba;
reg           soclinux_bankmachine3_cmd_payload_cas = 1'd0;
reg           soclinux_bankmachine3_cmd_payload_is_cmd = 1'd0;
reg           soclinux_bankmachine3_cmd_payload_is_read = 1'd0;
reg           soclinux_bankmachine3_cmd_payload_is_write = 1'd0;
reg           soclinux_bankmachine3_cmd_payload_ras = 1'd0;
reg           soclinux_bankmachine3_cmd_payload_we = 1'd0;
reg           soclinux_bankmachine3_cmd_ready = 1'd0;
reg           soclinux_bankmachine3_cmd_valid = 1'd0;
reg     [2:0] soclinux_bankmachine3_consume = 3'd0;
wire          soclinux_bankmachine3_do_read;
wire          soclinux_bankmachine3_fifo_in_first;
wire          soclinux_bankmachine3_fifo_in_last;
wire   [22:0] soclinux_bankmachine3_fifo_in_payload_addr;
wire          soclinux_bankmachine3_fifo_in_payload_we;
wire          soclinux_bankmachine3_fifo_out_first;
wire          soclinux_bankmachine3_fifo_out_last;
wire   [22:0] soclinux_bankmachine3_fifo_out_payload_addr;
wire          soclinux_bankmachine3_fifo_out_payload_we;
reg     [3:0] soclinux_bankmachine3_level = 4'd0;
wire          soclinux_bankmachine3_pipe_valid_sink_first;
wire          soclinux_bankmachine3_pipe_valid_sink_last;
wire   [22:0] soclinux_bankmachine3_pipe_valid_sink_payload_addr;
wire          soclinux_bankmachine3_pipe_valid_sink_payload_we;
wire          soclinux_bankmachine3_pipe_valid_sink_ready;
wire          soclinux_bankmachine3_pipe_valid_sink_valid;
reg           soclinux_bankmachine3_pipe_valid_source_first = 1'd0;
reg           soclinux_bankmachine3_pipe_valid_source_last = 1'd0;
reg    [22:0] soclinux_bankmachine3_pipe_valid_source_payload_addr = 23'd0;
reg           soclinux_bankmachine3_pipe_valid_source_payload_we = 1'd0;
wire          soclinux_bankmachine3_pipe_valid_source_ready;
reg           soclinux_bankmachine3_pipe_valid_source_valid = 1'd0;
reg     [2:0] soclinux_bankmachine3_produce = 3'd0;
wire    [2:0] soclinux_bankmachine3_rdport_adr;
wire   [25:0] soclinux_bankmachine3_rdport_dat_r;
reg           soclinux_bankmachine3_refresh_gnt = 1'd0;
wire          soclinux_bankmachine3_refresh_req;
reg           soclinux_bankmachine3_replace = 1'd0;
wire   [22:0] soclinux_bankmachine3_req_addr;
wire          soclinux_bankmachine3_req_lock;
reg           soclinux_bankmachine3_req_rdata_valid = 1'd0;
wire          soclinux_bankmachine3_req_ready;
wire          soclinux_bankmachine3_req_valid;
reg           soclinux_bankmachine3_req_wdata_ready = 1'd0;
wire          soclinux_bankmachine3_req_we;
reg    [12:0] soclinux_bankmachine3_row = 13'd0;
reg           soclinux_bankmachine3_row_close = 1'd0;
reg           soclinux_bankmachine3_row_col_n_addr_sel = 1'd0;
wire          soclinux_bankmachine3_row_hit;
reg           soclinux_bankmachine3_row_open = 1'd0;
reg           soclinux_bankmachine3_row_opened = 1'd0;
reg           soclinux_bankmachine3_sink_first = 1'd0;
reg           soclinux_bankmachine3_sink_last = 1'd0;
wire   [22:0] soclinux_bankmachine3_sink_payload_addr;
wire          soclinux_bankmachine3_sink_payload_we;
wire          soclinux_bankmachine3_sink_ready;
wire          soclinux_bankmachine3_sink_sink_first;
wire          soclinux_bankmachine3_sink_sink_last;
wire   [22:0] soclinux_bankmachine3_sink_sink_payload_addr;
wire          soclinux_bankmachine3_sink_sink_payload_we;
wire          soclinux_bankmachine3_sink_sink_ready;
wire          soclinux_bankmachine3_sink_sink_valid;
wire          soclinux_bankmachine3_sink_valid;
wire          soclinux_bankmachine3_source_first;
wire          soclinux_bankmachine3_source_last;
wire   [22:0] soclinux_bankmachine3_source_payload_addr;
wire          soclinux_bankmachine3_source_payload_we;
wire          soclinux_bankmachine3_source_ready;
wire          soclinux_bankmachine3_source_source_first;
wire          soclinux_bankmachine3_source_source_last;
wire   [22:0] soclinux_bankmachine3_source_source_payload_addr;
wire          soclinux_bankmachine3_source_source_payload_we;
wire          soclinux_bankmachine3_source_source_ready;
wire          soclinux_bankmachine3_source_source_valid;
wire          soclinux_bankmachine3_source_valid;
wire   [25:0] soclinux_bankmachine3_syncfifo3_din;
wire   [25:0] soclinux_bankmachine3_syncfifo3_dout;
wire          soclinux_bankmachine3_syncfifo3_re;
wire          soclinux_bankmachine3_syncfifo3_readable;
wire          soclinux_bankmachine3_syncfifo3_we;
wire          soclinux_bankmachine3_syncfifo3_writable;
reg           soclinux_bankmachine3_trascon_count = 1'd0;
reg           soclinux_bankmachine3_trascon_ready = 1'd0;
wire          soclinux_bankmachine3_trascon_valid;
reg           soclinux_bankmachine3_trccon_count = 1'd0;
reg           soclinux_bankmachine3_trccon_ready = 1'd0;
wire          soclinux_bankmachine3_trccon_valid;
reg     [1:0] soclinux_bankmachine3_twtpcon_count = 2'd0;
reg           soclinux_bankmachine3_twtpcon_ready = 1'd0;
wire          soclinux_bankmachine3_twtpcon_valid;
reg     [2:0] soclinux_bankmachine3_wrport_adr = 3'd0;
wire   [25:0] soclinux_bankmachine3_wrport_dat_r;
wire   [25:0] soclinux_bankmachine3_wrport_dat_w;
wire          soclinux_bankmachine3_wrport_we;
wire          soclinux_bus_error;
reg    [31:0] soclinux_bus_errors = 32'd0;
reg           soclinux_bus_errors_re = 1'd0;
wire   [31:0] soclinux_bus_errors_status;
wire          soclinux_bus_errors_we;
wire          soclinux_cas_allowed;
wire          soclinux_choose_cmd_ce;
wire   [12:0] soclinux_choose_cmd_cmd_payload_a;
wire    [1:0] soclinux_choose_cmd_cmd_payload_ba;
reg           soclinux_choose_cmd_cmd_payload_cas = 1'd0;
wire          soclinux_choose_cmd_cmd_payload_is_cmd;
wire          soclinux_choose_cmd_cmd_payload_is_read;
wire          soclinux_choose_cmd_cmd_payload_is_write;
reg           soclinux_choose_cmd_cmd_payload_ras = 1'd0;
reg           soclinux_choose_cmd_cmd_payload_we = 1'd0;
reg           soclinux_choose_cmd_cmd_ready = 1'd0;
wire          soclinux_choose_cmd_cmd_valid;
reg     [1:0] soclinux_choose_cmd_grant = 2'd0;
wire    [3:0] soclinux_choose_cmd_request;
reg     [3:0] soclinux_choose_cmd_valids = 4'd0;
reg           soclinux_choose_cmd_want_activates = 1'd0;
reg           soclinux_choose_cmd_want_cmds = 1'd0;
reg           soclinux_choose_cmd_want_reads = 1'd0;
reg           soclinux_choose_cmd_want_writes = 1'd0;
wire          soclinux_choose_req_ce;
wire   [12:0] soclinux_choose_req_cmd_payload_a;
wire    [1:0] soclinux_choose_req_cmd_payload_ba;
reg           soclinux_choose_req_cmd_payload_cas = 1'd0;
wire          soclinux_choose_req_cmd_payload_is_cmd;
wire          soclinux_choose_req_cmd_payload_is_read;
wire          soclinux_choose_req_cmd_payload_is_write;
reg           soclinux_choose_req_cmd_payload_ras = 1'd0;
reg           soclinux_choose_req_cmd_payload_we = 1'd0;
reg           soclinux_choose_req_cmd_ready = 1'd0;
wire          soclinux_choose_req_cmd_valid;
reg     [1:0] soclinux_choose_req_grant = 2'd0;
wire    [3:0] soclinux_choose_req_request;
reg     [3:0] soclinux_choose_req_valids = 4'd0;
reg           soclinux_choose_req_want_activates = 1'd0;
wire          soclinux_choose_req_want_cmds;
reg           soclinux_choose_req_want_reads = 1'd0;
reg           soclinux_choose_req_want_writes = 1'd0;
wire          soclinux_cke;
wire          soclinux_clintbus_ack;
wire   [29:0] soclinux_clintbus_adr;
wire    [1:0] soclinux_clintbus_bte;
wire    [2:0] soclinux_clintbus_cti;
wire          soclinux_clintbus_cyc;
wire   [31:0] soclinux_clintbus_dat_r;
wire   [31:0] soclinux_clintbus_dat_w;
reg           soclinux_clintbus_err = 1'd0;
wire    [3:0] soclinux_clintbus_sel;
wire          soclinux_clintbus_stb;
wire          soclinux_clintbus_we;
wire   [15:0] soclinux_clk_divider0;
reg    [15:0] soclinux_clk_divider1 = 16'd0;
reg           soclinux_clk_enable = 1'd0;
wire          soclinux_clk_fall;
wire          soclinux_clk_rise;
reg           soclinux_cmd_last = 1'd0;
reg    [12:0] soclinux_cmd_payload_a = 13'd0;
reg     [1:0] soclinux_cmd_payload_ba = 2'd0;
reg           soclinux_cmd_payload_cas = 1'd0;
reg           soclinux_cmd_payload_is_read = 1'd0;
reg           soclinux_cmd_payload_is_write = 1'd0;
reg           soclinux_cmd_payload_ras = 1'd0;
reg           soclinux_cmd_payload_we = 1'd0;
reg           soclinux_cmd_ready = 1'd0;
reg           soclinux_cmd_valid = 1'd0;
wire          soclinux_command_issue_r;
reg           soclinux_command_issue_re = 1'd0;
reg           soclinux_command_issue_w = 1'd0;
reg           soclinux_command_issue_we = 1'd0;
reg           soclinux_command_re = 1'd0;
reg     [7:0] soclinux_command_storage = 8'd0;
reg           soclinux_control_re = 1'd0;
reg    [15:0] soclinux_control_storage = 16'd0;
reg           soclinux_count0 = 1'd0;
reg     [2:0] soclinux_count1 = 3'd0;
reg     [2:0] soclinux_count1_spimaster_next_value = 3'd0;
reg           soclinux_count1_spimaster_next_value_ce = 1'd0;
wire          soclinux_cpu_rst;
wire          soclinux_cs;
wire          soclinux_cs_mode;
reg           soclinux_cs_re = 1'd0;
reg    [16:0] soclinux_cs_storage = 17'd1;
reg           soclinux_csr_dfi_p0_act_n = 1'd1;
wire   [12:0] soclinux_csr_dfi_p0_address;
wire    [1:0] soclinux_csr_dfi_p0_bank;
reg           soclinux_csr_dfi_p0_cas_n = 1'd1;
wire          soclinux_csr_dfi_p0_cke;
reg           soclinux_csr_dfi_p0_cs_n = 1'd1;
wire          soclinux_csr_dfi_p0_odt;
reg           soclinux_csr_dfi_p0_ras_n = 1'd1;
reg    [15:0] soclinux_csr_dfi_p0_rddata = 16'd0;
wire          soclinux_csr_dfi_p0_rddata_en;
reg           soclinux_csr_dfi_p0_rddata_valid = 1'd0;
wire          soclinux_csr_dfi_p0_reset_n;
reg           soclinux_csr_dfi_p0_we_n = 1'd1;
wire   [15:0] soclinux_csr_dfi_p0_wrdata;
wire          soclinux_csr_dfi_p0_wrdata_en;
wire    [1:0] soclinux_csr_dfi_p0_wrdata_mask;
wire          soclinux_csrfield_cas;
wire          soclinux_csrfield_cs;
wire          soclinux_csrfield_cs_bottom;
wire          soclinux_csrfield_cs_top;
wire          soclinux_csrfield_ras;
wire          soclinux_csrfield_rden;
wire          soclinux_csrfield_we;
wire          soclinux_csrfield_wren;
reg    [31:0] soclinux_dat_r = 32'd0;
reg           soclinux_dbus_cmd_first = 1'd0;
reg           soclinux_dbus_cmd_last = 1'd0;
wire   [31:0] soclinux_dbus_cmd_payload_addr;
wire          soclinux_dbus_cmd_payload_we;
wire          soclinux_dbus_cmd_ready;
wire          soclinux_dbus_cmd_valid;
wire          soclinux_dbus_rdata_first;
wire          soclinux_dbus_rdata_last;
wire   [15:0] soclinux_dbus_rdata_payload_data;
wire          soclinux_dbus_rdata_ready;
wire          soclinux_dbus_rdata_valid;
reg           soclinux_dbus_wdata_first = 1'd0;
reg           soclinux_dbus_wdata_last = 1'd0;
wire   [15:0] soclinux_dbus_wdata_payload_data;
wire    [1:0] soclinux_dbus_wdata_payload_we;
wire          soclinux_dbus_wdata_ready;
wire          soclinux_dbus_wdata_valid;
reg           soclinux_dfi_p0_act_n = 1'd1;
reg    [12:0] soclinux_dfi_p0_address = 13'd0;
reg     [1:0] soclinux_dfi_p0_bank = 2'd0;
reg           soclinux_dfi_p0_cas_n = 1'd1;
wire          soclinux_dfi_p0_cke;
reg           soclinux_dfi_p0_cs_n = 1'd1;
wire          soclinux_dfi_p0_odt;
reg           soclinux_dfi_p0_ras_n = 1'd1;
wire   [15:0] soclinux_dfi_p0_rddata;
reg           soclinux_dfi_p0_rddata_en = 1'd0;
wire          soclinux_dfi_p0_rddata_valid;
wire          soclinux_dfi_p0_reset_n;
reg           soclinux_dfi_p0_we_n = 1'd1;
wire   [15:0] soclinux_dfi_p0_wrdata;
reg           soclinux_dfi_p0_wrdata_en = 1'd0;
wire    [1:0] soclinux_dfi_p0_wrdata_mask;
wire          soclinux_done0;
reg           soclinux_done1 = 1'd0;
wire          soclinux_done2;
reg           soclinux_en0 = 1'd0;
reg           soclinux_en1 = 1'd0;
reg           soclinux_ext_dfi_p0_act_n = 1'd1;
reg    [12:0] soclinux_ext_dfi_p0_address = 13'd0;
reg     [1:0] soclinux_ext_dfi_p0_bank = 2'd0;
reg           soclinux_ext_dfi_p0_cas_n = 1'd1;
reg           soclinux_ext_dfi_p0_cke = 1'd0;
reg           soclinux_ext_dfi_p0_cs_n = 1'd1;
reg           soclinux_ext_dfi_p0_odt = 1'd0;
reg           soclinux_ext_dfi_p0_ras_n = 1'd1;
reg    [15:0] soclinux_ext_dfi_p0_rddata = 16'd0;
reg           soclinux_ext_dfi_p0_rddata_en = 1'd0;
reg           soclinux_ext_dfi_p0_rddata_valid = 1'd0;
reg           soclinux_ext_dfi_p0_reset_n = 1'd0;
reg           soclinux_ext_dfi_p0_we_n = 1'd1;
reg    [15:0] soclinux_ext_dfi_p0_wrdata = 16'd0;
reg           soclinux_ext_dfi_p0_wrdata_en = 1'd0;
reg     [1:0] soclinux_ext_dfi_p0_wrdata_mask = 2'd0;
reg           soclinux_ext_dfi_sel = 1'd0;
wire          soclinux_go_to_refresh;
reg           soclinux_ibus_cmd_first = 1'd0;
reg           soclinux_ibus_cmd_last = 1'd0;
wire   [31:0] soclinux_ibus_cmd_payload_addr;
wire          soclinux_ibus_cmd_payload_we;
wire          soclinux_ibus_cmd_ready;
wire          soclinux_ibus_cmd_valid;
wire          soclinux_ibus_rdata_first;
wire          soclinux_ibus_rdata_last;
wire   [15:0] soclinux_ibus_rdata_payload_data;
wire          soclinux_ibus_rdata_ready;
wire          soclinux_ibus_rdata_valid;
reg           soclinux_ibus_wdata_first = 1'd0;
reg           soclinux_ibus_wdata_last = 1'd0;
wire   [15:0] soclinux_ibus_wdata_payload_data;
wire    [1:0] soclinux_ibus_wdata_payload_we;
wire          soclinux_ibus_wdata_ready;
wire          soclinux_ibus_wdata_valid;
wire   [22:0] soclinux_interface_bank0_addr;
wire          soclinux_interface_bank0_lock;
wire          soclinux_interface_bank0_rdata_valid;
wire          soclinux_interface_bank0_ready;
wire          soclinux_interface_bank0_valid;
wire          soclinux_interface_bank0_wdata_ready;
wire          soclinux_interface_bank0_we;
wire   [22:0] soclinux_interface_bank1_addr;
wire          soclinux_interface_bank1_lock;
wire          soclinux_interface_bank1_rdata_valid;
wire          soclinux_interface_bank1_ready;
wire          soclinux_interface_bank1_valid;
wire          soclinux_interface_bank1_wdata_ready;
wire          soclinux_interface_bank1_we;
wire   [22:0] soclinux_interface_bank2_addr;
wire          soclinux_interface_bank2_lock;
wire          soclinux_interface_bank2_rdata_valid;
wire          soclinux_interface_bank2_ready;
wire          soclinux_interface_bank2_valid;
wire          soclinux_interface_bank2_wdata_ready;
wire          soclinux_interface_bank2_we;
wire   [22:0] soclinux_interface_bank3_addr;
wire          soclinux_interface_bank3_lock;
wire          soclinux_interface_bank3_rdata_valid;
wire          soclinux_interface_bank3_ready;
wire          soclinux_interface_bank3_valid;
wire          soclinux_interface_bank3_wdata_ready;
wire          soclinux_interface_bank3_we;
wire   [15:0] soclinux_interface_rdata;
reg    [15:0] soclinux_interface_wdata = 16'd0;
reg     [1:0] soclinux_interface_wdata_we = 2'd0;
reg    [31:0] soclinux_interrupt = 32'd0;
reg           soclinux_irq = 1'd0;
reg           soclinux_is_ongoing = 1'd0;
reg           soclinux_jtag_capture = 1'd0;
reg           soclinux_jtag_clk = 1'd0;
reg           soclinux_jtag_enable = 1'd0;
reg           soclinux_jtag_reset = 1'd0;
reg           soclinux_jtag_shift = 1'd0;
reg           soclinux_jtag_tdi = 1'd0;
wire          soclinux_jtag_tdo;
reg           soclinux_jtag_update = 1'd0;
wire    [7:0] soclinux_length0;
wire    [7:0] soclinux_length1;
reg           soclinux_litedram_wb_ack = 1'd0;
wire   [30:0] soclinux_litedram_wb_adr;
reg     [2:0] soclinux_litedram_wb_cti = 3'd0;
reg           soclinux_litedram_wb_cyc = 1'd0;
reg    [15:0] soclinux_litedram_wb_dat_r = 16'd0;
reg    [15:0] soclinux_litedram_wb_dat_w = 16'd0;
reg     [1:0] soclinux_litedram_wb_sel = 2'd0;
reg           soclinux_litedram_wb_stb = 1'd0;
reg           soclinux_litedram_wb_we = 1'd0;
wire          soclinux_litedramnativeport0_cmd_first;
wire          soclinux_litedramnativeport0_cmd_last;
wire   [24:0] soclinux_litedramnativeport0_cmd_payload_addr;
wire          soclinux_litedramnativeport0_cmd_payload_we;
wire          soclinux_litedramnativeport0_cmd_ready;
wire          soclinux_litedramnativeport0_cmd_valid;
reg           soclinux_litedramnativeport0_rdata_first = 1'd0;
reg           soclinux_litedramnativeport0_rdata_last = 1'd0;
wire   [15:0] soclinux_litedramnativeport0_rdata_payload_data;
wire          soclinux_litedramnativeport0_rdata_ready;
wire          soclinux_litedramnativeport0_rdata_valid;
wire          soclinux_litedramnativeport0_wdata_first;
wire          soclinux_litedramnativeport0_wdata_last;
wire   [15:0] soclinux_litedramnativeport0_wdata_payload_data;
wire    [1:0] soclinux_litedramnativeport0_wdata_payload_we;
wire          soclinux_litedramnativeport0_wdata_ready;
wire          soclinux_litedramnativeport0_wdata_valid;
wire          soclinux_litedramnativeport1_cmd_first;
wire          soclinux_litedramnativeport1_cmd_last;
wire   [24:0] soclinux_litedramnativeport1_cmd_payload_addr;
wire          soclinux_litedramnativeport1_cmd_payload_we;
wire          soclinux_litedramnativeport1_cmd_ready;
wire          soclinux_litedramnativeport1_cmd_valid;
reg           soclinux_litedramnativeport1_rdata_first = 1'd0;
reg           soclinux_litedramnativeport1_rdata_last = 1'd0;
wire   [15:0] soclinux_litedramnativeport1_rdata_payload_data;
wire          soclinux_litedramnativeport1_rdata_ready;
wire          soclinux_litedramnativeport1_rdata_valid;
wire          soclinux_litedramnativeport1_wdata_first;
wire          soclinux_litedramnativeport1_wdata_last;
wire   [15:0] soclinux_litedramnativeport1_wdata_payload_data;
wire    [1:0] soclinux_litedramnativeport1_wdata_payload_we;
wire          soclinux_litedramnativeport1_wdata_ready;
wire          soclinux_litedramnativeport1_wdata_valid;
wire          soclinux_litedramnativeport2_cmd_last;
wire   [24:0] soclinux_litedramnativeport2_cmd_payload_addr;
wire          soclinux_litedramnativeport2_cmd_payload_we;
wire          soclinux_litedramnativeport2_cmd_ready;
reg           soclinux_litedramnativeport2_cmd_valid = 1'd0;
wire          soclinux_litedramnativeport2_flush;
wire   [15:0] soclinux_litedramnativeport2_rdata_payload_data;
wire          soclinux_litedramnativeport2_rdata_ready;
wire          soclinux_litedramnativeport2_rdata_valid;
wire   [15:0] soclinux_litedramnativeport2_wdata_payload_data;
wire    [1:0] soclinux_litedramnativeport2_wdata_payload_we;
wire          soclinux_litedramnativeport2_wdata_ready;
reg           soclinux_litedramnativeport2_wdata_valid = 1'd0;
wire          soclinux_loopback;
reg           soclinux_loopback_re = 1'd0;
reg           soclinux_loopback_storage = 1'd0;
reg           soclinux_master_p0_act_n = 1'd1;
reg    [12:0] soclinux_master_p0_address = 13'd0;
reg     [1:0] soclinux_master_p0_bank = 2'd0;
reg           soclinux_master_p0_cas_n = 1'd1;
reg           soclinux_master_p0_cke = 1'd0;
reg           soclinux_master_p0_cs_n = 1'd1;
reg           soclinux_master_p0_odt = 1'd0;
reg           soclinux_master_p0_ras_n = 1'd1;
wire   [15:0] soclinux_master_p0_rddata;
reg           soclinux_master_p0_rddata_en = 1'd0;
wire          soclinux_master_p0_rddata_valid;
reg           soclinux_master_p0_reset_n = 1'd0;
reg           soclinux_master_p0_we_n = 1'd1;
reg    [15:0] soclinux_master_p0_wrdata = 16'd0;
reg           soclinux_master_p0_wrdata_en = 1'd0;
reg     [1:0] soclinux_master_p0_wrdata_mask = 2'd0;
wire          soclinux_max_time0;
wire          soclinux_max_time1;
reg     [7:0] soclinux_miso = 8'd0;
reg     [7:0] soclinux_miso_data = 8'd0;
reg           soclinux_miso_latch = 1'd0;
reg           soclinux_miso_re = 1'd0;
wire    [7:0] soclinux_miso_status;
wire          soclinux_miso_we;
wire          soclinux_mode0;
wire          soclinux_mode1;
wire          soclinux_mode2;
wire    [7:0] soclinux_mosi;
reg     [7:0] soclinux_mosi_data = 8'd0;
reg           soclinux_mosi_latch = 1'd0;
reg           soclinux_mosi_re = 1'd0;
reg     [2:0] soclinux_mosi_sel = 3'd0;
reg     [7:0] soclinux_mosi_storage = 8'd0;
reg    [12:0] soclinux_nop_a = 13'd0;
reg     [1:0] soclinux_nop_ba = 2'd0;
wire          soclinux_odt;
wire          soclinux_pbus_ack;
wire   [29:0] soclinux_pbus_adr;
wire    [1:0] soclinux_pbus_bte;
wire    [2:0] soclinux_pbus_cti;
wire          soclinux_pbus_cyc;
wire   [31:0] soclinux_pbus_dat_r;
wire   [31:0] soclinux_pbus_dat_w;
wire          soclinux_pbus_err;
wire    [3:0] soclinux_pbus_sel;
wire          soclinux_pbus_stb;
wire          soclinux_pbus_we;
wire          soclinux_plicbus_ack;
wire   [29:0] soclinux_plicbus_adr;
wire    [1:0] soclinux_plicbus_bte;
wire    [2:0] soclinux_plicbus_cti;
wire          soclinux_plicbus_cyc;
wire   [31:0] soclinux_plicbus_dat_r;
wire   [31:0] soclinux_plicbus_dat_w;
reg           soclinux_plicbus_err = 1'd0;
wire    [3:0] soclinux_plicbus_sel;
wire          soclinux_plicbus_stb;
wire          soclinux_plicbus_we;
reg           soclinux_postponer_count = 1'd0;
wire          soclinux_postponer_req_i;
reg           soclinux_postponer_req_o = 1'd0;
wire   [10:0] soclinux_ram_adr;
reg           soclinux_ram_adr_burst = 1'd0;
reg           soclinux_ram_bus_ram_bus_ack = 1'd0;
wire   [29:0] soclinux_ram_bus_ram_bus_adr;
wire    [1:0] soclinux_ram_bus_ram_bus_bte;
wire    [2:0] soclinux_ram_bus_ram_bus_cti;
wire          soclinux_ram_bus_ram_bus_cyc;
wire   [31:0] soclinux_ram_bus_ram_bus_dat_r;
wire   [31:0] soclinux_ram_bus_ram_bus_dat_w;
reg           soclinux_ram_bus_ram_bus_err = 1'd0;
wire    [3:0] soclinux_ram_bus_ram_bus_sel;
wire          soclinux_ram_bus_ram_bus_stb;
wire          soclinux_ram_bus_ram_bus_we;
wire   [31:0] soclinux_ram_dat_r;
wire   [31:0] soclinux_ram_dat_w;
reg     [3:0] soclinux_ram_we = 4'd0;
wire          soclinux_ras_allowed;
reg           soclinux_rddata_re = 1'd0;
reg    [15:0] soclinux_rddata_status = 16'd0;
wire          soclinux_rddata_we;
reg           soclinux_re0 = 1'd0;
reg           soclinux_re1 = 1'd0;
wire          soclinux_read_available;
wire          soclinux_reset;
wire          soclinux_reset_n;
reg           soclinux_reset_re = 1'd0;
reg     [1:0] soclinux_reset_storage = 2'd0;
reg     [3:0] soclinux_rx_count = 4'd0;
reg     [3:0] soclinux_rx_count_rs232phyrx_next_value0 = 4'd0;
reg           soclinux_rx_count_rs232phyrx_next_value_ce0 = 1'd0;
reg     [7:0] soclinux_rx_data = 8'd0;
reg     [7:0] soclinux_rx_data_rs232phyrx_next_value1 = 8'd0;
reg           soclinux_rx_data_rs232phyrx_next_value_ce1 = 1'd0;
reg           soclinux_rx_enable = 1'd0;
reg    [31:0] soclinux_rx_phase = 32'd0;
wire          soclinux_rx_rx;
reg           soclinux_rx_rx_d = 1'd0;
reg           soclinux_rx_source_first = 1'd0;
reg           soclinux_rx_source_last = 1'd0;
reg     [7:0] soclinux_rx_source_payload_data = 8'd0;
wire          soclinux_rx_source_ready;
reg           soclinux_rx_source_valid = 1'd0;
reg           soclinux_rx_tick = 1'd0;
reg           soclinux_scratch_re = 1'd0;
reg    [31:0] soclinux_scratch_storage = 32'd305419896;
wire          soclinux_sel0;
wire          soclinux_sel1;
reg           soclinux_sequencer_count = 1'd0;
wire          soclinux_sequencer_done0;
reg           soclinux_sequencer_done1 = 1'd0;
reg           soclinux_sequencer_start0 = 1'd0;
wire          soclinux_sequencer_start1;
reg     [1:0] soclinux_sequencer_trigger = 2'd0;
reg           soclinux_serial_tx_rs232phytx_next_value1 = 1'd0;
reg           soclinux_serial_tx_rs232phytx_next_value_ce1 = 1'd0;
reg           soclinux_skip = 1'd0;
wire          soclinux_slave_p0_act_n;
wire   [12:0] soclinux_slave_p0_address;
wire    [1:0] soclinux_slave_p0_bank;
wire          soclinux_slave_p0_cas_n;
wire          soclinux_slave_p0_cke;
wire          soclinux_slave_p0_cs_n;
wire          soclinux_slave_p0_odt;
wire          soclinux_slave_p0_ras_n;
reg    [15:0] soclinux_slave_p0_rddata = 16'd0;
wire          soclinux_slave_p0_rddata_en;
reg           soclinux_slave_p0_rddata_valid = 1'd0;
wire          soclinux_slave_p0_reset_n;
wire          soclinux_slave_p0_we_n;
wire   [15:0] soclinux_slave_p0_wrdata;
wire          soclinux_slave_p0_wrdata_en;
wire    [1:0] soclinux_slave_p0_wrdata_mask;
reg           soclinux_soc_rst = 1'd0;
wire   [13:0] soclinux_soclinux_adr;
reg           soclinux_soclinux_adr_burst = 1'd0;
wire   [31:0] soclinux_soclinux_dat_r;
reg           soclinux_soclinux_ram_bus_ack = 1'd0;
wire   [29:0] soclinux_soclinux_ram_bus_adr;
wire    [1:0] soclinux_soclinux_ram_bus_bte;
wire    [2:0] soclinux_soclinux_ram_bus_cti;
wire          soclinux_soclinux_ram_bus_cyc;
wire   [31:0] soclinux_soclinux_ram_bus_dat_r;
wire   [31:0] soclinux_soclinux_ram_bus_dat_w;
reg           soclinux_soclinux_ram_bus_err = 1'd0;
wire    [3:0] soclinux_soclinux_ram_bus_sel;
wire          soclinux_soclinux_ram_bus_stb;
wire          soclinux_soclinux_ram_bus_we;
wire          soclinux_start0;
reg           soclinux_start1 = 1'd0;
reg           soclinux_status_re = 1'd0;
reg     [1:0] soclinux_status_status = 2'd0;
wire          soclinux_status_we;
reg     [1:0] soclinux_steerer0 = 2'd0;
reg           soclinux_steerer1 = 1'd1;
reg           soclinux_steerer2 = 1'd1;
reg     [3:0] soclinux_storage0 = 4'd1;
reg    [15:0] soclinux_storage1 = 16'd60;
reg           soclinux_tccdcon_count = 1'd0;
reg           soclinux_tccdcon_ready = 1'd0;
wire          soclinux_tccdcon_valid;
reg           soclinux_tfawcon_ready = 1'd1;
wire          soclinux_tfawcon_valid;
reg     [4:0] soclinux_time0 = 5'd0;
reg     [3:0] soclinux_time1 = 4'd0;
wire    [7:0] soclinux_timer_count0;
reg     [7:0] soclinux_timer_count1 = 8'd187;
wire          soclinux_timer_done0;
wire          soclinux_timer_done1;
reg           soclinux_timer_en_re = 1'd0;
reg           soclinux_timer_en_storage = 1'd0;
reg           soclinux_timer_enable_re = 1'd0;
reg           soclinux_timer_enable_storage = 1'd0;
wire          soclinux_timer_irq;
reg           soclinux_timer_load_re = 1'd0;
reg    [31:0] soclinux_timer_load_storage = 32'd0;
reg           soclinux_timer_pending_r = 1'd0;
reg           soclinux_timer_pending_re = 1'd0;
wire          soclinux_timer_pending_status;
wire          soclinux_timer_pending_we;
reg           soclinux_timer_reload_re = 1'd0;
reg    [31:0] soclinux_timer_reload_storage = 32'd0;
reg           soclinux_timer_status_re = 1'd0;
wire          soclinux_timer_status_status;
wire          soclinux_timer_status_we;
reg           soclinux_timer_update_value_re = 1'd0;
reg           soclinux_timer_update_value_storage = 1'd0;
reg    [31:0] soclinux_timer_value = 32'd0;
reg           soclinux_timer_value_re = 1'd0;
reg    [31:0] soclinux_timer_value_status = 32'd0;
wire          soclinux_timer_value_we;
wire          soclinux_timer_wait;
wire          soclinux_timer_zero0;
wire          soclinux_timer_zero1;
wire          soclinux_timer_zero2;
reg           soclinux_timer_zero_clear = 1'd0;
reg           soclinux_timer_zero_pending = 1'd0;
wire          soclinux_timer_zero_status;
wire          soclinux_timer_zero_trigger;
reg           soclinux_timer_zero_trigger_d = 1'd0;
reg           soclinux_trrdcon_count = 1'd0;
reg           soclinux_trrdcon_ready = 1'd0;
wire          soclinux_trrdcon_valid;
reg     [2:0] soclinux_twtrcon_count = 3'd0;
reg           soclinux_twtrcon_ready = 1'd0;
wire          soclinux_twtrcon_valid;
reg     [3:0] soclinux_tx_count = 4'd0;
reg     [3:0] soclinux_tx_count_rs232phytx_next_value0 = 4'd0;
reg           soclinux_tx_count_rs232phytx_next_value_ce0 = 1'd0;
reg     [7:0] soclinux_tx_data = 8'd0;
reg     [7:0] soclinux_tx_data_rs232phytx_next_value2 = 8'd0;
reg           soclinux_tx_data_rs232phytx_next_value_ce2 = 1'd0;
reg           soclinux_tx_enable = 1'd0;
reg    [31:0] soclinux_tx_phase = 32'd0;
wire          soclinux_tx_sink_first;
wire          soclinux_tx_sink_last;
wire    [7:0] soclinux_tx_sink_payload_data;
reg           soclinux_tx_sink_ready = 1'd0;
wire          soclinux_tx_sink_valid;
reg           soclinux_tx_tick = 1'd0;
reg           soclinux_uart_enable_re = 1'd0;
reg     [1:0] soclinux_uart_enable_storage = 2'd0;
wire          soclinux_uart_irq;
reg     [1:0] soclinux_uart_pending_r = 2'd0;
reg           soclinux_uart_pending_re = 1'd0;
reg     [1:0] soclinux_uart_pending_status = 2'd0;
wire          soclinux_uart_pending_we;
wire          soclinux_uart_rx0;
wire          soclinux_uart_rx1;
wire          soclinux_uart_rx2;
reg           soclinux_uart_rx_clear = 1'd0;
reg     [3:0] soclinux_uart_rx_fifo_consume = 4'd0;
wire          soclinux_uart_rx_fifo_do_read;
wire          soclinux_uart_rx_fifo_fifo_in_first;
wire          soclinux_uart_rx_fifo_fifo_in_last;
wire    [7:0] soclinux_uart_rx_fifo_fifo_in_payload_data;
wire          soclinux_uart_rx_fifo_fifo_out_first;
wire          soclinux_uart_rx_fifo_fifo_out_last;
wire    [7:0] soclinux_uart_rx_fifo_fifo_out_payload_data;
reg     [4:0] soclinux_uart_rx_fifo_level0 = 5'd0;
wire    [4:0] soclinux_uart_rx_fifo_level1;
reg     [3:0] soclinux_uart_rx_fifo_produce = 4'd0;
wire    [3:0] soclinux_uart_rx_fifo_rdport_adr;
wire    [9:0] soclinux_uart_rx_fifo_rdport_dat_r;
wire          soclinux_uart_rx_fifo_rdport_re;
wire          soclinux_uart_rx_fifo_re;
reg           soclinux_uart_rx_fifo_readable = 1'd0;
reg           soclinux_uart_rx_fifo_replace = 1'd0;
wire          soclinux_uart_rx_fifo_sink_first;
wire          soclinux_uart_rx_fifo_sink_last;
wire    [7:0] soclinux_uart_rx_fifo_sink_payload_data;
wire          soclinux_uart_rx_fifo_sink_ready;
wire          soclinux_uart_rx_fifo_sink_valid;
wire          soclinux_uart_rx_fifo_source_first;
wire          soclinux_uart_rx_fifo_source_last;
wire    [7:0] soclinux_uart_rx_fifo_source_payload_data;
wire          soclinux_uart_rx_fifo_source_ready;
wire          soclinux_uart_rx_fifo_source_valid;
wire    [9:0] soclinux_uart_rx_fifo_syncfifo_din;
wire    [9:0] soclinux_uart_rx_fifo_syncfifo_dout;
wire          soclinux_uart_rx_fifo_syncfifo_re;
wire          soclinux_uart_rx_fifo_syncfifo_readable;
wire          soclinux_uart_rx_fifo_syncfifo_we;
wire          soclinux_uart_rx_fifo_syncfifo_writable;
reg     [3:0] soclinux_uart_rx_fifo_wrport_adr = 4'd0;
wire    [9:0] soclinux_uart_rx_fifo_wrport_dat_r;
wire    [9:0] soclinux_uart_rx_fifo_wrport_dat_w;
wire          soclinux_uart_rx_fifo_wrport_we;
reg           soclinux_uart_rx_pending = 1'd0;
wire          soclinux_uart_rx_status;
wire          soclinux_uart_rx_trigger;
reg           soclinux_uart_rx_trigger_d = 1'd0;
reg           soclinux_uart_rxempty_re = 1'd0;
wire          soclinux_uart_rxempty_status;
wire          soclinux_uart_rxempty_we;
reg           soclinux_uart_rxfull_re = 1'd0;
wire          soclinux_uart_rxfull_status;
wire          soclinux_uart_rxfull_we;
wire    [7:0] soclinux_uart_rxtx_r;
reg           soclinux_uart_rxtx_re = 1'd0;
wire    [7:0] soclinux_uart_rxtx_w;
reg           soclinux_uart_rxtx_we = 1'd0;
reg           soclinux_uart_status_re = 1'd0;
reg     [1:0] soclinux_uart_status_status = 2'd0;
wire          soclinux_uart_status_we;
wire          soclinux_uart_tx0;
wire          soclinux_uart_tx1;
wire          soclinux_uart_tx2;
reg           soclinux_uart_tx_clear = 1'd0;
reg     [3:0] soclinux_uart_tx_fifo_consume = 4'd0;
wire          soclinux_uart_tx_fifo_do_read;
wire          soclinux_uart_tx_fifo_fifo_in_first;
wire          soclinux_uart_tx_fifo_fifo_in_last;
wire    [7:0] soclinux_uart_tx_fifo_fifo_in_payload_data;
wire          soclinux_uart_tx_fifo_fifo_out_first;
wire          soclinux_uart_tx_fifo_fifo_out_last;
wire    [7:0] soclinux_uart_tx_fifo_fifo_out_payload_data;
reg     [4:0] soclinux_uart_tx_fifo_level0 = 5'd0;
wire    [4:0] soclinux_uart_tx_fifo_level1;
reg     [3:0] soclinux_uart_tx_fifo_produce = 4'd0;
wire    [3:0] soclinux_uart_tx_fifo_rdport_adr;
wire    [9:0] soclinux_uart_tx_fifo_rdport_dat_r;
wire          soclinux_uart_tx_fifo_rdport_re;
wire          soclinux_uart_tx_fifo_re;
reg           soclinux_uart_tx_fifo_readable = 1'd0;
reg           soclinux_uart_tx_fifo_replace = 1'd0;
reg           soclinux_uart_tx_fifo_sink_first = 1'd0;
reg           soclinux_uart_tx_fifo_sink_last = 1'd0;
wire    [7:0] soclinux_uart_tx_fifo_sink_payload_data;
wire          soclinux_uart_tx_fifo_sink_ready;
wire          soclinux_uart_tx_fifo_sink_valid;
wire          soclinux_uart_tx_fifo_source_first;
wire          soclinux_uart_tx_fifo_source_last;
wire    [7:0] soclinux_uart_tx_fifo_source_payload_data;
wire          soclinux_uart_tx_fifo_source_ready;
wire          soclinux_uart_tx_fifo_source_valid;
wire    [9:0] soclinux_uart_tx_fifo_syncfifo_din;
wire    [9:0] soclinux_uart_tx_fifo_syncfifo_dout;
wire          soclinux_uart_tx_fifo_syncfifo_re;
wire          soclinux_uart_tx_fifo_syncfifo_readable;
wire          soclinux_uart_tx_fifo_syncfifo_we;
wire          soclinux_uart_tx_fifo_syncfifo_writable;
reg     [3:0] soclinux_uart_tx_fifo_wrport_adr = 4'd0;
wire    [9:0] soclinux_uart_tx_fifo_wrport_dat_r;
wire    [9:0] soclinux_uart_tx_fifo_wrport_dat_w;
wire          soclinux_uart_tx_fifo_wrport_we;
reg           soclinux_uart_tx_pending = 1'd0;
wire          soclinux_uart_tx_status;
wire          soclinux_uart_tx_trigger;
reg           soclinux_uart_tx_trigger_d = 1'd0;
reg           soclinux_uart_txempty_re = 1'd0;
wire          soclinux_uart_txempty_status;
wire          soclinux_uart_txempty_we;
reg           soclinux_uart_txfull_re = 1'd0;
wire          soclinux_uart_txfull_status;
wire          soclinux_uart_txfull_we;
wire          soclinux_uart_uart_sink_first;
wire          soclinux_uart_uart_sink_last;
wire    [7:0] soclinux_uart_uart_sink_payload_data;
wire          soclinux_uart_uart_sink_ready;
wire          soclinux_uart_uart_sink_valid;
wire          soclinux_uart_uart_source_first;
wire          soclinux_uart_uart_source_last;
wire    [7:0] soclinux_uart_uart_source_payload_data;
wire          soclinux_uart_uart_source_ready;
wire          soclinux_uart_uart_source_valid;
wire          soclinux_wants_refresh;
reg           soclinux_wb_sdram_ack = 1'd0;
wire   [29:0] soclinux_wb_sdram_adr;
wire    [1:0] soclinux_wb_sdram_bte;
wire    [2:0] soclinux_wb_sdram_cti;
wire          soclinux_wb_sdram_cyc;
wire   [31:0] soclinux_wb_sdram_dat_r;
wire   [31:0] soclinux_wb_sdram_dat_w;
reg           soclinux_wb_sdram_err = 1'd0;
wire    [3:0] soclinux_wb_sdram_sel;
wire          soclinux_wb_sdram_stb;
wire          soclinux_wb_sdram_we;
reg           soclinux_wrdata_re = 1'd0;
reg    [15:0] soclinux_wrdata_storage = 16'd0;
wire          soclinux_write_available;
reg           soclinux_xfer_enable = 1'd0;
wire          sys_clk;
wire          sys_ps_clk;
wire          sys_ps_rst;
wire          sys_rst;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign soclinux_reset = (soclinux_soc_rst | soclinux_cpu_rst);
assign soclinux_litedramnativeport0_cmd_valid = soclinux_ibus_cmd_valid;
assign soclinux_ibus_cmd_ready = soclinux_litedramnativeport0_cmd_ready;
assign soclinux_litedramnativeport0_cmd_first = soclinux_ibus_cmd_first;
assign soclinux_litedramnativeport0_cmd_last = soclinux_ibus_cmd_last;
assign soclinux_litedramnativeport0_cmd_payload_we = soclinux_ibus_cmd_payload_we;
assign soclinux_litedramnativeport0_cmd_payload_addr = soclinux_ibus_cmd_payload_addr;
assign soclinux_litedramnativeport0_wdata_valid = soclinux_ibus_wdata_valid;
assign soclinux_ibus_wdata_ready = soclinux_litedramnativeport0_wdata_ready;
assign soclinux_litedramnativeport0_wdata_first = soclinux_ibus_wdata_first;
assign soclinux_litedramnativeport0_wdata_last = soclinux_ibus_wdata_last;
assign soclinux_litedramnativeport0_wdata_payload_data = soclinux_ibus_wdata_payload_data;
assign soclinux_litedramnativeport0_wdata_payload_we = soclinux_ibus_wdata_payload_we;
assign soclinux_ibus_rdata_valid = soclinux_litedramnativeport0_rdata_valid;
assign soclinux_litedramnativeport0_rdata_ready = soclinux_ibus_rdata_ready;
assign soclinux_ibus_rdata_first = soclinux_litedramnativeport0_rdata_first;
assign soclinux_ibus_rdata_last = soclinux_litedramnativeport0_rdata_last;
assign soclinux_ibus_rdata_payload_data = soclinux_litedramnativeport0_rdata_payload_data;
assign soclinux_litedramnativeport1_cmd_valid = soclinux_dbus_cmd_valid;
assign soclinux_dbus_cmd_ready = soclinux_litedramnativeport1_cmd_ready;
assign soclinux_litedramnativeport1_cmd_first = soclinux_dbus_cmd_first;
assign soclinux_litedramnativeport1_cmd_last = soclinux_dbus_cmd_last;
assign soclinux_litedramnativeport1_cmd_payload_we = soclinux_dbus_cmd_payload_we;
assign soclinux_litedramnativeport1_cmd_payload_addr = soclinux_dbus_cmd_payload_addr;
assign soclinux_litedramnativeport1_wdata_valid = soclinux_dbus_wdata_valid;
assign soclinux_dbus_wdata_ready = soclinux_litedramnativeport1_wdata_ready;
assign soclinux_litedramnativeport1_wdata_first = soclinux_dbus_wdata_first;
assign soclinux_litedramnativeport1_wdata_last = soclinux_dbus_wdata_last;
assign soclinux_litedramnativeport1_wdata_payload_data = soclinux_dbus_wdata_payload_data;
assign soclinux_litedramnativeport1_wdata_payload_we = soclinux_dbus_wdata_payload_we;
assign soclinux_dbus_rdata_valid = soclinux_litedramnativeport1_rdata_valid;
assign soclinux_litedramnativeport1_rdata_ready = soclinux_dbus_rdata_ready;
assign soclinux_dbus_rdata_first = soclinux_litedramnativeport1_rdata_first;
assign soclinux_dbus_rdata_last = soclinux_litedramnativeport1_rdata_last;
assign soclinux_dbus_rdata_payload_data = soclinux_litedramnativeport1_rdata_payload_data;
always @(*) begin
    crg_rst <= 1'd0;
    if (soclinux_soc_rst) begin
        crg_rst <= 1'd1;
    end
end
assign soclinux_bus_error = builder_error;
always @(*) begin
    soclinux_interrupt <= 32'd0;
    soclinux_interrupt[2] <= soclinux_timer_irq;
    soclinux_interrupt[1] <= soclinux_uart_irq;
end
assign crg_reset = (~crg_rst_n);
assign crg_clkin = clk48;
assign sys_clk = crg_clkout0;
assign sys_ps_clk = crg_clkout1;
assign crg_locked = (builder_gatematepll_locked_s1 & (~crg_reset));
assign builder_shared_adr = builder_comb_rhs_self0;
assign builder_shared_dat_w = builder_comb_rhs_self1;
assign builder_shared_sel = builder_comb_rhs_self2;
assign builder_shared_cyc = builder_comb_rhs_self3;
assign builder_shared_stb = builder_comb_rhs_self4;
assign builder_shared_we = builder_comb_rhs_self5;
assign builder_shared_cti = builder_comb_rhs_self6;
assign builder_shared_bte = builder_comb_rhs_self7;
assign soclinux_pbus_dat_r = builder_shared_dat_r;
assign soclinux_pbus_ack = (builder_shared_ack & (builder_grant == 1'd0));
assign soclinux_pbus_err = (builder_shared_err & (builder_grant == 1'd0));
assign builder_request = {soclinux_pbus_cyc};
assign builder_grant = 1'd0;
always @(*) begin
    builder_slave_sel <= 6'd0;
    builder_slave_sel[0] <= (builder_shared_adr[29:20] == 10'd963);
    builder_slave_sel[1] <= (builder_shared_adr[29:14] == 16'd61441);
    builder_slave_sel[2] <= (builder_shared_adr[29:14] == 1'd0);
    builder_slave_sel[3] <= (builder_shared_adr[29:11] == 16'd32768);
    builder_slave_sel[4] <= (builder_shared_adr[29:24] == 5'd16);
    builder_slave_sel[5] <= (builder_shared_adr[29:14] == 16'd61440);
end
assign soclinux_plicbus_adr = builder_shared_adr;
assign soclinux_plicbus_dat_w = builder_shared_dat_w;
assign soclinux_plicbus_sel = builder_shared_sel;
assign soclinux_plicbus_stb = builder_shared_stb;
assign soclinux_plicbus_we = builder_shared_we;
assign soclinux_plicbus_cti = builder_shared_cti;
assign soclinux_plicbus_bte = builder_shared_bte;
assign soclinux_clintbus_adr = builder_shared_adr;
assign soclinux_clintbus_dat_w = builder_shared_dat_w;
assign soclinux_clintbus_sel = builder_shared_sel;
assign soclinux_clintbus_stb = builder_shared_stb;
assign soclinux_clintbus_we = builder_shared_we;
assign soclinux_clintbus_cti = builder_shared_cti;
assign soclinux_clintbus_bte = builder_shared_bte;
assign soclinux_soclinux_ram_bus_adr = builder_shared_adr;
assign soclinux_soclinux_ram_bus_dat_w = builder_shared_dat_w;
assign soclinux_soclinux_ram_bus_sel = builder_shared_sel;
assign soclinux_soclinux_ram_bus_stb = builder_shared_stb;
assign soclinux_soclinux_ram_bus_we = builder_shared_we;
assign soclinux_soclinux_ram_bus_cti = builder_shared_cti;
assign soclinux_soclinux_ram_bus_bte = builder_shared_bte;
assign soclinux_ram_bus_ram_bus_adr = builder_shared_adr;
assign soclinux_ram_bus_ram_bus_dat_w = builder_shared_dat_w;
assign soclinux_ram_bus_ram_bus_sel = builder_shared_sel;
assign soclinux_ram_bus_ram_bus_stb = builder_shared_stb;
assign soclinux_ram_bus_ram_bus_we = builder_shared_we;
assign soclinux_ram_bus_ram_bus_cti = builder_shared_cti;
assign soclinux_ram_bus_ram_bus_bte = builder_shared_bte;
assign soclinux_wb_sdram_adr = builder_shared_adr;
assign soclinux_wb_sdram_dat_w = builder_shared_dat_w;
assign soclinux_wb_sdram_sel = builder_shared_sel;
assign soclinux_wb_sdram_stb = builder_shared_stb;
assign soclinux_wb_sdram_we = builder_shared_we;
assign soclinux_wb_sdram_cti = builder_shared_cti;
assign soclinux_wb_sdram_bte = builder_shared_bte;
assign builder_interface0_adr = builder_shared_adr;
assign builder_interface0_dat_w = builder_shared_dat_w;
assign builder_interface0_sel = builder_shared_sel;
assign builder_interface0_stb = builder_shared_stb;
assign builder_interface0_we = builder_shared_we;
assign builder_interface0_cti = builder_shared_cti;
assign builder_interface0_bte = builder_shared_bte;
assign soclinux_plicbus_cyc = (builder_shared_cyc & builder_slave_sel[0]);
assign soclinux_clintbus_cyc = (builder_shared_cyc & builder_slave_sel[1]);
assign soclinux_soclinux_ram_bus_cyc = (builder_shared_cyc & builder_slave_sel[2]);
assign soclinux_ram_bus_ram_bus_cyc = (builder_shared_cyc & builder_slave_sel[3]);
assign soclinux_wb_sdram_cyc = (builder_shared_cyc & builder_slave_sel[4]);
assign builder_interface0_cyc = (builder_shared_cyc & builder_slave_sel[5]);
assign builder_shared_err = (((((soclinux_plicbus_err | soclinux_clintbus_err) | soclinux_soclinux_ram_bus_err) | soclinux_ram_bus_ram_bus_err) | soclinux_wb_sdram_err) | builder_interface0_err);
assign builder_wait = ((builder_shared_stb & builder_shared_cyc) & (~builder_shared_ack));
always @(*) begin
    builder_error <= 1'd0;
    builder_shared_ack <= 1'd0;
    builder_shared_dat_r <= 32'd0;
    builder_shared_ack <= (((((soclinux_plicbus_ack | soclinux_clintbus_ack) | soclinux_soclinux_ram_bus_ack) | soclinux_ram_bus_ram_bus_ack) | soclinux_wb_sdram_ack) | builder_interface0_ack);
    builder_shared_dat_r <= (((((({32{builder_slave_sel_r[0]}} & soclinux_plicbus_dat_r) | ({32{builder_slave_sel_r[1]}} & soclinux_clintbus_dat_r)) | ({32{builder_slave_sel_r[2]}} & soclinux_soclinux_ram_bus_dat_r)) | ({32{builder_slave_sel_r[3]}} & soclinux_ram_bus_ram_bus_dat_r)) | ({32{builder_slave_sel_r[4]}} & soclinux_wb_sdram_dat_r)) | ({32{builder_slave_sel_r[5]}} & builder_interface0_dat_r));
    if (builder_done) begin
        builder_shared_dat_r <= 32'd4294967295;
        builder_shared_ack <= 1'd1;
        builder_error <= 1'd1;
    end
end
assign builder_done = (builder_count == 1'd0);
assign soclinux_bus_errors_status = soclinux_bus_errors;
assign soclinux_soclinux_adr = soclinux_soclinux_ram_bus_adr[13:0];
assign soclinux_soclinux_ram_bus_dat_r = soclinux_soclinux_dat_r;
always @(*) begin
    soclinux_ram_we <= 4'd0;
    soclinux_ram_we[0] <= (((soclinux_ram_bus_ram_bus_cyc & soclinux_ram_bus_ram_bus_stb) & soclinux_ram_bus_ram_bus_we) & soclinux_ram_bus_ram_bus_sel[0]);
    soclinux_ram_we[1] <= (((soclinux_ram_bus_ram_bus_cyc & soclinux_ram_bus_ram_bus_stb) & soclinux_ram_bus_ram_bus_we) & soclinux_ram_bus_ram_bus_sel[1]);
    soclinux_ram_we[2] <= (((soclinux_ram_bus_ram_bus_cyc & soclinux_ram_bus_ram_bus_stb) & soclinux_ram_bus_ram_bus_we) & soclinux_ram_bus_ram_bus_sel[2]);
    soclinux_ram_we[3] <= (((soclinux_ram_bus_ram_bus_cyc & soclinux_ram_bus_ram_bus_stb) & soclinux_ram_bus_ram_bus_we) & soclinux_ram_bus_ram_bus_sel[3]);
end
assign soclinux_ram_adr = soclinux_ram_bus_ram_bus_adr[10:0];
assign soclinux_ram_bus_ram_bus_dat_r = soclinux_ram_dat_r;
assign soclinux_ram_dat_w = soclinux_ram_bus_ram_bus_dat_w;
always @(*) begin
    builder_rs232phytx_next_state <= 1'd0;
    soclinux_serial_tx_rs232phytx_next_value1 <= 1'd0;
    soclinux_serial_tx_rs232phytx_next_value_ce1 <= 1'd0;
    soclinux_tx_count_rs232phytx_next_value0 <= 4'd0;
    soclinux_tx_count_rs232phytx_next_value_ce0 <= 1'd0;
    soclinux_tx_data_rs232phytx_next_value2 <= 8'd0;
    soclinux_tx_data_rs232phytx_next_value_ce2 <= 1'd0;
    soclinux_tx_enable <= 1'd0;
    soclinux_tx_sink_ready <= 1'd0;
    builder_rs232phytx_next_state <= builder_rs232phytx_state;
    case (builder_rs232phytx_state)
        1'd1: begin
            soclinux_tx_enable <= 1'd1;
            if (soclinux_tx_tick) begin
                soclinux_serial_tx_rs232phytx_next_value1 <= soclinux_tx_data[0];
                soclinux_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
                soclinux_tx_count_rs232phytx_next_value0 <= (soclinux_tx_count + 1'd1);
                soclinux_tx_count_rs232phytx_next_value_ce0 <= 1'd1;
                soclinux_tx_data_rs232phytx_next_value2 <= {1'd1, soclinux_tx_data[7:1]};
                soclinux_tx_data_rs232phytx_next_value_ce2 <= 1'd1;
                if ((soclinux_tx_count == 4'd9)) begin
                    soclinux_tx_sink_ready <= 1'd1;
                    builder_rs232phytx_next_state <= 1'd0;
                end
            end
        end
        default: begin
            soclinux_tx_count_rs232phytx_next_value0 <= 1'd0;
            soclinux_tx_count_rs232phytx_next_value_ce0 <= 1'd1;
            soclinux_serial_tx_rs232phytx_next_value1 <= 1'd1;
            soclinux_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
            if (soclinux_tx_sink_valid) begin
                soclinux_serial_tx_rs232phytx_next_value1 <= 1'd0;
                soclinux_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
                soclinux_tx_data_rs232phytx_next_value2 <= soclinux_tx_sink_payload_data;
                soclinux_tx_data_rs232phytx_next_value_ce2 <= 1'd1;
                builder_rs232phytx_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    builder_rs232phyrx_next_state <= 1'd0;
    soclinux_rx_count_rs232phyrx_next_value0 <= 4'd0;
    soclinux_rx_count_rs232phyrx_next_value_ce0 <= 1'd0;
    soclinux_rx_data_rs232phyrx_next_value1 <= 8'd0;
    soclinux_rx_data_rs232phyrx_next_value_ce1 <= 1'd0;
    soclinux_rx_enable <= 1'd0;
    soclinux_rx_source_payload_data <= 8'd0;
    soclinux_rx_source_valid <= 1'd0;
    builder_rs232phyrx_next_state <= builder_rs232phyrx_state;
    case (builder_rs232phyrx_state)
        1'd1: begin
            soclinux_rx_enable <= 1'd1;
            if (soclinux_rx_tick) begin
                soclinux_rx_count_rs232phyrx_next_value0 <= (soclinux_rx_count + 1'd1);
                soclinux_rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
                soclinux_rx_data_rs232phyrx_next_value1 <= {soclinux_rx_rx, soclinux_rx_data[7:1]};
                soclinux_rx_data_rs232phyrx_next_value_ce1 <= 1'd1;
                if ((soclinux_rx_count == 4'd9)) begin
                    soclinux_rx_source_valid <= (soclinux_rx_rx == 1'd1);
                    soclinux_rx_source_payload_data <= soclinux_rx_data;
                    builder_rs232phyrx_next_state <= 1'd0;
                end
            end
        end
        default: begin
            soclinux_rx_count_rs232phyrx_next_value0 <= 1'd0;
            soclinux_rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
            if (((soclinux_rx_rx == 1'd0) & (soclinux_rx_rx_d == 1'd1))) begin
                builder_rs232phyrx_next_state <= 1'd1;
            end
        end
    endcase
end
assign soclinux_uart_uart_sink_valid = soclinux_rx_source_valid;
assign soclinux_rx_source_ready = soclinux_uart_uart_sink_ready;
assign soclinux_uart_uart_sink_first = soclinux_rx_source_first;
assign soclinux_uart_uart_sink_last = soclinux_rx_source_last;
assign soclinux_uart_uart_sink_payload_data = soclinux_rx_source_payload_data;
assign soclinux_tx_sink_valid = soclinux_uart_uart_source_valid;
assign soclinux_uart_uart_source_ready = soclinux_tx_sink_ready;
assign soclinux_tx_sink_first = soclinux_uart_uart_source_first;
assign soclinux_tx_sink_last = soclinux_uart_uart_source_last;
assign soclinux_tx_sink_payload_data = soclinux_uart_uart_source_payload_data;
assign soclinux_uart_tx_fifo_sink_valid = soclinux_uart_rxtx_re;
assign soclinux_uart_tx_fifo_sink_payload_data = soclinux_uart_rxtx_r;
assign soclinux_uart_uart_source_valid = soclinux_uart_tx_fifo_source_valid;
assign soclinux_uart_tx_fifo_source_ready = soclinux_uart_uart_source_ready;
assign soclinux_uart_uart_source_first = soclinux_uart_tx_fifo_source_first;
assign soclinux_uart_uart_source_last = soclinux_uart_tx_fifo_source_last;
assign soclinux_uart_uart_source_payload_data = soclinux_uart_tx_fifo_source_payload_data;
assign soclinux_uart_txfull_status = (~soclinux_uart_tx_fifo_sink_ready);
assign soclinux_uart_txempty_status = (~soclinux_uart_tx_fifo_source_valid);
assign soclinux_uart_tx_trigger = soclinux_uart_tx_fifo_sink_ready;
assign soclinux_uart_rx_fifo_sink_valid = soclinux_uart_uart_sink_valid;
assign soclinux_uart_uart_sink_ready = soclinux_uart_rx_fifo_sink_ready;
assign soclinux_uart_rx_fifo_sink_first = soclinux_uart_uart_sink_first;
assign soclinux_uart_rx_fifo_sink_last = soclinux_uart_uart_sink_last;
assign soclinux_uart_rx_fifo_sink_payload_data = soclinux_uart_uart_sink_payload_data;
assign soclinux_uart_rxtx_w = soclinux_uart_rx_fifo_source_payload_data;
assign soclinux_uart_rx_fifo_source_ready = (soclinux_uart_rx_clear | (1'd0 & soclinux_uart_rxtx_we));
assign soclinux_uart_rxempty_status = (~soclinux_uart_rx_fifo_source_valid);
assign soclinux_uart_rxfull_status = (~soclinux_uart_rx_fifo_sink_ready);
assign soclinux_uart_rx_trigger = soclinux_uart_rx_fifo_source_valid;
assign soclinux_uart_tx0 = soclinux_uart_tx_status;
assign soclinux_uart_tx1 = soclinux_uart_tx_pending;
always @(*) begin
    soclinux_uart_tx_clear <= 1'd0;
    if ((soclinux_uart_pending_re & soclinux_uart_pending_r[0])) begin
        soclinux_uart_tx_clear <= 1'd1;
    end
end
assign soclinux_uart_rx0 = soclinux_uart_rx_status;
assign soclinux_uart_rx1 = soclinux_uart_rx_pending;
always @(*) begin
    soclinux_uart_rx_clear <= 1'd0;
    if ((soclinux_uart_pending_re & soclinux_uart_pending_r[1])) begin
        soclinux_uart_rx_clear <= 1'd1;
    end
end
assign soclinux_uart_irq = ((soclinux_uart_pending_status[0] & soclinux_uart_enable_storage[0]) | (soclinux_uart_pending_status[1] & soclinux_uart_enable_storage[1]));
assign soclinux_uart_tx_status = soclinux_uart_tx_trigger;
assign soclinux_uart_rx_status = soclinux_uart_rx_trigger;
assign soclinux_uart_tx_fifo_syncfifo_din = {soclinux_uart_tx_fifo_fifo_in_last, soclinux_uart_tx_fifo_fifo_in_first, soclinux_uart_tx_fifo_fifo_in_payload_data};
assign {soclinux_uart_tx_fifo_fifo_out_last, soclinux_uart_tx_fifo_fifo_out_first, soclinux_uart_tx_fifo_fifo_out_payload_data} = soclinux_uart_tx_fifo_syncfifo_dout;
assign soclinux_uart_tx_fifo_sink_ready = soclinux_uart_tx_fifo_syncfifo_writable;
assign soclinux_uart_tx_fifo_syncfifo_we = soclinux_uart_tx_fifo_sink_valid;
assign soclinux_uart_tx_fifo_fifo_in_first = soclinux_uart_tx_fifo_sink_first;
assign soclinux_uart_tx_fifo_fifo_in_last = soclinux_uart_tx_fifo_sink_last;
assign soclinux_uart_tx_fifo_fifo_in_payload_data = soclinux_uart_tx_fifo_sink_payload_data;
assign soclinux_uart_tx_fifo_source_valid = soclinux_uart_tx_fifo_readable;
assign soclinux_uart_tx_fifo_source_first = soclinux_uart_tx_fifo_fifo_out_first;
assign soclinux_uart_tx_fifo_source_last = soclinux_uart_tx_fifo_fifo_out_last;
assign soclinux_uart_tx_fifo_source_payload_data = soclinux_uart_tx_fifo_fifo_out_payload_data;
assign soclinux_uart_tx_fifo_re = soclinux_uart_tx_fifo_source_ready;
assign soclinux_uart_tx_fifo_syncfifo_re = (soclinux_uart_tx_fifo_syncfifo_readable & ((~soclinux_uart_tx_fifo_readable) | soclinux_uart_tx_fifo_re));
assign soclinux_uart_tx_fifo_level1 = (soclinux_uart_tx_fifo_level0 + soclinux_uart_tx_fifo_readable);
always @(*) begin
    soclinux_uart_tx_fifo_wrport_adr <= 4'd0;
    if (soclinux_uart_tx_fifo_replace) begin
        soclinux_uart_tx_fifo_wrport_adr <= (soclinux_uart_tx_fifo_produce - 1'd1);
    end else begin
        soclinux_uart_tx_fifo_wrport_adr <= soclinux_uart_tx_fifo_produce;
    end
end
assign soclinux_uart_tx_fifo_wrport_dat_w = soclinux_uart_tx_fifo_syncfifo_din;
assign soclinux_uart_tx_fifo_wrport_we = (soclinux_uart_tx_fifo_syncfifo_we & (soclinux_uart_tx_fifo_syncfifo_writable | soclinux_uart_tx_fifo_replace));
assign soclinux_uart_tx_fifo_do_read = (soclinux_uart_tx_fifo_syncfifo_readable & soclinux_uart_tx_fifo_syncfifo_re);
assign soclinux_uart_tx_fifo_rdport_adr = soclinux_uart_tx_fifo_consume;
assign soclinux_uart_tx_fifo_syncfifo_dout = soclinux_uart_tx_fifo_rdport_dat_r;
assign soclinux_uart_tx_fifo_rdport_re = soclinux_uart_tx_fifo_do_read;
assign soclinux_uart_tx_fifo_syncfifo_writable = (soclinux_uart_tx_fifo_level0 != 5'd16);
assign soclinux_uart_tx_fifo_syncfifo_readable = (soclinux_uart_tx_fifo_level0 != 1'd0);
assign soclinux_uart_rx_fifo_syncfifo_din = {soclinux_uart_rx_fifo_fifo_in_last, soclinux_uart_rx_fifo_fifo_in_first, soclinux_uart_rx_fifo_fifo_in_payload_data};
assign {soclinux_uart_rx_fifo_fifo_out_last, soclinux_uart_rx_fifo_fifo_out_first, soclinux_uart_rx_fifo_fifo_out_payload_data} = soclinux_uart_rx_fifo_syncfifo_dout;
assign soclinux_uart_rx_fifo_sink_ready = soclinux_uart_rx_fifo_syncfifo_writable;
assign soclinux_uart_rx_fifo_syncfifo_we = soclinux_uart_rx_fifo_sink_valid;
assign soclinux_uart_rx_fifo_fifo_in_first = soclinux_uart_rx_fifo_sink_first;
assign soclinux_uart_rx_fifo_fifo_in_last = soclinux_uart_rx_fifo_sink_last;
assign soclinux_uart_rx_fifo_fifo_in_payload_data = soclinux_uart_rx_fifo_sink_payload_data;
assign soclinux_uart_rx_fifo_source_valid = soclinux_uart_rx_fifo_readable;
assign soclinux_uart_rx_fifo_source_first = soclinux_uart_rx_fifo_fifo_out_first;
assign soclinux_uart_rx_fifo_source_last = soclinux_uart_rx_fifo_fifo_out_last;
assign soclinux_uart_rx_fifo_source_payload_data = soclinux_uart_rx_fifo_fifo_out_payload_data;
assign soclinux_uart_rx_fifo_re = soclinux_uart_rx_fifo_source_ready;
assign soclinux_uart_rx_fifo_syncfifo_re = (soclinux_uart_rx_fifo_syncfifo_readable & ((~soclinux_uart_rx_fifo_readable) | soclinux_uart_rx_fifo_re));
assign soclinux_uart_rx_fifo_level1 = (soclinux_uart_rx_fifo_level0 + soclinux_uart_rx_fifo_readable);
always @(*) begin
    soclinux_uart_rx_fifo_wrport_adr <= 4'd0;
    if (soclinux_uart_rx_fifo_replace) begin
        soclinux_uart_rx_fifo_wrport_adr <= (soclinux_uart_rx_fifo_produce - 1'd1);
    end else begin
        soclinux_uart_rx_fifo_wrport_adr <= soclinux_uart_rx_fifo_produce;
    end
end
assign soclinux_uart_rx_fifo_wrport_dat_w = soclinux_uart_rx_fifo_syncfifo_din;
assign soclinux_uart_rx_fifo_wrport_we = (soclinux_uart_rx_fifo_syncfifo_we & (soclinux_uart_rx_fifo_syncfifo_writable | soclinux_uart_rx_fifo_replace));
assign soclinux_uart_rx_fifo_do_read = (soclinux_uart_rx_fifo_syncfifo_readable & soclinux_uart_rx_fifo_syncfifo_re);
assign soclinux_uart_rx_fifo_rdport_adr = soclinux_uart_rx_fifo_consume;
assign soclinux_uart_rx_fifo_syncfifo_dout = soclinux_uart_rx_fifo_rdport_dat_r;
assign soclinux_uart_rx_fifo_rdport_re = soclinux_uart_rx_fifo_do_read;
assign soclinux_uart_rx_fifo_syncfifo_writable = (soclinux_uart_rx_fifo_level0 != 5'd16);
assign soclinux_uart_rx_fifo_syncfifo_readable = (soclinux_uart_rx_fifo_level0 != 1'd0);
assign soclinux_timer_zero_trigger = (soclinux_timer_value == 1'd0);
assign soclinux_timer_zero0 = soclinux_timer_zero_status;
assign soclinux_timer_zero1 = soclinux_timer_zero_pending;
always @(*) begin
    soclinux_timer_zero_clear <= 1'd0;
    if ((soclinux_timer_pending_re & soclinux_timer_pending_r)) begin
        soclinux_timer_zero_clear <= 1'd1;
    end
end
assign soclinux_timer_irq = (soclinux_timer_pending_status & soclinux_timer_enable_storage);
assign soclinux_timer_zero_status = soclinux_timer_zero_trigger;
assign leds_wait = (~leds_done);
always @(*) begin
    leds_leds <= 1'd0;
    if ((leds_mode == 1'd1)) begin
        leds_leds <= leds_storage;
    end else begin
        leds_leds <= leds_chaser;
    end
end
assign {user_led_n0} = (leds_leds ^ 1'd0);
assign leds_done = (leds_count == 1'd0);
assign sdrphy_dfi_p0_address = soclinux_master_p0_address;
assign sdrphy_dfi_p0_bank = soclinux_master_p0_bank;
assign sdrphy_dfi_p0_cas_n = soclinux_master_p0_cas_n;
assign sdrphy_dfi_p0_cs_n = soclinux_master_p0_cs_n;
assign sdrphy_dfi_p0_ras_n = soclinux_master_p0_ras_n;
assign sdrphy_dfi_p0_we_n = soclinux_master_p0_we_n;
assign sdrphy_dfi_p0_cke = soclinux_master_p0_cke;
assign sdrphy_dfi_p0_odt = soclinux_master_p0_odt;
assign sdrphy_dfi_p0_reset_n = soclinux_master_p0_reset_n;
assign sdrphy_dfi_p0_act_n = soclinux_master_p0_act_n;
assign sdrphy_dfi_p0_wrdata = soclinux_master_p0_wrdata;
assign sdrphy_dfi_p0_wrdata_en = soclinux_master_p0_wrdata_en;
assign sdrphy_dfi_p0_wrdata_mask = soclinux_master_p0_wrdata_mask;
assign sdrphy_dfi_p0_rddata_en = soclinux_master_p0_rddata_en;
assign soclinux_master_p0_rddata = sdrphy_dfi_p0_rddata;
assign soclinux_master_p0_rddata_valid = sdrphy_dfi_p0_rddata_valid;
assign soclinux_slave_p0_address = soclinux_dfi_p0_address;
assign soclinux_slave_p0_bank = soclinux_dfi_p0_bank;
assign soclinux_slave_p0_cas_n = soclinux_dfi_p0_cas_n;
assign soclinux_slave_p0_cs_n = soclinux_dfi_p0_cs_n;
assign soclinux_slave_p0_ras_n = soclinux_dfi_p0_ras_n;
assign soclinux_slave_p0_we_n = soclinux_dfi_p0_we_n;
assign soclinux_slave_p0_cke = soclinux_dfi_p0_cke;
assign soclinux_slave_p0_odt = soclinux_dfi_p0_odt;
assign soclinux_slave_p0_reset_n = soclinux_dfi_p0_reset_n;
assign soclinux_slave_p0_act_n = soclinux_dfi_p0_act_n;
assign soclinux_slave_p0_wrdata = soclinux_dfi_p0_wrdata;
assign soclinux_slave_p0_wrdata_en = soclinux_dfi_p0_wrdata_en;
assign soclinux_slave_p0_wrdata_mask = soclinux_dfi_p0_wrdata_mask;
assign soclinux_slave_p0_rddata_en = soclinux_dfi_p0_rddata_en;
assign soclinux_dfi_p0_rddata = soclinux_slave_p0_rddata;
assign soclinux_dfi_p0_rddata_valid = soclinux_slave_p0_rddata_valid;
always @(*) begin
    soclinux_csr_dfi_p0_rddata <= 16'd0;
    soclinux_csr_dfi_p0_rddata_valid <= 1'd0;
    soclinux_ext_dfi_p0_rddata <= 16'd0;
    soclinux_ext_dfi_p0_rddata_valid <= 1'd0;
    soclinux_master_p0_act_n <= 1'd1;
    soclinux_master_p0_address <= 13'd0;
    soclinux_master_p0_bank <= 2'd0;
    soclinux_master_p0_cas_n <= 1'd1;
    soclinux_master_p0_cke <= 1'd0;
    soclinux_master_p0_cs_n <= 1'd1;
    soclinux_master_p0_odt <= 1'd0;
    soclinux_master_p0_ras_n <= 1'd1;
    soclinux_master_p0_rddata_en <= 1'd0;
    soclinux_master_p0_reset_n <= 1'd0;
    soclinux_master_p0_we_n <= 1'd1;
    soclinux_master_p0_wrdata <= 16'd0;
    soclinux_master_p0_wrdata_en <= 1'd0;
    soclinux_master_p0_wrdata_mask <= 2'd0;
    soclinux_slave_p0_rddata <= 16'd0;
    soclinux_slave_p0_rddata_valid <= 1'd0;
    if (soclinux_sel0) begin
        if (soclinux_ext_dfi_sel) begin
            soclinux_master_p0_address <= soclinux_ext_dfi_p0_address;
            soclinux_master_p0_bank <= soclinux_ext_dfi_p0_bank;
            soclinux_master_p0_cas_n <= soclinux_ext_dfi_p0_cas_n;
            soclinux_master_p0_cs_n <= soclinux_ext_dfi_p0_cs_n;
            soclinux_master_p0_ras_n <= soclinux_ext_dfi_p0_ras_n;
            soclinux_master_p0_we_n <= soclinux_ext_dfi_p0_we_n;
            soclinux_master_p0_cke <= soclinux_ext_dfi_p0_cke;
            soclinux_master_p0_odt <= soclinux_ext_dfi_p0_odt;
            soclinux_master_p0_reset_n <= soclinux_ext_dfi_p0_reset_n;
            soclinux_master_p0_act_n <= soclinux_ext_dfi_p0_act_n;
            soclinux_master_p0_wrdata <= soclinux_ext_dfi_p0_wrdata;
            soclinux_master_p0_wrdata_en <= soclinux_ext_dfi_p0_wrdata_en;
            soclinux_master_p0_wrdata_mask <= soclinux_ext_dfi_p0_wrdata_mask;
            soclinux_master_p0_rddata_en <= soclinux_ext_dfi_p0_rddata_en;
            soclinux_ext_dfi_p0_rddata <= soclinux_master_p0_rddata;
            soclinux_ext_dfi_p0_rddata_valid <= soclinux_master_p0_rddata_valid;
        end else begin
            soclinux_master_p0_address <= soclinux_slave_p0_address;
            soclinux_master_p0_bank <= soclinux_slave_p0_bank;
            soclinux_master_p0_cas_n <= soclinux_slave_p0_cas_n;
            soclinux_master_p0_cs_n <= soclinux_slave_p0_cs_n;
            soclinux_master_p0_ras_n <= soclinux_slave_p0_ras_n;
            soclinux_master_p0_we_n <= soclinux_slave_p0_we_n;
            soclinux_master_p0_cke <= soclinux_slave_p0_cke;
            soclinux_master_p0_odt <= soclinux_slave_p0_odt;
            soclinux_master_p0_reset_n <= soclinux_slave_p0_reset_n;
            soclinux_master_p0_act_n <= soclinux_slave_p0_act_n;
            soclinux_master_p0_wrdata <= soclinux_slave_p0_wrdata;
            soclinux_master_p0_wrdata_en <= soclinux_slave_p0_wrdata_en;
            soclinux_master_p0_wrdata_mask <= soclinux_slave_p0_wrdata_mask;
            soclinux_master_p0_rddata_en <= soclinux_slave_p0_rddata_en;
            soclinux_slave_p0_rddata <= soclinux_master_p0_rddata;
            soclinux_slave_p0_rddata_valid <= soclinux_master_p0_rddata_valid;
            if (1'd0) begin
                soclinux_master_p0_cs_n <= {2{soclinux_slave_p0_cs_n}};
            end
        end
    end else begin
        soclinux_master_p0_address <= soclinux_csr_dfi_p0_address;
        soclinux_master_p0_bank <= soclinux_csr_dfi_p0_bank;
        soclinux_master_p0_cas_n <= soclinux_csr_dfi_p0_cas_n;
        soclinux_master_p0_cs_n <= soclinux_csr_dfi_p0_cs_n;
        soclinux_master_p0_ras_n <= soclinux_csr_dfi_p0_ras_n;
        soclinux_master_p0_we_n <= soclinux_csr_dfi_p0_we_n;
        soclinux_master_p0_cke <= soclinux_csr_dfi_p0_cke;
        soclinux_master_p0_odt <= soclinux_csr_dfi_p0_odt;
        soclinux_master_p0_reset_n <= soclinux_csr_dfi_p0_reset_n;
        soclinux_master_p0_act_n <= soclinux_csr_dfi_p0_act_n;
        soclinux_master_p0_wrdata <= soclinux_csr_dfi_p0_wrdata;
        soclinux_master_p0_wrdata_en <= soclinux_csr_dfi_p0_wrdata_en;
        soclinux_master_p0_wrdata_mask <= soclinux_csr_dfi_p0_wrdata_mask;
        soclinux_master_p0_rddata_en <= soclinux_csr_dfi_p0_rddata_en;
        soclinux_csr_dfi_p0_rddata <= soclinux_master_p0_rddata;
        soclinux_csr_dfi_p0_rddata_valid <= soclinux_master_p0_rddata_valid;
    end
end
assign soclinux_csr_dfi_p0_cke = soclinux_cke;
assign soclinux_csr_dfi_p0_odt = soclinux_odt;
assign soclinux_csr_dfi_p0_reset_n = soclinux_reset_n;
always @(*) begin
    soclinux_csr_dfi_p0_cas_n <= 1'd1;
    soclinux_csr_dfi_p0_cs_n <= 1'd1;
    soclinux_csr_dfi_p0_ras_n <= 1'd1;
    soclinux_csr_dfi_p0_we_n <= 1'd1;
    if (soclinux_command_issue_re) begin
        if (soclinux_csrfield_cs_top) begin
            soclinux_csr_dfi_p0_cs_n <= 2'd2;
        end else begin
            if (soclinux_csrfield_cs_bottom) begin
                soclinux_csr_dfi_p0_cs_n <= 1'd1;
            end else begin
                soclinux_csr_dfi_p0_cs_n <= {1{(~soclinux_csrfield_cs)}};
            end
        end
        soclinux_csr_dfi_p0_we_n <= (~soclinux_csrfield_we);
        soclinux_csr_dfi_p0_cas_n <= (~soclinux_csrfield_cas);
        soclinux_csr_dfi_p0_ras_n <= (~soclinux_csrfield_ras);
    end else begin
        soclinux_csr_dfi_p0_cs_n <= {1{1'd1}};
        soclinux_csr_dfi_p0_we_n <= 1'd1;
        soclinux_csr_dfi_p0_cas_n <= 1'd1;
        soclinux_csr_dfi_p0_ras_n <= 1'd1;
    end
end
assign soclinux_csr_dfi_p0_address = soclinux_address_storage;
assign soclinux_csr_dfi_p0_bank = soclinux_baddress_storage;
assign soclinux_csr_dfi_p0_wrdata_en = (soclinux_command_issue_re & soclinux_csrfield_wren);
assign soclinux_csr_dfi_p0_rddata_en = (soclinux_command_issue_re & soclinux_csrfield_rden);
assign soclinux_csr_dfi_p0_wrdata = soclinux_wrdata_storage;
assign soclinux_csr_dfi_p0_wrdata_mask = 1'd0;
assign soclinux_bankmachine0_req_valid = soclinux_interface_bank0_valid;
assign soclinux_interface_bank0_ready = soclinux_bankmachine0_req_ready;
assign soclinux_bankmachine0_req_we = soclinux_interface_bank0_we;
assign soclinux_bankmachine0_req_addr = soclinux_interface_bank0_addr;
assign soclinux_interface_bank0_lock = soclinux_bankmachine0_req_lock;
assign soclinux_interface_bank0_wdata_ready = soclinux_bankmachine0_req_wdata_ready;
assign soclinux_interface_bank0_rdata_valid = soclinux_bankmachine0_req_rdata_valid;
assign soclinux_bankmachine1_req_valid = soclinux_interface_bank1_valid;
assign soclinux_interface_bank1_ready = soclinux_bankmachine1_req_ready;
assign soclinux_bankmachine1_req_we = soclinux_interface_bank1_we;
assign soclinux_bankmachine1_req_addr = soclinux_interface_bank1_addr;
assign soclinux_interface_bank1_lock = soclinux_bankmachine1_req_lock;
assign soclinux_interface_bank1_wdata_ready = soclinux_bankmachine1_req_wdata_ready;
assign soclinux_interface_bank1_rdata_valid = soclinux_bankmachine1_req_rdata_valid;
assign soclinux_bankmachine2_req_valid = soclinux_interface_bank2_valid;
assign soclinux_interface_bank2_ready = soclinux_bankmachine2_req_ready;
assign soclinux_bankmachine2_req_we = soclinux_interface_bank2_we;
assign soclinux_bankmachine2_req_addr = soclinux_interface_bank2_addr;
assign soclinux_interface_bank2_lock = soclinux_bankmachine2_req_lock;
assign soclinux_interface_bank2_wdata_ready = soclinux_bankmachine2_req_wdata_ready;
assign soclinux_interface_bank2_rdata_valid = soclinux_bankmachine2_req_rdata_valid;
assign soclinux_bankmachine3_req_valid = soclinux_interface_bank3_valid;
assign soclinux_interface_bank3_ready = soclinux_bankmachine3_req_ready;
assign soclinux_bankmachine3_req_we = soclinux_interface_bank3_we;
assign soclinux_bankmachine3_req_addr = soclinux_interface_bank3_addr;
assign soclinux_interface_bank3_lock = soclinux_bankmachine3_req_lock;
assign soclinux_interface_bank3_wdata_ready = soclinux_bankmachine3_req_wdata_ready;
assign soclinux_interface_bank3_rdata_valid = soclinux_bankmachine3_req_rdata_valid;
assign soclinux_timer_wait = (~soclinux_timer_done0);
assign soclinux_postponer_req_i = soclinux_timer_done0;
assign soclinux_wants_refresh = soclinux_postponer_req_o;
assign soclinux_timer_done1 = (soclinux_timer_count1 == 1'd0);
assign soclinux_timer_done0 = soclinux_timer_done1;
assign soclinux_timer_count0 = soclinux_timer_count1;
assign soclinux_sequencer_start1 = (soclinux_sequencer_start0 | (soclinux_sequencer_count != 1'd0));
assign soclinux_sequencer_done0 = (soclinux_sequencer_done1 & (soclinux_sequencer_count == 1'd0));
always @(*) begin
    builder_refresher_next_state <= 2'd0;
    soclinux_cmd_last <= 1'd0;
    soclinux_cmd_valid <= 1'd0;
    soclinux_sequencer_start0 <= 1'd0;
    builder_refresher_next_state <= builder_refresher_state;
    case (builder_refresher_state)
        1'd1: begin
            soclinux_cmd_valid <= 1'd1;
            if (soclinux_cmd_ready) begin
                soclinux_sequencer_start0 <= 1'd1;
                builder_refresher_next_state <= 2'd2;
            end
        end
        2'd2: begin
            soclinux_cmd_valid <= 1'd1;
            if (soclinux_sequencer_done0) begin
                soclinux_cmd_valid <= 1'd0;
                soclinux_cmd_last <= 1'd1;
                builder_refresher_next_state <= 1'd0;
            end
        end
        default: begin
            if (1'd1) begin
                if (soclinux_wants_refresh) begin
                    builder_refresher_next_state <= 1'd1;
                end
            end
        end
    endcase
end
assign soclinux_bankmachine0_sink_valid = soclinux_bankmachine0_req_valid;
assign soclinux_bankmachine0_req_ready = soclinux_bankmachine0_sink_ready;
assign soclinux_bankmachine0_sink_payload_we = soclinux_bankmachine0_req_we;
assign soclinux_bankmachine0_sink_payload_addr = soclinux_bankmachine0_req_addr;
assign soclinux_bankmachine0_sink_sink_valid = soclinux_bankmachine0_source_valid;
assign soclinux_bankmachine0_source_ready = soclinux_bankmachine0_sink_sink_ready;
assign soclinux_bankmachine0_sink_sink_first = soclinux_bankmachine0_source_first;
assign soclinux_bankmachine0_sink_sink_last = soclinux_bankmachine0_source_last;
assign soclinux_bankmachine0_sink_sink_payload_we = soclinux_bankmachine0_source_payload_we;
assign soclinux_bankmachine0_sink_sink_payload_addr = soclinux_bankmachine0_source_payload_addr;
assign soclinux_bankmachine0_source_source_ready = (soclinux_bankmachine0_req_wdata_ready | soclinux_bankmachine0_req_rdata_valid);
assign soclinux_bankmachine0_req_lock = (soclinux_bankmachine0_source_valid | soclinux_bankmachine0_source_source_valid);
assign soclinux_bankmachine0_row_hit = (soclinux_bankmachine0_row == soclinux_bankmachine0_source_source_payload_addr[22:10]);
assign soclinux_bankmachine0_cmd_payload_ba = 1'd0;
always @(*) begin
    soclinux_bankmachine0_cmd_payload_a <= 13'd0;
    if (soclinux_bankmachine0_row_col_n_addr_sel) begin
        soclinux_bankmachine0_cmd_payload_a <= soclinux_bankmachine0_source_source_payload_addr[22:10];
    end else begin
        soclinux_bankmachine0_cmd_payload_a <= ((soclinux_bankmachine0_auto_precharge <<< 4'd10) | {soclinux_bankmachine0_source_source_payload_addr[9:0], {0{1'd0}}});
    end
end
assign soclinux_bankmachine0_twtpcon_valid = ((soclinux_bankmachine0_cmd_valid & soclinux_bankmachine0_cmd_ready) & soclinux_bankmachine0_cmd_payload_is_write);
assign soclinux_bankmachine0_trccon_valid = ((soclinux_bankmachine0_cmd_valid & soclinux_bankmachine0_cmd_ready) & soclinux_bankmachine0_row_open);
assign soclinux_bankmachine0_trascon_valid = ((soclinux_bankmachine0_cmd_valid & soclinux_bankmachine0_cmd_ready) & soclinux_bankmachine0_row_open);
always @(*) begin
    soclinux_bankmachine0_auto_precharge <= 1'd0;
    if ((soclinux_bankmachine0_source_valid & soclinux_bankmachine0_source_source_valid)) begin
        if ((soclinux_bankmachine0_source_payload_addr[22:10] != soclinux_bankmachine0_source_source_payload_addr[22:10])) begin
            soclinux_bankmachine0_auto_precharge <= (soclinux_bankmachine0_row_close == 1'd0);
        end
    end
end
assign soclinux_bankmachine0_syncfifo0_din = {soclinux_bankmachine0_fifo_in_last, soclinux_bankmachine0_fifo_in_first, soclinux_bankmachine0_fifo_in_payload_addr, soclinux_bankmachine0_fifo_in_payload_we};
assign {soclinux_bankmachine0_fifo_out_last, soclinux_bankmachine0_fifo_out_first, soclinux_bankmachine0_fifo_out_payload_addr, soclinux_bankmachine0_fifo_out_payload_we} = soclinux_bankmachine0_syncfifo0_dout;
assign soclinux_bankmachine0_sink_ready = soclinux_bankmachine0_syncfifo0_writable;
assign soclinux_bankmachine0_syncfifo0_we = soclinux_bankmachine0_sink_valid;
assign soclinux_bankmachine0_fifo_in_first = soclinux_bankmachine0_sink_first;
assign soclinux_bankmachine0_fifo_in_last = soclinux_bankmachine0_sink_last;
assign soclinux_bankmachine0_fifo_in_payload_we = soclinux_bankmachine0_sink_payload_we;
assign soclinux_bankmachine0_fifo_in_payload_addr = soclinux_bankmachine0_sink_payload_addr;
assign soclinux_bankmachine0_source_valid = soclinux_bankmachine0_syncfifo0_readable;
assign soclinux_bankmachine0_source_first = soclinux_bankmachine0_fifo_out_first;
assign soclinux_bankmachine0_source_last = soclinux_bankmachine0_fifo_out_last;
assign soclinux_bankmachine0_source_payload_we = soclinux_bankmachine0_fifo_out_payload_we;
assign soclinux_bankmachine0_source_payload_addr = soclinux_bankmachine0_fifo_out_payload_addr;
assign soclinux_bankmachine0_syncfifo0_re = soclinux_bankmachine0_source_ready;
always @(*) begin
    soclinux_bankmachine0_wrport_adr <= 3'd0;
    if (soclinux_bankmachine0_replace) begin
        soclinux_bankmachine0_wrport_adr <= (soclinux_bankmachine0_produce - 1'd1);
    end else begin
        soclinux_bankmachine0_wrport_adr <= soclinux_bankmachine0_produce;
    end
end
assign soclinux_bankmachine0_wrport_dat_w = soclinux_bankmachine0_syncfifo0_din;
assign soclinux_bankmachine0_wrport_we = (soclinux_bankmachine0_syncfifo0_we & (soclinux_bankmachine0_syncfifo0_writable | soclinux_bankmachine0_replace));
assign soclinux_bankmachine0_do_read = (soclinux_bankmachine0_syncfifo0_readable & soclinux_bankmachine0_syncfifo0_re);
assign soclinux_bankmachine0_rdport_adr = soclinux_bankmachine0_consume;
assign soclinux_bankmachine0_syncfifo0_dout = soclinux_bankmachine0_rdport_dat_r;
assign soclinux_bankmachine0_syncfifo0_writable = (soclinux_bankmachine0_level != 4'd8);
assign soclinux_bankmachine0_syncfifo0_readable = (soclinux_bankmachine0_level != 1'd0);
assign soclinux_bankmachine0_pipe_valid_sink_ready = ((~soclinux_bankmachine0_pipe_valid_source_valid) | soclinux_bankmachine0_pipe_valid_source_ready);
assign soclinux_bankmachine0_pipe_valid_sink_valid = soclinux_bankmachine0_sink_sink_valid;
assign soclinux_bankmachine0_sink_sink_ready = soclinux_bankmachine0_pipe_valid_sink_ready;
assign soclinux_bankmachine0_pipe_valid_sink_first = soclinux_bankmachine0_sink_sink_first;
assign soclinux_bankmachine0_pipe_valid_sink_last = soclinux_bankmachine0_sink_sink_last;
assign soclinux_bankmachine0_pipe_valid_sink_payload_we = soclinux_bankmachine0_sink_sink_payload_we;
assign soclinux_bankmachine0_pipe_valid_sink_payload_addr = soclinux_bankmachine0_sink_sink_payload_addr;
assign soclinux_bankmachine0_source_source_valid = soclinux_bankmachine0_pipe_valid_source_valid;
assign soclinux_bankmachine0_pipe_valid_source_ready = soclinux_bankmachine0_source_source_ready;
assign soclinux_bankmachine0_source_source_first = soclinux_bankmachine0_pipe_valid_source_first;
assign soclinux_bankmachine0_source_source_last = soclinux_bankmachine0_pipe_valid_source_last;
assign soclinux_bankmachine0_source_source_payload_we = soclinux_bankmachine0_pipe_valid_source_payload_we;
assign soclinux_bankmachine0_source_source_payload_addr = soclinux_bankmachine0_pipe_valid_source_payload_addr;
always @(*) begin
    builder_bankmachine0_next_state <= 3'd0;
    soclinux_bankmachine0_cmd_payload_cas <= 1'd0;
    soclinux_bankmachine0_cmd_payload_is_cmd <= 1'd0;
    soclinux_bankmachine0_cmd_payload_is_read <= 1'd0;
    soclinux_bankmachine0_cmd_payload_is_write <= 1'd0;
    soclinux_bankmachine0_cmd_payload_ras <= 1'd0;
    soclinux_bankmachine0_cmd_payload_we <= 1'd0;
    soclinux_bankmachine0_cmd_valid <= 1'd0;
    soclinux_bankmachine0_refresh_gnt <= 1'd0;
    soclinux_bankmachine0_req_rdata_valid <= 1'd0;
    soclinux_bankmachine0_req_wdata_ready <= 1'd0;
    soclinux_bankmachine0_row_close <= 1'd0;
    soclinux_bankmachine0_row_col_n_addr_sel <= 1'd0;
    soclinux_bankmachine0_row_open <= 1'd0;
    builder_bankmachine0_next_state <= builder_bankmachine0_state;
    case (builder_bankmachine0_state)
        1'd1: begin
            if ((soclinux_bankmachine0_twtpcon_ready & soclinux_bankmachine0_trascon_ready)) begin
                soclinux_bankmachine0_cmd_valid <= 1'd1;
                if (soclinux_bankmachine0_cmd_ready) begin
                    builder_bankmachine0_next_state <= 2'd3;
                end
                soclinux_bankmachine0_cmd_payload_ras <= 1'd1;
                soclinux_bankmachine0_cmd_payload_we <= 1'd1;
                soclinux_bankmachine0_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_bankmachine0_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_bankmachine0_twtpcon_ready & soclinux_bankmachine0_trascon_ready)) begin
                builder_bankmachine0_next_state <= 2'd3;
            end
            soclinux_bankmachine0_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_bankmachine0_trccon_ready) begin
                soclinux_bankmachine0_row_col_n_addr_sel <= 1'd1;
                soclinux_bankmachine0_row_open <= 1'd1;
                soclinux_bankmachine0_cmd_valid <= 1'd1;
                soclinux_bankmachine0_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_bankmachine0_cmd_ready) begin
                    builder_bankmachine0_next_state <= 1'd0;
                end
                soclinux_bankmachine0_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_bankmachine0_twtpcon_ready) begin
                soclinux_bankmachine0_refresh_gnt <= 1'd1;
            end
            soclinux_bankmachine0_row_close <= 1'd1;
            soclinux_bankmachine0_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_bankmachine0_refresh_req)) begin
                builder_bankmachine0_next_state <= 1'd0;
            end
        end
        default: begin
            if (soclinux_bankmachine0_refresh_req) begin
                builder_bankmachine0_next_state <= 3'd4;
            end else begin
                if (soclinux_bankmachine0_source_source_valid) begin
                    if (soclinux_bankmachine0_row_opened) begin
                        if (soclinux_bankmachine0_row_hit) begin
                            soclinux_bankmachine0_cmd_valid <= 1'd1;
                            if (soclinux_bankmachine0_source_source_payload_we) begin
                                soclinux_bankmachine0_req_wdata_ready <= soclinux_bankmachine0_cmd_ready;
                                soclinux_bankmachine0_cmd_payload_is_write <= 1'd1;
                                soclinux_bankmachine0_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_bankmachine0_req_rdata_valid <= soclinux_bankmachine0_cmd_ready;
                                soclinux_bankmachine0_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_bankmachine0_cmd_payload_cas <= 1'd1;
                            if ((soclinux_bankmachine0_cmd_ready & soclinux_bankmachine0_auto_precharge)) begin
                                builder_bankmachine0_next_state <= 2'd2;
                            end
                        end else begin
                            builder_bankmachine0_next_state <= 1'd1;
                        end
                    end else begin
                        builder_bankmachine0_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_bankmachine1_sink_valid = soclinux_bankmachine1_req_valid;
assign soclinux_bankmachine1_req_ready = soclinux_bankmachine1_sink_ready;
assign soclinux_bankmachine1_sink_payload_we = soclinux_bankmachine1_req_we;
assign soclinux_bankmachine1_sink_payload_addr = soclinux_bankmachine1_req_addr;
assign soclinux_bankmachine1_sink_sink_valid = soclinux_bankmachine1_source_valid;
assign soclinux_bankmachine1_source_ready = soclinux_bankmachine1_sink_sink_ready;
assign soclinux_bankmachine1_sink_sink_first = soclinux_bankmachine1_source_first;
assign soclinux_bankmachine1_sink_sink_last = soclinux_bankmachine1_source_last;
assign soclinux_bankmachine1_sink_sink_payload_we = soclinux_bankmachine1_source_payload_we;
assign soclinux_bankmachine1_sink_sink_payload_addr = soclinux_bankmachine1_source_payload_addr;
assign soclinux_bankmachine1_source_source_ready = (soclinux_bankmachine1_req_wdata_ready | soclinux_bankmachine1_req_rdata_valid);
assign soclinux_bankmachine1_req_lock = (soclinux_bankmachine1_source_valid | soclinux_bankmachine1_source_source_valid);
assign soclinux_bankmachine1_row_hit = (soclinux_bankmachine1_row == soclinux_bankmachine1_source_source_payload_addr[22:10]);
assign soclinux_bankmachine1_cmd_payload_ba = 1'd1;
always @(*) begin
    soclinux_bankmachine1_cmd_payload_a <= 13'd0;
    if (soclinux_bankmachine1_row_col_n_addr_sel) begin
        soclinux_bankmachine1_cmd_payload_a <= soclinux_bankmachine1_source_source_payload_addr[22:10];
    end else begin
        soclinux_bankmachine1_cmd_payload_a <= ((soclinux_bankmachine1_auto_precharge <<< 4'd10) | {soclinux_bankmachine1_source_source_payload_addr[9:0], {0{1'd0}}});
    end
end
assign soclinux_bankmachine1_twtpcon_valid = ((soclinux_bankmachine1_cmd_valid & soclinux_bankmachine1_cmd_ready) & soclinux_bankmachine1_cmd_payload_is_write);
assign soclinux_bankmachine1_trccon_valid = ((soclinux_bankmachine1_cmd_valid & soclinux_bankmachine1_cmd_ready) & soclinux_bankmachine1_row_open);
assign soclinux_bankmachine1_trascon_valid = ((soclinux_bankmachine1_cmd_valid & soclinux_bankmachine1_cmd_ready) & soclinux_bankmachine1_row_open);
always @(*) begin
    soclinux_bankmachine1_auto_precharge <= 1'd0;
    if ((soclinux_bankmachine1_source_valid & soclinux_bankmachine1_source_source_valid)) begin
        if ((soclinux_bankmachine1_source_payload_addr[22:10] != soclinux_bankmachine1_source_source_payload_addr[22:10])) begin
            soclinux_bankmachine1_auto_precharge <= (soclinux_bankmachine1_row_close == 1'd0);
        end
    end
end
assign soclinux_bankmachine1_syncfifo1_din = {soclinux_bankmachine1_fifo_in_last, soclinux_bankmachine1_fifo_in_first, soclinux_bankmachine1_fifo_in_payload_addr, soclinux_bankmachine1_fifo_in_payload_we};
assign {soclinux_bankmachine1_fifo_out_last, soclinux_bankmachine1_fifo_out_first, soclinux_bankmachine1_fifo_out_payload_addr, soclinux_bankmachine1_fifo_out_payload_we} = soclinux_bankmachine1_syncfifo1_dout;
assign soclinux_bankmachine1_sink_ready = soclinux_bankmachine1_syncfifo1_writable;
assign soclinux_bankmachine1_syncfifo1_we = soclinux_bankmachine1_sink_valid;
assign soclinux_bankmachine1_fifo_in_first = soclinux_bankmachine1_sink_first;
assign soclinux_bankmachine1_fifo_in_last = soclinux_bankmachine1_sink_last;
assign soclinux_bankmachine1_fifo_in_payload_we = soclinux_bankmachine1_sink_payload_we;
assign soclinux_bankmachine1_fifo_in_payload_addr = soclinux_bankmachine1_sink_payload_addr;
assign soclinux_bankmachine1_source_valid = soclinux_bankmachine1_syncfifo1_readable;
assign soclinux_bankmachine1_source_first = soclinux_bankmachine1_fifo_out_first;
assign soclinux_bankmachine1_source_last = soclinux_bankmachine1_fifo_out_last;
assign soclinux_bankmachine1_source_payload_we = soclinux_bankmachine1_fifo_out_payload_we;
assign soclinux_bankmachine1_source_payload_addr = soclinux_bankmachine1_fifo_out_payload_addr;
assign soclinux_bankmachine1_syncfifo1_re = soclinux_bankmachine1_source_ready;
always @(*) begin
    soclinux_bankmachine1_wrport_adr <= 3'd0;
    if (soclinux_bankmachine1_replace) begin
        soclinux_bankmachine1_wrport_adr <= (soclinux_bankmachine1_produce - 1'd1);
    end else begin
        soclinux_bankmachine1_wrport_adr <= soclinux_bankmachine1_produce;
    end
end
assign soclinux_bankmachine1_wrport_dat_w = soclinux_bankmachine1_syncfifo1_din;
assign soclinux_bankmachine1_wrport_we = (soclinux_bankmachine1_syncfifo1_we & (soclinux_bankmachine1_syncfifo1_writable | soclinux_bankmachine1_replace));
assign soclinux_bankmachine1_do_read = (soclinux_bankmachine1_syncfifo1_readable & soclinux_bankmachine1_syncfifo1_re);
assign soclinux_bankmachine1_rdport_adr = soclinux_bankmachine1_consume;
assign soclinux_bankmachine1_syncfifo1_dout = soclinux_bankmachine1_rdport_dat_r;
assign soclinux_bankmachine1_syncfifo1_writable = (soclinux_bankmachine1_level != 4'd8);
assign soclinux_bankmachine1_syncfifo1_readable = (soclinux_bankmachine1_level != 1'd0);
assign soclinux_bankmachine1_pipe_valid_sink_ready = ((~soclinux_bankmachine1_pipe_valid_source_valid) | soclinux_bankmachine1_pipe_valid_source_ready);
assign soclinux_bankmachine1_pipe_valid_sink_valid = soclinux_bankmachine1_sink_sink_valid;
assign soclinux_bankmachine1_sink_sink_ready = soclinux_bankmachine1_pipe_valid_sink_ready;
assign soclinux_bankmachine1_pipe_valid_sink_first = soclinux_bankmachine1_sink_sink_first;
assign soclinux_bankmachine1_pipe_valid_sink_last = soclinux_bankmachine1_sink_sink_last;
assign soclinux_bankmachine1_pipe_valid_sink_payload_we = soclinux_bankmachine1_sink_sink_payload_we;
assign soclinux_bankmachine1_pipe_valid_sink_payload_addr = soclinux_bankmachine1_sink_sink_payload_addr;
assign soclinux_bankmachine1_source_source_valid = soclinux_bankmachine1_pipe_valid_source_valid;
assign soclinux_bankmachine1_pipe_valid_source_ready = soclinux_bankmachine1_source_source_ready;
assign soclinux_bankmachine1_source_source_first = soclinux_bankmachine1_pipe_valid_source_first;
assign soclinux_bankmachine1_source_source_last = soclinux_bankmachine1_pipe_valid_source_last;
assign soclinux_bankmachine1_source_source_payload_we = soclinux_bankmachine1_pipe_valid_source_payload_we;
assign soclinux_bankmachine1_source_source_payload_addr = soclinux_bankmachine1_pipe_valid_source_payload_addr;
always @(*) begin
    builder_bankmachine1_next_state <= 3'd0;
    soclinux_bankmachine1_cmd_payload_cas <= 1'd0;
    soclinux_bankmachine1_cmd_payload_is_cmd <= 1'd0;
    soclinux_bankmachine1_cmd_payload_is_read <= 1'd0;
    soclinux_bankmachine1_cmd_payload_is_write <= 1'd0;
    soclinux_bankmachine1_cmd_payload_ras <= 1'd0;
    soclinux_bankmachine1_cmd_payload_we <= 1'd0;
    soclinux_bankmachine1_cmd_valid <= 1'd0;
    soclinux_bankmachine1_refresh_gnt <= 1'd0;
    soclinux_bankmachine1_req_rdata_valid <= 1'd0;
    soclinux_bankmachine1_req_wdata_ready <= 1'd0;
    soclinux_bankmachine1_row_close <= 1'd0;
    soclinux_bankmachine1_row_col_n_addr_sel <= 1'd0;
    soclinux_bankmachine1_row_open <= 1'd0;
    builder_bankmachine1_next_state <= builder_bankmachine1_state;
    case (builder_bankmachine1_state)
        1'd1: begin
            if ((soclinux_bankmachine1_twtpcon_ready & soclinux_bankmachine1_trascon_ready)) begin
                soclinux_bankmachine1_cmd_valid <= 1'd1;
                if (soclinux_bankmachine1_cmd_ready) begin
                    builder_bankmachine1_next_state <= 2'd3;
                end
                soclinux_bankmachine1_cmd_payload_ras <= 1'd1;
                soclinux_bankmachine1_cmd_payload_we <= 1'd1;
                soclinux_bankmachine1_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_bankmachine1_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_bankmachine1_twtpcon_ready & soclinux_bankmachine1_trascon_ready)) begin
                builder_bankmachine1_next_state <= 2'd3;
            end
            soclinux_bankmachine1_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_bankmachine1_trccon_ready) begin
                soclinux_bankmachine1_row_col_n_addr_sel <= 1'd1;
                soclinux_bankmachine1_row_open <= 1'd1;
                soclinux_bankmachine1_cmd_valid <= 1'd1;
                soclinux_bankmachine1_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_bankmachine1_cmd_ready) begin
                    builder_bankmachine1_next_state <= 1'd0;
                end
                soclinux_bankmachine1_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_bankmachine1_twtpcon_ready) begin
                soclinux_bankmachine1_refresh_gnt <= 1'd1;
            end
            soclinux_bankmachine1_row_close <= 1'd1;
            soclinux_bankmachine1_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_bankmachine1_refresh_req)) begin
                builder_bankmachine1_next_state <= 1'd0;
            end
        end
        default: begin
            if (soclinux_bankmachine1_refresh_req) begin
                builder_bankmachine1_next_state <= 3'd4;
            end else begin
                if (soclinux_bankmachine1_source_source_valid) begin
                    if (soclinux_bankmachine1_row_opened) begin
                        if (soclinux_bankmachine1_row_hit) begin
                            soclinux_bankmachine1_cmd_valid <= 1'd1;
                            if (soclinux_bankmachine1_source_source_payload_we) begin
                                soclinux_bankmachine1_req_wdata_ready <= soclinux_bankmachine1_cmd_ready;
                                soclinux_bankmachine1_cmd_payload_is_write <= 1'd1;
                                soclinux_bankmachine1_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_bankmachine1_req_rdata_valid <= soclinux_bankmachine1_cmd_ready;
                                soclinux_bankmachine1_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_bankmachine1_cmd_payload_cas <= 1'd1;
                            if ((soclinux_bankmachine1_cmd_ready & soclinux_bankmachine1_auto_precharge)) begin
                                builder_bankmachine1_next_state <= 2'd2;
                            end
                        end else begin
                            builder_bankmachine1_next_state <= 1'd1;
                        end
                    end else begin
                        builder_bankmachine1_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_bankmachine2_sink_valid = soclinux_bankmachine2_req_valid;
assign soclinux_bankmachine2_req_ready = soclinux_bankmachine2_sink_ready;
assign soclinux_bankmachine2_sink_payload_we = soclinux_bankmachine2_req_we;
assign soclinux_bankmachine2_sink_payload_addr = soclinux_bankmachine2_req_addr;
assign soclinux_bankmachine2_sink_sink_valid = soclinux_bankmachine2_source_valid;
assign soclinux_bankmachine2_source_ready = soclinux_bankmachine2_sink_sink_ready;
assign soclinux_bankmachine2_sink_sink_first = soclinux_bankmachine2_source_first;
assign soclinux_bankmachine2_sink_sink_last = soclinux_bankmachine2_source_last;
assign soclinux_bankmachine2_sink_sink_payload_we = soclinux_bankmachine2_source_payload_we;
assign soclinux_bankmachine2_sink_sink_payload_addr = soclinux_bankmachine2_source_payload_addr;
assign soclinux_bankmachine2_source_source_ready = (soclinux_bankmachine2_req_wdata_ready | soclinux_bankmachine2_req_rdata_valid);
assign soclinux_bankmachine2_req_lock = (soclinux_bankmachine2_source_valid | soclinux_bankmachine2_source_source_valid);
assign soclinux_bankmachine2_row_hit = (soclinux_bankmachine2_row == soclinux_bankmachine2_source_source_payload_addr[22:10]);
assign soclinux_bankmachine2_cmd_payload_ba = 2'd2;
always @(*) begin
    soclinux_bankmachine2_cmd_payload_a <= 13'd0;
    if (soclinux_bankmachine2_row_col_n_addr_sel) begin
        soclinux_bankmachine2_cmd_payload_a <= soclinux_bankmachine2_source_source_payload_addr[22:10];
    end else begin
        soclinux_bankmachine2_cmd_payload_a <= ((soclinux_bankmachine2_auto_precharge <<< 4'd10) | {soclinux_bankmachine2_source_source_payload_addr[9:0], {0{1'd0}}});
    end
end
assign soclinux_bankmachine2_twtpcon_valid = ((soclinux_bankmachine2_cmd_valid & soclinux_bankmachine2_cmd_ready) & soclinux_bankmachine2_cmd_payload_is_write);
assign soclinux_bankmachine2_trccon_valid = ((soclinux_bankmachine2_cmd_valid & soclinux_bankmachine2_cmd_ready) & soclinux_bankmachine2_row_open);
assign soclinux_bankmachine2_trascon_valid = ((soclinux_bankmachine2_cmd_valid & soclinux_bankmachine2_cmd_ready) & soclinux_bankmachine2_row_open);
always @(*) begin
    soclinux_bankmachine2_auto_precharge <= 1'd0;
    if ((soclinux_bankmachine2_source_valid & soclinux_bankmachine2_source_source_valid)) begin
        if ((soclinux_bankmachine2_source_payload_addr[22:10] != soclinux_bankmachine2_source_source_payload_addr[22:10])) begin
            soclinux_bankmachine2_auto_precharge <= (soclinux_bankmachine2_row_close == 1'd0);
        end
    end
end
assign soclinux_bankmachine2_syncfifo2_din = {soclinux_bankmachine2_fifo_in_last, soclinux_bankmachine2_fifo_in_first, soclinux_bankmachine2_fifo_in_payload_addr, soclinux_bankmachine2_fifo_in_payload_we};
assign {soclinux_bankmachine2_fifo_out_last, soclinux_bankmachine2_fifo_out_first, soclinux_bankmachine2_fifo_out_payload_addr, soclinux_bankmachine2_fifo_out_payload_we} = soclinux_bankmachine2_syncfifo2_dout;
assign soclinux_bankmachine2_sink_ready = soclinux_bankmachine2_syncfifo2_writable;
assign soclinux_bankmachine2_syncfifo2_we = soclinux_bankmachine2_sink_valid;
assign soclinux_bankmachine2_fifo_in_first = soclinux_bankmachine2_sink_first;
assign soclinux_bankmachine2_fifo_in_last = soclinux_bankmachine2_sink_last;
assign soclinux_bankmachine2_fifo_in_payload_we = soclinux_bankmachine2_sink_payload_we;
assign soclinux_bankmachine2_fifo_in_payload_addr = soclinux_bankmachine2_sink_payload_addr;
assign soclinux_bankmachine2_source_valid = soclinux_bankmachine2_syncfifo2_readable;
assign soclinux_bankmachine2_source_first = soclinux_bankmachine2_fifo_out_first;
assign soclinux_bankmachine2_source_last = soclinux_bankmachine2_fifo_out_last;
assign soclinux_bankmachine2_source_payload_we = soclinux_bankmachine2_fifo_out_payload_we;
assign soclinux_bankmachine2_source_payload_addr = soclinux_bankmachine2_fifo_out_payload_addr;
assign soclinux_bankmachine2_syncfifo2_re = soclinux_bankmachine2_source_ready;
always @(*) begin
    soclinux_bankmachine2_wrport_adr <= 3'd0;
    if (soclinux_bankmachine2_replace) begin
        soclinux_bankmachine2_wrport_adr <= (soclinux_bankmachine2_produce - 1'd1);
    end else begin
        soclinux_bankmachine2_wrport_adr <= soclinux_bankmachine2_produce;
    end
end
assign soclinux_bankmachine2_wrport_dat_w = soclinux_bankmachine2_syncfifo2_din;
assign soclinux_bankmachine2_wrport_we = (soclinux_bankmachine2_syncfifo2_we & (soclinux_bankmachine2_syncfifo2_writable | soclinux_bankmachine2_replace));
assign soclinux_bankmachine2_do_read = (soclinux_bankmachine2_syncfifo2_readable & soclinux_bankmachine2_syncfifo2_re);
assign soclinux_bankmachine2_rdport_adr = soclinux_bankmachine2_consume;
assign soclinux_bankmachine2_syncfifo2_dout = soclinux_bankmachine2_rdport_dat_r;
assign soclinux_bankmachine2_syncfifo2_writable = (soclinux_bankmachine2_level != 4'd8);
assign soclinux_bankmachine2_syncfifo2_readable = (soclinux_bankmachine2_level != 1'd0);
assign soclinux_bankmachine2_pipe_valid_sink_ready = ((~soclinux_bankmachine2_pipe_valid_source_valid) | soclinux_bankmachine2_pipe_valid_source_ready);
assign soclinux_bankmachine2_pipe_valid_sink_valid = soclinux_bankmachine2_sink_sink_valid;
assign soclinux_bankmachine2_sink_sink_ready = soclinux_bankmachine2_pipe_valid_sink_ready;
assign soclinux_bankmachine2_pipe_valid_sink_first = soclinux_bankmachine2_sink_sink_first;
assign soclinux_bankmachine2_pipe_valid_sink_last = soclinux_bankmachine2_sink_sink_last;
assign soclinux_bankmachine2_pipe_valid_sink_payload_we = soclinux_bankmachine2_sink_sink_payload_we;
assign soclinux_bankmachine2_pipe_valid_sink_payload_addr = soclinux_bankmachine2_sink_sink_payload_addr;
assign soclinux_bankmachine2_source_source_valid = soclinux_bankmachine2_pipe_valid_source_valid;
assign soclinux_bankmachine2_pipe_valid_source_ready = soclinux_bankmachine2_source_source_ready;
assign soclinux_bankmachine2_source_source_first = soclinux_bankmachine2_pipe_valid_source_first;
assign soclinux_bankmachine2_source_source_last = soclinux_bankmachine2_pipe_valid_source_last;
assign soclinux_bankmachine2_source_source_payload_we = soclinux_bankmachine2_pipe_valid_source_payload_we;
assign soclinux_bankmachine2_source_source_payload_addr = soclinux_bankmachine2_pipe_valid_source_payload_addr;
always @(*) begin
    builder_bankmachine2_next_state <= 3'd0;
    soclinux_bankmachine2_cmd_payload_cas <= 1'd0;
    soclinux_bankmachine2_cmd_payload_is_cmd <= 1'd0;
    soclinux_bankmachine2_cmd_payload_is_read <= 1'd0;
    soclinux_bankmachine2_cmd_payload_is_write <= 1'd0;
    soclinux_bankmachine2_cmd_payload_ras <= 1'd0;
    soclinux_bankmachine2_cmd_payload_we <= 1'd0;
    soclinux_bankmachine2_cmd_valid <= 1'd0;
    soclinux_bankmachine2_refresh_gnt <= 1'd0;
    soclinux_bankmachine2_req_rdata_valid <= 1'd0;
    soclinux_bankmachine2_req_wdata_ready <= 1'd0;
    soclinux_bankmachine2_row_close <= 1'd0;
    soclinux_bankmachine2_row_col_n_addr_sel <= 1'd0;
    soclinux_bankmachine2_row_open <= 1'd0;
    builder_bankmachine2_next_state <= builder_bankmachine2_state;
    case (builder_bankmachine2_state)
        1'd1: begin
            if ((soclinux_bankmachine2_twtpcon_ready & soclinux_bankmachine2_trascon_ready)) begin
                soclinux_bankmachine2_cmd_valid <= 1'd1;
                if (soclinux_bankmachine2_cmd_ready) begin
                    builder_bankmachine2_next_state <= 2'd3;
                end
                soclinux_bankmachine2_cmd_payload_ras <= 1'd1;
                soclinux_bankmachine2_cmd_payload_we <= 1'd1;
                soclinux_bankmachine2_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_bankmachine2_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_bankmachine2_twtpcon_ready & soclinux_bankmachine2_trascon_ready)) begin
                builder_bankmachine2_next_state <= 2'd3;
            end
            soclinux_bankmachine2_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_bankmachine2_trccon_ready) begin
                soclinux_bankmachine2_row_col_n_addr_sel <= 1'd1;
                soclinux_bankmachine2_row_open <= 1'd1;
                soclinux_bankmachine2_cmd_valid <= 1'd1;
                soclinux_bankmachine2_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_bankmachine2_cmd_ready) begin
                    builder_bankmachine2_next_state <= 1'd0;
                end
                soclinux_bankmachine2_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_bankmachine2_twtpcon_ready) begin
                soclinux_bankmachine2_refresh_gnt <= 1'd1;
            end
            soclinux_bankmachine2_row_close <= 1'd1;
            soclinux_bankmachine2_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_bankmachine2_refresh_req)) begin
                builder_bankmachine2_next_state <= 1'd0;
            end
        end
        default: begin
            if (soclinux_bankmachine2_refresh_req) begin
                builder_bankmachine2_next_state <= 3'd4;
            end else begin
                if (soclinux_bankmachine2_source_source_valid) begin
                    if (soclinux_bankmachine2_row_opened) begin
                        if (soclinux_bankmachine2_row_hit) begin
                            soclinux_bankmachine2_cmd_valid <= 1'd1;
                            if (soclinux_bankmachine2_source_source_payload_we) begin
                                soclinux_bankmachine2_req_wdata_ready <= soclinux_bankmachine2_cmd_ready;
                                soclinux_bankmachine2_cmd_payload_is_write <= 1'd1;
                                soclinux_bankmachine2_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_bankmachine2_req_rdata_valid <= soclinux_bankmachine2_cmd_ready;
                                soclinux_bankmachine2_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_bankmachine2_cmd_payload_cas <= 1'd1;
                            if ((soclinux_bankmachine2_cmd_ready & soclinux_bankmachine2_auto_precharge)) begin
                                builder_bankmachine2_next_state <= 2'd2;
                            end
                        end else begin
                            builder_bankmachine2_next_state <= 1'd1;
                        end
                    end else begin
                        builder_bankmachine2_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_bankmachine3_sink_valid = soclinux_bankmachine3_req_valid;
assign soclinux_bankmachine3_req_ready = soclinux_bankmachine3_sink_ready;
assign soclinux_bankmachine3_sink_payload_we = soclinux_bankmachine3_req_we;
assign soclinux_bankmachine3_sink_payload_addr = soclinux_bankmachine3_req_addr;
assign soclinux_bankmachine3_sink_sink_valid = soclinux_bankmachine3_source_valid;
assign soclinux_bankmachine3_source_ready = soclinux_bankmachine3_sink_sink_ready;
assign soclinux_bankmachine3_sink_sink_first = soclinux_bankmachine3_source_first;
assign soclinux_bankmachine3_sink_sink_last = soclinux_bankmachine3_source_last;
assign soclinux_bankmachine3_sink_sink_payload_we = soclinux_bankmachine3_source_payload_we;
assign soclinux_bankmachine3_sink_sink_payload_addr = soclinux_bankmachine3_source_payload_addr;
assign soclinux_bankmachine3_source_source_ready = (soclinux_bankmachine3_req_wdata_ready | soclinux_bankmachine3_req_rdata_valid);
assign soclinux_bankmachine3_req_lock = (soclinux_bankmachine3_source_valid | soclinux_bankmachine3_source_source_valid);
assign soclinux_bankmachine3_row_hit = (soclinux_bankmachine3_row == soclinux_bankmachine3_source_source_payload_addr[22:10]);
assign soclinux_bankmachine3_cmd_payload_ba = 2'd3;
always @(*) begin
    soclinux_bankmachine3_cmd_payload_a <= 13'd0;
    if (soclinux_bankmachine3_row_col_n_addr_sel) begin
        soclinux_bankmachine3_cmd_payload_a <= soclinux_bankmachine3_source_source_payload_addr[22:10];
    end else begin
        soclinux_bankmachine3_cmd_payload_a <= ((soclinux_bankmachine3_auto_precharge <<< 4'd10) | {soclinux_bankmachine3_source_source_payload_addr[9:0], {0{1'd0}}});
    end
end
assign soclinux_bankmachine3_twtpcon_valid = ((soclinux_bankmachine3_cmd_valid & soclinux_bankmachine3_cmd_ready) & soclinux_bankmachine3_cmd_payload_is_write);
assign soclinux_bankmachine3_trccon_valid = ((soclinux_bankmachine3_cmd_valid & soclinux_bankmachine3_cmd_ready) & soclinux_bankmachine3_row_open);
assign soclinux_bankmachine3_trascon_valid = ((soclinux_bankmachine3_cmd_valid & soclinux_bankmachine3_cmd_ready) & soclinux_bankmachine3_row_open);
always @(*) begin
    soclinux_bankmachine3_auto_precharge <= 1'd0;
    if ((soclinux_bankmachine3_source_valid & soclinux_bankmachine3_source_source_valid)) begin
        if ((soclinux_bankmachine3_source_payload_addr[22:10] != soclinux_bankmachine3_source_source_payload_addr[22:10])) begin
            soclinux_bankmachine3_auto_precharge <= (soclinux_bankmachine3_row_close == 1'd0);
        end
    end
end
assign soclinux_bankmachine3_syncfifo3_din = {soclinux_bankmachine3_fifo_in_last, soclinux_bankmachine3_fifo_in_first, soclinux_bankmachine3_fifo_in_payload_addr, soclinux_bankmachine3_fifo_in_payload_we};
assign {soclinux_bankmachine3_fifo_out_last, soclinux_bankmachine3_fifo_out_first, soclinux_bankmachine3_fifo_out_payload_addr, soclinux_bankmachine3_fifo_out_payload_we} = soclinux_bankmachine3_syncfifo3_dout;
assign soclinux_bankmachine3_sink_ready = soclinux_bankmachine3_syncfifo3_writable;
assign soclinux_bankmachine3_syncfifo3_we = soclinux_bankmachine3_sink_valid;
assign soclinux_bankmachine3_fifo_in_first = soclinux_bankmachine3_sink_first;
assign soclinux_bankmachine3_fifo_in_last = soclinux_bankmachine3_sink_last;
assign soclinux_bankmachine3_fifo_in_payload_we = soclinux_bankmachine3_sink_payload_we;
assign soclinux_bankmachine3_fifo_in_payload_addr = soclinux_bankmachine3_sink_payload_addr;
assign soclinux_bankmachine3_source_valid = soclinux_bankmachine3_syncfifo3_readable;
assign soclinux_bankmachine3_source_first = soclinux_bankmachine3_fifo_out_first;
assign soclinux_bankmachine3_source_last = soclinux_bankmachine3_fifo_out_last;
assign soclinux_bankmachine3_source_payload_we = soclinux_bankmachine3_fifo_out_payload_we;
assign soclinux_bankmachine3_source_payload_addr = soclinux_bankmachine3_fifo_out_payload_addr;
assign soclinux_bankmachine3_syncfifo3_re = soclinux_bankmachine3_source_ready;
always @(*) begin
    soclinux_bankmachine3_wrport_adr <= 3'd0;
    if (soclinux_bankmachine3_replace) begin
        soclinux_bankmachine3_wrport_adr <= (soclinux_bankmachine3_produce - 1'd1);
    end else begin
        soclinux_bankmachine3_wrport_adr <= soclinux_bankmachine3_produce;
    end
end
assign soclinux_bankmachine3_wrport_dat_w = soclinux_bankmachine3_syncfifo3_din;
assign soclinux_bankmachine3_wrport_we = (soclinux_bankmachine3_syncfifo3_we & (soclinux_bankmachine3_syncfifo3_writable | soclinux_bankmachine3_replace));
assign soclinux_bankmachine3_do_read = (soclinux_bankmachine3_syncfifo3_readable & soclinux_bankmachine3_syncfifo3_re);
assign soclinux_bankmachine3_rdport_adr = soclinux_bankmachine3_consume;
assign soclinux_bankmachine3_syncfifo3_dout = soclinux_bankmachine3_rdport_dat_r;
assign soclinux_bankmachine3_syncfifo3_writable = (soclinux_bankmachine3_level != 4'd8);
assign soclinux_bankmachine3_syncfifo3_readable = (soclinux_bankmachine3_level != 1'd0);
assign soclinux_bankmachine3_pipe_valid_sink_ready = ((~soclinux_bankmachine3_pipe_valid_source_valid) | soclinux_bankmachine3_pipe_valid_source_ready);
assign soclinux_bankmachine3_pipe_valid_sink_valid = soclinux_bankmachine3_sink_sink_valid;
assign soclinux_bankmachine3_sink_sink_ready = soclinux_bankmachine3_pipe_valid_sink_ready;
assign soclinux_bankmachine3_pipe_valid_sink_first = soclinux_bankmachine3_sink_sink_first;
assign soclinux_bankmachine3_pipe_valid_sink_last = soclinux_bankmachine3_sink_sink_last;
assign soclinux_bankmachine3_pipe_valid_sink_payload_we = soclinux_bankmachine3_sink_sink_payload_we;
assign soclinux_bankmachine3_pipe_valid_sink_payload_addr = soclinux_bankmachine3_sink_sink_payload_addr;
assign soclinux_bankmachine3_source_source_valid = soclinux_bankmachine3_pipe_valid_source_valid;
assign soclinux_bankmachine3_pipe_valid_source_ready = soclinux_bankmachine3_source_source_ready;
assign soclinux_bankmachine3_source_source_first = soclinux_bankmachine3_pipe_valid_source_first;
assign soclinux_bankmachine3_source_source_last = soclinux_bankmachine3_pipe_valid_source_last;
assign soclinux_bankmachine3_source_source_payload_we = soclinux_bankmachine3_pipe_valid_source_payload_we;
assign soclinux_bankmachine3_source_source_payload_addr = soclinux_bankmachine3_pipe_valid_source_payload_addr;
always @(*) begin
    builder_bankmachine3_next_state <= 3'd0;
    soclinux_bankmachine3_cmd_payload_cas <= 1'd0;
    soclinux_bankmachine3_cmd_payload_is_cmd <= 1'd0;
    soclinux_bankmachine3_cmd_payload_is_read <= 1'd0;
    soclinux_bankmachine3_cmd_payload_is_write <= 1'd0;
    soclinux_bankmachine3_cmd_payload_ras <= 1'd0;
    soclinux_bankmachine3_cmd_payload_we <= 1'd0;
    soclinux_bankmachine3_cmd_valid <= 1'd0;
    soclinux_bankmachine3_refresh_gnt <= 1'd0;
    soclinux_bankmachine3_req_rdata_valid <= 1'd0;
    soclinux_bankmachine3_req_wdata_ready <= 1'd0;
    soclinux_bankmachine3_row_close <= 1'd0;
    soclinux_bankmachine3_row_col_n_addr_sel <= 1'd0;
    soclinux_bankmachine3_row_open <= 1'd0;
    builder_bankmachine3_next_state <= builder_bankmachine3_state;
    case (builder_bankmachine3_state)
        1'd1: begin
            if ((soclinux_bankmachine3_twtpcon_ready & soclinux_bankmachine3_trascon_ready)) begin
                soclinux_bankmachine3_cmd_valid <= 1'd1;
                if (soclinux_bankmachine3_cmd_ready) begin
                    builder_bankmachine3_next_state <= 2'd3;
                end
                soclinux_bankmachine3_cmd_payload_ras <= 1'd1;
                soclinux_bankmachine3_cmd_payload_we <= 1'd1;
                soclinux_bankmachine3_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_bankmachine3_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_bankmachine3_twtpcon_ready & soclinux_bankmachine3_trascon_ready)) begin
                builder_bankmachine3_next_state <= 2'd3;
            end
            soclinux_bankmachine3_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_bankmachine3_trccon_ready) begin
                soclinux_bankmachine3_row_col_n_addr_sel <= 1'd1;
                soclinux_bankmachine3_row_open <= 1'd1;
                soclinux_bankmachine3_cmd_valid <= 1'd1;
                soclinux_bankmachine3_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_bankmachine3_cmd_ready) begin
                    builder_bankmachine3_next_state <= 1'd0;
                end
                soclinux_bankmachine3_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_bankmachine3_twtpcon_ready) begin
                soclinux_bankmachine3_refresh_gnt <= 1'd1;
            end
            soclinux_bankmachine3_row_close <= 1'd1;
            soclinux_bankmachine3_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_bankmachine3_refresh_req)) begin
                builder_bankmachine3_next_state <= 1'd0;
            end
        end
        default: begin
            if (soclinux_bankmachine3_refresh_req) begin
                builder_bankmachine3_next_state <= 3'd4;
            end else begin
                if (soclinux_bankmachine3_source_source_valid) begin
                    if (soclinux_bankmachine3_row_opened) begin
                        if (soclinux_bankmachine3_row_hit) begin
                            soclinux_bankmachine3_cmd_valid <= 1'd1;
                            if (soclinux_bankmachine3_source_source_payload_we) begin
                                soclinux_bankmachine3_req_wdata_ready <= soclinux_bankmachine3_cmd_ready;
                                soclinux_bankmachine3_cmd_payload_is_write <= 1'd1;
                                soclinux_bankmachine3_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_bankmachine3_req_rdata_valid <= soclinux_bankmachine3_cmd_ready;
                                soclinux_bankmachine3_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_bankmachine3_cmd_payload_cas <= 1'd1;
                            if ((soclinux_bankmachine3_cmd_ready & soclinux_bankmachine3_auto_precharge)) begin
                                builder_bankmachine3_next_state <= 2'd2;
                            end
                        end else begin
                            builder_bankmachine3_next_state <= 1'd1;
                        end
                    end else begin
                        builder_bankmachine3_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_choose_req_want_cmds = 1'd1;
assign soclinux_trrdcon_valid = ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & ((soclinux_choose_req_cmd_payload_ras & (~soclinux_choose_req_cmd_payload_cas)) & (~soclinux_choose_req_cmd_payload_we)));
assign soclinux_tfawcon_valid = ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & ((soclinux_choose_req_cmd_payload_ras & (~soclinux_choose_req_cmd_payload_cas)) & (~soclinux_choose_req_cmd_payload_we)));
assign soclinux_ras_allowed = (soclinux_trrdcon_ready & soclinux_tfawcon_ready);
assign soclinux_tccdcon_valid = ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & (soclinux_choose_req_cmd_payload_is_write | soclinux_choose_req_cmd_payload_is_read));
assign soclinux_cas_allowed = soclinux_tccdcon_ready;
assign soclinux_twtrcon_valid = ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_is_write);
assign soclinux_read_available = ((((soclinux_bankmachine0_cmd_valid & soclinux_bankmachine0_cmd_payload_is_read) | (soclinux_bankmachine1_cmd_valid & soclinux_bankmachine1_cmd_payload_is_read)) | (soclinux_bankmachine2_cmd_valid & soclinux_bankmachine2_cmd_payload_is_read)) | (soclinux_bankmachine3_cmd_valid & soclinux_bankmachine3_cmd_payload_is_read));
assign soclinux_write_available = ((((soclinux_bankmachine0_cmd_valid & soclinux_bankmachine0_cmd_payload_is_write) | (soclinux_bankmachine1_cmd_valid & soclinux_bankmachine1_cmd_payload_is_write)) | (soclinux_bankmachine2_cmd_valid & soclinux_bankmachine2_cmd_payload_is_write)) | (soclinux_bankmachine3_cmd_valid & soclinux_bankmachine3_cmd_payload_is_write));
assign soclinux_max_time0 = (soclinux_time0 == 1'd0);
assign soclinux_max_time1 = (soclinux_time1 == 1'd0);
assign soclinux_bankmachine0_refresh_req = soclinux_cmd_valid;
assign soclinux_bankmachine1_refresh_req = soclinux_cmd_valid;
assign soclinux_bankmachine2_refresh_req = soclinux_cmd_valid;
assign soclinux_bankmachine3_refresh_req = soclinux_cmd_valid;
assign soclinux_go_to_refresh = (((soclinux_bankmachine0_refresh_gnt & soclinux_bankmachine1_refresh_gnt) & soclinux_bankmachine2_refresh_gnt) & soclinux_bankmachine3_refresh_gnt);
assign soclinux_interface_rdata = {soclinux_dfi_p0_rddata};
assign {soclinux_dfi_p0_wrdata} = soclinux_interface_wdata;
assign {soclinux_dfi_p0_wrdata_mask} = (~soclinux_interface_wdata_we);
always @(*) begin
    soclinux_choose_cmd_valids <= 4'd0;
    soclinux_choose_cmd_valids[0] <= (soclinux_bankmachine0_cmd_valid & (((soclinux_bankmachine0_cmd_payload_is_cmd & soclinux_choose_cmd_want_cmds) & ((~((soclinux_bankmachine0_cmd_payload_ras & (~soclinux_bankmachine0_cmd_payload_cas)) & (~soclinux_bankmachine0_cmd_payload_we))) | soclinux_choose_cmd_want_activates)) | ((soclinux_bankmachine0_cmd_payload_is_read == soclinux_choose_cmd_want_reads) & (soclinux_bankmachine0_cmd_payload_is_write == soclinux_choose_cmd_want_writes))));
    soclinux_choose_cmd_valids[1] <= (soclinux_bankmachine1_cmd_valid & (((soclinux_bankmachine1_cmd_payload_is_cmd & soclinux_choose_cmd_want_cmds) & ((~((soclinux_bankmachine1_cmd_payload_ras & (~soclinux_bankmachine1_cmd_payload_cas)) & (~soclinux_bankmachine1_cmd_payload_we))) | soclinux_choose_cmd_want_activates)) | ((soclinux_bankmachine1_cmd_payload_is_read == soclinux_choose_cmd_want_reads) & (soclinux_bankmachine1_cmd_payload_is_write == soclinux_choose_cmd_want_writes))));
    soclinux_choose_cmd_valids[2] <= (soclinux_bankmachine2_cmd_valid & (((soclinux_bankmachine2_cmd_payload_is_cmd & soclinux_choose_cmd_want_cmds) & ((~((soclinux_bankmachine2_cmd_payload_ras & (~soclinux_bankmachine2_cmd_payload_cas)) & (~soclinux_bankmachine2_cmd_payload_we))) | soclinux_choose_cmd_want_activates)) | ((soclinux_bankmachine2_cmd_payload_is_read == soclinux_choose_cmd_want_reads) & (soclinux_bankmachine2_cmd_payload_is_write == soclinux_choose_cmd_want_writes))));
    soclinux_choose_cmd_valids[3] <= (soclinux_bankmachine3_cmd_valid & (((soclinux_bankmachine3_cmd_payload_is_cmd & soclinux_choose_cmd_want_cmds) & ((~((soclinux_bankmachine3_cmd_payload_ras & (~soclinux_bankmachine3_cmd_payload_cas)) & (~soclinux_bankmachine3_cmd_payload_we))) | soclinux_choose_cmd_want_activates)) | ((soclinux_bankmachine3_cmd_payload_is_read == soclinux_choose_cmd_want_reads) & (soclinux_bankmachine3_cmd_payload_is_write == soclinux_choose_cmd_want_writes))));
end
assign soclinux_choose_cmd_request = soclinux_choose_cmd_valids;
assign soclinux_choose_cmd_cmd_valid = builder_comb_rhs_self8;
assign soclinux_choose_cmd_cmd_payload_a = builder_comb_rhs_self9;
assign soclinux_choose_cmd_cmd_payload_ba = builder_comb_rhs_self10;
assign soclinux_choose_cmd_cmd_payload_is_read = builder_comb_rhs_self11;
assign soclinux_choose_cmd_cmd_payload_is_write = builder_comb_rhs_self12;
assign soclinux_choose_cmd_cmd_payload_is_cmd = builder_comb_rhs_self13;
always @(*) begin
    soclinux_choose_cmd_cmd_payload_cas <= 1'd0;
    if (soclinux_choose_cmd_cmd_valid) begin
        soclinux_choose_cmd_cmd_payload_cas <= builder_comb_t_self0;
    end
end
always @(*) begin
    soclinux_choose_cmd_cmd_payload_ras <= 1'd0;
    if (soclinux_choose_cmd_cmd_valid) begin
        soclinux_choose_cmd_cmd_payload_ras <= builder_comb_t_self1;
    end
end
always @(*) begin
    soclinux_choose_cmd_cmd_payload_we <= 1'd0;
    if (soclinux_choose_cmd_cmd_valid) begin
        soclinux_choose_cmd_cmd_payload_we <= builder_comb_t_self2;
    end
end
assign soclinux_choose_cmd_ce = (soclinux_choose_cmd_cmd_ready | (~soclinux_choose_cmd_cmd_valid));
always @(*) begin
    soclinux_choose_req_valids <= 4'd0;
    soclinux_choose_req_valids[0] <= (soclinux_bankmachine0_cmd_valid & (((soclinux_bankmachine0_cmd_payload_is_cmd & soclinux_choose_req_want_cmds) & ((~((soclinux_bankmachine0_cmd_payload_ras & (~soclinux_bankmachine0_cmd_payload_cas)) & (~soclinux_bankmachine0_cmd_payload_we))) | soclinux_choose_req_want_activates)) | ((soclinux_bankmachine0_cmd_payload_is_read == soclinux_choose_req_want_reads) & (soclinux_bankmachine0_cmd_payload_is_write == soclinux_choose_req_want_writes))));
    soclinux_choose_req_valids[1] <= (soclinux_bankmachine1_cmd_valid & (((soclinux_bankmachine1_cmd_payload_is_cmd & soclinux_choose_req_want_cmds) & ((~((soclinux_bankmachine1_cmd_payload_ras & (~soclinux_bankmachine1_cmd_payload_cas)) & (~soclinux_bankmachine1_cmd_payload_we))) | soclinux_choose_req_want_activates)) | ((soclinux_bankmachine1_cmd_payload_is_read == soclinux_choose_req_want_reads) & (soclinux_bankmachine1_cmd_payload_is_write == soclinux_choose_req_want_writes))));
    soclinux_choose_req_valids[2] <= (soclinux_bankmachine2_cmd_valid & (((soclinux_bankmachine2_cmd_payload_is_cmd & soclinux_choose_req_want_cmds) & ((~((soclinux_bankmachine2_cmd_payload_ras & (~soclinux_bankmachine2_cmd_payload_cas)) & (~soclinux_bankmachine2_cmd_payload_we))) | soclinux_choose_req_want_activates)) | ((soclinux_bankmachine2_cmd_payload_is_read == soclinux_choose_req_want_reads) & (soclinux_bankmachine2_cmd_payload_is_write == soclinux_choose_req_want_writes))));
    soclinux_choose_req_valids[3] <= (soclinux_bankmachine3_cmd_valid & (((soclinux_bankmachine3_cmd_payload_is_cmd & soclinux_choose_req_want_cmds) & ((~((soclinux_bankmachine3_cmd_payload_ras & (~soclinux_bankmachine3_cmd_payload_cas)) & (~soclinux_bankmachine3_cmd_payload_we))) | soclinux_choose_req_want_activates)) | ((soclinux_bankmachine3_cmd_payload_is_read == soclinux_choose_req_want_reads) & (soclinux_bankmachine3_cmd_payload_is_write == soclinux_choose_req_want_writes))));
end
assign soclinux_choose_req_request = soclinux_choose_req_valids;
assign soclinux_choose_req_cmd_valid = builder_comb_rhs_self14;
assign soclinux_choose_req_cmd_payload_a = builder_comb_rhs_self15;
assign soclinux_choose_req_cmd_payload_ba = builder_comb_rhs_self16;
assign soclinux_choose_req_cmd_payload_is_read = builder_comb_rhs_self17;
assign soclinux_choose_req_cmd_payload_is_write = builder_comb_rhs_self18;
assign soclinux_choose_req_cmd_payload_is_cmd = builder_comb_rhs_self19;
always @(*) begin
    soclinux_choose_req_cmd_payload_cas <= 1'd0;
    if (soclinux_choose_req_cmd_valid) begin
        soclinux_choose_req_cmd_payload_cas <= builder_comb_t_self3;
    end
end
always @(*) begin
    soclinux_choose_req_cmd_payload_ras <= 1'd0;
    if (soclinux_choose_req_cmd_valid) begin
        soclinux_choose_req_cmd_payload_ras <= builder_comb_t_self4;
    end
end
always @(*) begin
    soclinux_choose_req_cmd_payload_we <= 1'd0;
    if (soclinux_choose_req_cmd_valid) begin
        soclinux_choose_req_cmd_payload_we <= builder_comb_t_self5;
    end
end
always @(*) begin
    soclinux_bankmachine0_cmd_ready <= 1'd0;
    if (((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & (soclinux_choose_cmd_grant == 1'd0))) begin
        soclinux_bankmachine0_cmd_ready <= 1'd1;
    end
    if (((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & (soclinux_choose_req_grant == 1'd0))) begin
        soclinux_bankmachine0_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    soclinux_bankmachine1_cmd_ready <= 1'd0;
    if (((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & (soclinux_choose_cmd_grant == 1'd1))) begin
        soclinux_bankmachine1_cmd_ready <= 1'd1;
    end
    if (((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & (soclinux_choose_req_grant == 1'd1))) begin
        soclinux_bankmachine1_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    soclinux_bankmachine2_cmd_ready <= 1'd0;
    if (((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & (soclinux_choose_cmd_grant == 2'd2))) begin
        soclinux_bankmachine2_cmd_ready <= 1'd1;
    end
    if (((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & (soclinux_choose_req_grant == 2'd2))) begin
        soclinux_bankmachine2_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    soclinux_bankmachine3_cmd_ready <= 1'd0;
    if (((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & (soclinux_choose_cmd_grant == 2'd3))) begin
        soclinux_bankmachine3_cmd_ready <= 1'd1;
    end
    if (((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & (soclinux_choose_req_grant == 2'd3))) begin
        soclinux_bankmachine3_cmd_ready <= 1'd1;
    end
end
assign soclinux_choose_req_ce = (soclinux_choose_req_cmd_ready | (~soclinux_choose_req_cmd_valid));
assign soclinux_dfi_p0_reset_n = 1'd1;
assign soclinux_dfi_p0_cke = {1{soclinux_steerer1}};
assign soclinux_dfi_p0_odt = {1{soclinux_steerer2}};
always @(*) begin
    builder_multiplexer_next_state <= 3'd0;
    soclinux_choose_req_cmd_ready <= 1'd0;
    soclinux_choose_req_want_activates <= 1'd0;
    soclinux_choose_req_want_reads <= 1'd0;
    soclinux_choose_req_want_writes <= 1'd0;
    soclinux_cmd_ready <= 1'd0;
    soclinux_en0 <= 1'd0;
    soclinux_en1 <= 1'd0;
    soclinux_steerer0 <= 2'd0;
    soclinux_choose_req_want_activates <= soclinux_ras_allowed;
    builder_multiplexer_next_state <= builder_multiplexer_state;
    case (builder_multiplexer_state)
        1'd1: begin
            soclinux_en1 <= 1'd1;
            soclinux_choose_req_want_writes <= 1'd1;
            if (1'd1) begin
                soclinux_choose_req_cmd_ready <= (soclinux_cas_allowed & ((~((soclinux_choose_req_cmd_payload_ras & (~soclinux_choose_req_cmd_payload_cas)) & (~soclinux_choose_req_cmd_payload_we))) | soclinux_ras_allowed));
            end else begin
                soclinux_choose_req_want_activates <= soclinux_ras_allowed;
                soclinux_choose_req_cmd_ready <= ((~((soclinux_choose_req_cmd_payload_ras & (~soclinux_choose_req_cmd_payload_cas)) & (~soclinux_choose_req_cmd_payload_we))) | soclinux_ras_allowed);
                soclinux_choose_req_cmd_ready <= soclinux_cas_allowed;
            end
            soclinux_steerer0 <= 1'd0;
            if (1'd1) begin
                soclinux_steerer0 <= 2'd2;
            end
            if (1'd1) begin
                soclinux_steerer0 <= 1'd1;
            end
            if (soclinux_read_available) begin
                if (((~soclinux_write_available) | soclinux_max_time1)) begin
                    builder_multiplexer_next_state <= 2'd3;
                end
            end
            if (soclinux_go_to_refresh) begin
                builder_multiplexer_next_state <= 2'd2;
            end
        end
        2'd2: begin
            soclinux_steerer0 <= 2'd3;
            soclinux_cmd_ready <= 1'd1;
            if (soclinux_cmd_last) begin
                builder_multiplexer_next_state <= 1'd0;
            end
        end
        2'd3: begin
            if (soclinux_twtrcon_ready) begin
                builder_multiplexer_next_state <= 1'd0;
            end
        end
        3'd4: begin
            builder_multiplexer_next_state <= 3'd5;
        end
        3'd5: begin
            builder_multiplexer_next_state <= 1'd1;
        end
        default: begin
            soclinux_en0 <= 1'd1;
            soclinux_choose_req_want_reads <= 1'd1;
            if (1'd1) begin
                soclinux_choose_req_cmd_ready <= (soclinux_cas_allowed & ((~((soclinux_choose_req_cmd_payload_ras & (~soclinux_choose_req_cmd_payload_cas)) & (~soclinux_choose_req_cmd_payload_we))) | soclinux_ras_allowed));
            end else begin
                soclinux_choose_req_want_activates <= soclinux_ras_allowed;
                soclinux_choose_req_cmd_ready <= ((~((soclinux_choose_req_cmd_payload_ras & (~soclinux_choose_req_cmd_payload_cas)) & (~soclinux_choose_req_cmd_payload_we))) | soclinux_ras_allowed);
                soclinux_choose_req_cmd_ready <= soclinux_cas_allowed;
            end
            soclinux_steerer0 <= 1'd0;
            if (1'd1) begin
                soclinux_steerer0 <= 2'd2;
            end
            if (1'd1) begin
                soclinux_steerer0 <= 1'd1;
            end
            if (soclinux_write_available) begin
                if (((~soclinux_read_available) | soclinux_max_time0)) begin
                    builder_multiplexer_next_state <= 3'd4;
                end
            end
            if (soclinux_go_to_refresh) begin
                builder_multiplexer_next_state <= 2'd2;
            end
        end
    endcase
end
assign builder_roundrobin0_request = {(((soclinux_litedramnativeport2_cmd_payload_addr[11:10] == 1'd0) & (~(((builder_locked2 | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid), (((soclinux_litedramnativeport1_cmd_payload_addr[11:10] == 1'd0) & (~(((builder_locked1 | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid), (((soclinux_litedramnativeport0_cmd_payload_addr[11:10] == 1'd0) & (~(((builder_locked0 | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid)};
assign builder_roundrobin0_ce = ((~soclinux_interface_bank0_valid) & (~soclinux_interface_bank0_lock));
assign soclinux_interface_bank0_addr = builder_comb_rhs_self20;
assign soclinux_interface_bank0_we = builder_comb_rhs_self21;
assign soclinux_interface_bank0_valid = builder_comb_rhs_self22;
assign builder_roundrobin1_request = {(((soclinux_litedramnativeport2_cmd_payload_addr[11:10] == 1'd1) & (~(((builder_locked5 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 2'd2))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid), (((soclinux_litedramnativeport1_cmd_payload_addr[11:10] == 1'd1) & (~(((builder_locked4 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd1))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid), (((soclinux_litedramnativeport0_cmd_payload_addr[11:10] == 1'd1) & (~(((builder_locked3 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid)};
assign builder_roundrobin1_ce = ((~soclinux_interface_bank1_valid) & (~soclinux_interface_bank1_lock));
assign soclinux_interface_bank1_addr = builder_comb_rhs_self23;
assign soclinux_interface_bank1_we = builder_comb_rhs_self24;
assign soclinux_interface_bank1_valid = builder_comb_rhs_self25;
assign builder_roundrobin2_request = {(((soclinux_litedramnativeport2_cmd_payload_addr[11:10] == 2'd2) & (~(((builder_locked8 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 2'd2))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid), (((soclinux_litedramnativeport1_cmd_payload_addr[11:10] == 2'd2) & (~(((builder_locked7 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd1))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid), (((soclinux_litedramnativeport0_cmd_payload_addr[11:10] == 2'd2) & (~(((builder_locked6 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid)};
assign builder_roundrobin2_ce = ((~soclinux_interface_bank2_valid) & (~soclinux_interface_bank2_lock));
assign soclinux_interface_bank2_addr = builder_comb_rhs_self26;
assign soclinux_interface_bank2_we = builder_comb_rhs_self27;
assign soclinux_interface_bank2_valid = builder_comb_rhs_self28;
assign builder_roundrobin3_request = {(((soclinux_litedramnativeport2_cmd_payload_addr[11:10] == 2'd3) & (~(((builder_locked11 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid), (((soclinux_litedramnativeport1_cmd_payload_addr[11:10] == 2'd3) & (~(((builder_locked10 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid), (((soclinux_litedramnativeport0_cmd_payload_addr[11:10] == 2'd3) & (~(((builder_locked9 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid)};
assign builder_roundrobin3_ce = ((~soclinux_interface_bank3_valid) & (~soclinux_interface_bank3_lock));
assign soclinux_interface_bank3_addr = builder_comb_rhs_self29;
assign soclinux_interface_bank3_we = builder_comb_rhs_self30;
assign soclinux_interface_bank3_valid = builder_comb_rhs_self31;
assign soclinux_litedramnativeport0_cmd_ready = ((((1'd0 | (((builder_roundrobin0_grant == 1'd0) & ((soclinux_litedramnativeport0_cmd_payload_addr[11:10] == 1'd0) & (~(((builder_locked0 | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0)))))) & soclinux_interface_bank0_ready)) | (((builder_roundrobin1_grant == 1'd0) & ((soclinux_litedramnativeport0_cmd_payload_addr[11:10] == 1'd1) & (~(((builder_locked3 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0)))))) & soclinux_interface_bank1_ready)) | (((builder_roundrobin2_grant == 1'd0) & ((soclinux_litedramnativeport0_cmd_payload_addr[11:10] == 2'd2) & (~(((builder_locked6 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0)))))) & soclinux_interface_bank2_ready)) | (((builder_roundrobin3_grant == 1'd0) & ((soclinux_litedramnativeport0_cmd_payload_addr[11:10] == 2'd3) & (~(((builder_locked9 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0)))))) & soclinux_interface_bank3_ready));
assign soclinux_litedramnativeport1_cmd_ready = ((((1'd0 | (((builder_roundrobin0_grant == 1'd1) & ((soclinux_litedramnativeport1_cmd_payload_addr[11:10] == 1'd0) & (~(((builder_locked1 | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd1)))))) & soclinux_interface_bank0_ready)) | (((builder_roundrobin1_grant == 1'd1) & ((soclinux_litedramnativeport1_cmd_payload_addr[11:10] == 1'd1) & (~(((builder_locked4 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd1))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd1)))))) & soclinux_interface_bank1_ready)) | (((builder_roundrobin2_grant == 1'd1) & ((soclinux_litedramnativeport1_cmd_payload_addr[11:10] == 2'd2) & (~(((builder_locked7 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd1))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd1)))))) & soclinux_interface_bank2_ready)) | (((builder_roundrobin3_grant == 1'd1) & ((soclinux_litedramnativeport1_cmd_payload_addr[11:10] == 2'd3) & (~(((builder_locked10 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd1)))))) & soclinux_interface_bank3_ready));
assign soclinux_litedramnativeport2_cmd_ready = ((((1'd0 | (((builder_roundrobin0_grant == 2'd2) & ((soclinux_litedramnativeport2_cmd_payload_addr[11:10] == 1'd0) & (~(((builder_locked2 | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 2'd2)))))) & soclinux_interface_bank0_ready)) | (((builder_roundrobin1_grant == 2'd2) & ((soclinux_litedramnativeport2_cmd_payload_addr[11:10] == 1'd1) & (~(((builder_locked5 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 2'd2))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 2'd2)))))) & soclinux_interface_bank1_ready)) | (((builder_roundrobin2_grant == 2'd2) & ((soclinux_litedramnativeport2_cmd_payload_addr[11:10] == 2'd2) & (~(((builder_locked8 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 2'd2))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 2'd2)))))) & soclinux_interface_bank2_ready)) | (((builder_roundrobin3_grant == 2'd2) & ((soclinux_litedramnativeport2_cmd_payload_addr[11:10] == 2'd3) & (~(((builder_locked11 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 2'd2)))))) & soclinux_interface_bank3_ready));
assign soclinux_litedramnativeport0_wdata_ready = builder_new_master_wdata_ready0;
assign soclinux_litedramnativeport1_wdata_ready = builder_new_master_wdata_ready1;
assign soclinux_litedramnativeport2_wdata_ready = builder_new_master_wdata_ready2;
assign soclinux_litedramnativeport0_rdata_valid = builder_new_master_rdata_valid3;
assign soclinux_litedramnativeport1_rdata_valid = builder_new_master_rdata_valid7;
assign soclinux_litedramnativeport2_rdata_valid = builder_new_master_rdata_valid11;
always @(*) begin
    soclinux_interface_wdata <= 16'd0;
    soclinux_interface_wdata_we <= 2'd0;
    case ({builder_new_master_wdata_ready2, builder_new_master_wdata_ready1, builder_new_master_wdata_ready0})
        1'd1: begin
            soclinux_interface_wdata <= soclinux_litedramnativeport0_wdata_payload_data;
            soclinux_interface_wdata_we <= soclinux_litedramnativeport0_wdata_payload_we;
        end
        2'd2: begin
            soclinux_interface_wdata <= soclinux_litedramnativeport1_wdata_payload_data;
            soclinux_interface_wdata_we <= soclinux_litedramnativeport1_wdata_payload_we;
        end
        3'd4: begin
            soclinux_interface_wdata <= soclinux_litedramnativeport2_wdata_payload_data;
            soclinux_interface_wdata_we <= soclinux_litedramnativeport2_wdata_payload_we;
        end
        default: begin
            soclinux_interface_wdata <= 1'd0;
            soclinux_interface_wdata_we <= 1'd0;
        end
    endcase
end
assign soclinux_litedramnativeport0_rdata_payload_data = soclinux_interface_rdata;
assign soclinux_litedramnativeport1_rdata_payload_data = soclinux_interface_rdata;
assign soclinux_litedramnativeport2_rdata_payload_data = soclinux_interface_rdata;
assign soclinux_done0 = (soclinux_count0 == 1'd1);
always @(*) begin
    soclinux_litedram_wb_cti <= 3'd0;
    case (soclinux_wb_sdram_cti)
        2'd2: begin
            soclinux_litedram_wb_cti <= 2'd2;
        end
        3'd7: begin
            soclinux_litedram_wb_cti <= (soclinux_done0 ? 3'd7 : 2'd2);
        end
        default: begin
            soclinux_litedram_wb_cti <= 1'd0;
        end
    endcase
    if ((soclinux_wb_sdram_bte != 1'd0)) begin
        soclinux_litedram_wb_cti <= 1'd0;
    end
end
always @(*) begin
    soclinux_litedram_wb_cyc <= 1'd0;
    soclinux_litedram_wb_stb <= 1'd0;
    soclinux_litedram_wb_we <= 1'd0;
    soclinux_skip <= 1'd0;
    soclinux_wb_sdram_ack <= 1'd0;
    if ((soclinux_wb_sdram_stb & soclinux_wb_sdram_cyc)) begin
        soclinux_skip <= ((soclinux_litedram_wb_sel == 1'd0) & (soclinux_litedram_wb_cti == 1'd0));
        soclinux_litedram_wb_cyc <= (~soclinux_skip);
        soclinux_litedram_wb_stb <= (~soclinux_skip);
        soclinux_litedram_wb_we <= soclinux_wb_sdram_we;
        if ((soclinux_litedram_wb_ack | soclinux_skip)) begin
            soclinux_wb_sdram_ack <= soclinux_done0;
        end
    end
end
assign soclinux_litedram_wb_adr = {soclinux_wb_sdram_adr, soclinux_count0};
always @(*) begin
    soclinux_litedram_wb_dat_w <= 16'd0;
    case (soclinux_count0)
        1'd0: begin
            soclinux_litedram_wb_dat_w <= soclinux_wb_sdram_dat_w;
        end
        1'd1: begin
            soclinux_litedram_wb_dat_w <= soclinux_wb_sdram_dat_w[31:16];
        end
    endcase
end
always @(*) begin
    soclinux_litedram_wb_sel <= 2'd0;
    case (soclinux_count0)
        1'd0: begin
            soclinux_litedram_wb_sel <= soclinux_wb_sdram_sel;
        end
        1'd1: begin
            soclinux_litedram_wb_sel <= soclinux_wb_sdram_sel[3:2];
        end
    endcase
end
assign soclinux_wb_sdram_dat_r = {soclinux_litedram_wb_dat_r, soclinux_dat_r[31:16]};
assign soclinux_litedramnativeport2_cmd_payload_addr = (soclinux_litedram_wb_adr - 30'd536870912);
assign soclinux_litedramnativeport2_cmd_payload_we = soclinux_litedram_wb_we;
assign soclinux_litedramnativeport2_cmd_last = (~soclinux_litedram_wb_we);
assign soclinux_litedramnativeport2_flush = (~soclinux_litedram_wb_cyc);
always @(*) begin
    soclinux_litedramnativeport2_wdata_valid <= 1'd0;
    soclinux_litedramnativeport2_wdata_valid <= (soclinux_litedram_wb_stb & soclinux_litedram_wb_we);
    if (1'd1) begin
        if ((~soclinux_is_ongoing)) begin
            soclinux_litedramnativeport2_wdata_valid <= 1'd0;
        end
    end
end
assign soclinux_litedramnativeport2_wdata_payload_data = soclinux_litedram_wb_dat_w;
assign soclinux_litedramnativeport2_wdata_payload_we = soclinux_litedram_wb_sel;
assign soclinux_litedramnativeport2_rdata_ready = 1'd1;
always @(*) begin
    builder_litedramwishbone2native_next_state <= 2'd0;
    soclinux_aborted_litedramwishbone2native_next_value <= 1'd0;
    soclinux_aborted_litedramwishbone2native_next_value_ce <= 1'd0;
    soclinux_is_ongoing <= 1'd0;
    soclinux_litedram_wb_ack <= 1'd0;
    soclinux_litedram_wb_dat_r <= 16'd0;
    soclinux_litedramnativeport2_cmd_valid <= 1'd0;
    builder_litedramwishbone2native_next_state <= builder_litedramwishbone2native_state;
    case (builder_litedramwishbone2native_state)
        1'd1: begin
            soclinux_is_ongoing <= 1'd1;
            soclinux_aborted_litedramwishbone2native_next_value <= ((~soclinux_litedram_wb_cyc) | soclinux_aborted);
            soclinux_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
            if ((soclinux_litedramnativeport2_wdata_valid & soclinux_litedramnativeport2_wdata_ready)) begin
                soclinux_litedram_wb_ack <= (soclinux_litedram_wb_cyc & (~soclinux_aborted));
                builder_litedramwishbone2native_next_state <= 1'd0;
            end
        end
        2'd2: begin
            soclinux_aborted_litedramwishbone2native_next_value <= ((~soclinux_litedram_wb_cyc) | soclinux_aborted);
            soclinux_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
            if (soclinux_litedramnativeport2_rdata_valid) begin
                soclinux_litedram_wb_ack <= (soclinux_litedram_wb_cyc & (~soclinux_aborted));
                soclinux_litedram_wb_dat_r <= soclinux_litedramnativeport2_rdata_payload_data;
                builder_litedramwishbone2native_next_state <= 1'd0;
            end
        end
        default: begin
            soclinux_litedramnativeport2_cmd_valid <= (soclinux_litedram_wb_cyc & soclinux_litedram_wb_stb);
            if (((soclinux_litedramnativeport2_cmd_valid & soclinux_litedramnativeport2_cmd_ready) & soclinux_litedram_wb_we)) begin
                builder_litedramwishbone2native_next_state <= 1'd1;
            end
            if (((soclinux_litedramnativeport2_cmd_valid & soclinux_litedramnativeport2_cmd_ready) & (~soclinux_litedram_wb_we))) begin
                builder_litedramwishbone2native_next_state <= 2'd2;
            end
            soclinux_aborted_litedramwishbone2native_next_value <= 1'd0;
            soclinux_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
        end
    endcase
end
assign soclinux_start0 = soclinux_start1;
assign soclinux_length0 = soclinux_length1;
assign soclinux_done2 = soclinux_done1;
assign soclinux_mode0 = 1'd0;
assign soclinux_mosi = soclinux_mosi_storage;
assign soclinux_miso_status = soclinux_miso;
assign soclinux_cs = soclinux_sel1;
assign soclinux_cs_mode = soclinux_mode1;
assign soclinux_loopback = soclinux_mode2;
assign soclinux_clk_rise = (soclinux_clk_divider1 == (soclinux_clk_divider0[15:1] - 1'd1));
assign soclinux_clk_fall = (soclinux_clk_divider1 == (soclinux_clk_divider0 - 1'd1));
assign soclinux_clk_divider0 = soclinux_storage1;
always @(*) begin
    builder_spimaster_next_state <= 2'd0;
    soclinux_clk_enable <= 1'd0;
    soclinux_count1_spimaster_next_value <= 3'd0;
    soclinux_count1_spimaster_next_value_ce <= 1'd0;
    soclinux_done1 <= 1'd0;
    soclinux_irq <= 1'd0;
    soclinux_miso_latch <= 1'd0;
    soclinux_mosi_latch <= 1'd0;
    soclinux_xfer_enable <= 1'd0;
    builder_spimaster_next_state <= builder_spimaster_state;
    case (builder_spimaster_state)
        1'd1: begin
            soclinux_count1_spimaster_next_value <= 1'd0;
            soclinux_count1_spimaster_next_value_ce <= 1'd1;
            if (soclinux_clk_fall) begin
                soclinux_xfer_enable <= 1'd1;
                builder_spimaster_next_state <= 2'd2;
            end
        end
        2'd2: begin
            soclinux_clk_enable <= 1'd1;
            soclinux_xfer_enable <= 1'd1;
            if (soclinux_clk_fall) begin
                soclinux_count1_spimaster_next_value <= (soclinux_count1 + 1'd1);
                soclinux_count1_spimaster_next_value_ce <= 1'd1;
                if ((soclinux_count1 == (soclinux_length0 - 1'd1))) begin
                    builder_spimaster_next_state <= 2'd3;
                end
            end
        end
        2'd3: begin
            soclinux_xfer_enable <= 1'd1;
            if (soclinux_clk_rise) begin
                soclinux_miso_latch <= 1'd1;
                soclinux_irq <= 1'd1;
                builder_spimaster_next_state <= 1'd0;
            end
        end
        default: begin
            soclinux_done1 <= 1'd1;
            if (soclinux_start0) begin
                soclinux_done1 <= 1'd0;
                soclinux_mosi_latch <= 1'd1;
                builder_spimaster_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    builder_interface0_ack <= 1'd0;
    builder_interface0_dat_r <= 32'd0;
    builder_interface1_adr_wishbone2csr_next_value1 <= 14'd0;
    builder_interface1_adr_wishbone2csr_next_value_ce1 <= 1'd0;
    builder_interface1_dat_w_wishbone2csr_next_value0 <= 32'd0;
    builder_interface1_dat_w_wishbone2csr_next_value_ce0 <= 1'd0;
    builder_interface1_re_wishbone2csr_next_value2 <= 1'd0;
    builder_interface1_re_wishbone2csr_next_value_ce2 <= 1'd0;
    builder_interface1_we_wishbone2csr_next_value3 <= 1'd0;
    builder_interface1_we_wishbone2csr_next_value_ce3 <= 1'd0;
    builder_wishbone2csr_next_state <= 2'd0;
    builder_wishbone2csr_next_state <= builder_wishbone2csr_state;
    case (builder_wishbone2csr_state)
        1'd1: begin
            builder_interface1_adr_wishbone2csr_next_value1 <= 1'd0;
            builder_interface1_adr_wishbone2csr_next_value_ce1 <= 1'd1;
            builder_interface1_re_wishbone2csr_next_value2 <= 1'd0;
            builder_interface1_re_wishbone2csr_next_value_ce2 <= 1'd1;
            builder_interface1_we_wishbone2csr_next_value3 <= 1'd0;
            builder_interface1_we_wishbone2csr_next_value_ce3 <= 1'd1;
            builder_wishbone2csr_next_state <= 2'd2;
        end
        2'd2: begin
            builder_interface0_ack <= 1'd1;
            builder_interface0_dat_r <= builder_interface1_dat_r;
            builder_wishbone2csr_next_state <= 1'd0;
        end
        default: begin
            builder_interface1_dat_w_wishbone2csr_next_value0 <= builder_interface0_dat_w;
            builder_interface1_dat_w_wishbone2csr_next_value_ce0 <= 1'd1;
            if ((builder_interface0_cyc & builder_interface0_stb)) begin
                builder_interface1_adr_wishbone2csr_next_value1 <= builder_interface0_adr;
                builder_interface1_adr_wishbone2csr_next_value_ce1 <= 1'd1;
                builder_interface1_re_wishbone2csr_next_value2 <= ((~builder_interface0_we) & (builder_interface0_sel != 1'd0));
                builder_interface1_re_wishbone2csr_next_value_ce2 <= 1'd1;
                builder_interface1_we_wishbone2csr_next_value3 <= (builder_interface0_we & (builder_interface0_sel != 1'd0));
                builder_interface1_we_wishbone2csr_next_value_ce3 <= 1'd1;
                builder_wishbone2csr_next_state <= 1'd1;
            end
        end
    endcase
end
assign builder_csr_bankarray_csrbank0_sel = (builder_csr_bankarray_interface0_bank_bus_adr[13:9] == 1'd0);
assign builder_csr_bankarray_csrbank0_reset0_r = builder_csr_bankarray_interface0_bank_bus_dat_w[1:0];
always @(*) begin
    builder_csr_bankarray_csrbank0_reset0_re <= 1'd0;
    builder_csr_bankarray_csrbank0_reset0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank0_sel & (builder_csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csr_bankarray_csrbank0_reset0_re <= builder_csr_bankarray_interface0_bank_bus_we;
        builder_csr_bankarray_csrbank0_reset0_we <= builder_csr_bankarray_interface0_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank0_scratch0_r = builder_csr_bankarray_interface0_bank_bus_dat_w;
always @(*) begin
    builder_csr_bankarray_csrbank0_scratch0_re <= 1'd0;
    builder_csr_bankarray_csrbank0_scratch0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank0_sel & (builder_csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csr_bankarray_csrbank0_scratch0_re <= builder_csr_bankarray_interface0_bank_bus_we;
        builder_csr_bankarray_csrbank0_scratch0_we <= builder_csr_bankarray_interface0_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank0_bus_errors_r = builder_csr_bankarray_interface0_bank_bus_dat_w;
always @(*) begin
    builder_csr_bankarray_csrbank0_bus_errors_re <= 1'd0;
    builder_csr_bankarray_csrbank0_bus_errors_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank0_sel & (builder_csr_bankarray_interface0_bank_bus_adr[8:0] == 2'd2))) begin
        builder_csr_bankarray_csrbank0_bus_errors_re <= builder_csr_bankarray_interface0_bank_bus_we;
        builder_csr_bankarray_csrbank0_bus_errors_we <= builder_csr_bankarray_interface0_bank_bus_re;
    end
end
always @(*) begin
    soclinux_soc_rst <= 1'd0;
    if (soclinux_reset_re) begin
        soclinux_soc_rst <= soclinux_reset_storage[0];
    end
end
assign soclinux_cpu_rst = soclinux_reset_storage[1];
assign builder_csr_bankarray_csrbank0_reset0_w = soclinux_reset_storage;
assign builder_csr_bankarray_csrbank0_scratch0_w = soclinux_scratch_storage;
assign builder_csr_bankarray_csrbank0_bus_errors_w = soclinux_bus_errors_status;
assign soclinux_bus_errors_we = builder_csr_bankarray_csrbank0_bus_errors_we;
assign builder_csr_bankarray_sel = (builder_csr_bankarray_sram_bus_adr[13:9] == 1'd1);
always @(*) begin
    builder_csr_bankarray_sram_bus_dat_r <= 32'd0;
    if (builder_csr_bankarray_sel_r) begin
        builder_csr_bankarray_sram_bus_dat_r <= builder_csr_bankarray_dat_r;
    end
end
assign builder_csr_bankarray_adr = builder_csr_bankarray_sram_bus_adr[4:0];
assign builder_csr_bankarray_csrbank1_sel = (builder_csr_bankarray_interface1_bank_bus_adr[13:9] == 3'd4);
assign builder_csr_bankarray_csrbank1_out0_r = builder_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank1_out0_re <= 1'd0;
    builder_csr_bankarray_csrbank1_out0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csr_bankarray_csrbank1_out0_re <= builder_csr_bankarray_interface1_bank_bus_we;
        builder_csr_bankarray_csrbank1_out0_we <= builder_csr_bankarray_interface1_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank1_out0_w = leds_storage;
assign builder_csr_bankarray_csrbank2_sel = (builder_csr_bankarray_interface2_bank_bus_adr[13:9] == 3'd5);
assign builder_csr_bankarray_csrbank2_dfii_control0_r = builder_csr_bankarray_interface2_bank_bus_dat_w[3:0];
always @(*) begin
    builder_csr_bankarray_csrbank2_dfii_control0_re <= 1'd0;
    builder_csr_bankarray_csrbank2_dfii_control0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csr_bankarray_csrbank2_dfii_control0_re <= builder_csr_bankarray_interface2_bank_bus_we;
        builder_csr_bankarray_csrbank2_dfii_control0_we <= builder_csr_bankarray_interface2_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank2_dfii_pi0_command0_r = builder_csr_bankarray_interface2_bank_bus_dat_w[7:0];
always @(*) begin
    builder_csr_bankarray_csrbank2_dfii_pi0_command0_re <= 1'd0;
    builder_csr_bankarray_csrbank2_dfii_pi0_command0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csr_bankarray_csrbank2_dfii_pi0_command0_re <= builder_csr_bankarray_interface2_bank_bus_we;
        builder_csr_bankarray_csrbank2_dfii_pi0_command0_we <= builder_csr_bankarray_interface2_bank_bus_re;
    end
end
assign soclinux_command_issue_r = builder_csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    soclinux_command_issue_re <= 1'd0;
    soclinux_command_issue_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd2))) begin
        soclinux_command_issue_re <= builder_csr_bankarray_interface2_bank_bus_we;
        soclinux_command_issue_we <= builder_csr_bankarray_interface2_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank2_dfii_pi0_address0_r = builder_csr_bankarray_interface2_bank_bus_dat_w[12:0];
always @(*) begin
    builder_csr_bankarray_csrbank2_dfii_pi0_address0_re <= 1'd0;
    builder_csr_bankarray_csrbank2_dfii_pi0_address0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd3))) begin
        builder_csr_bankarray_csrbank2_dfii_pi0_address0_re <= builder_csr_bankarray_interface2_bank_bus_we;
        builder_csr_bankarray_csrbank2_dfii_pi0_address0_we <= builder_csr_bankarray_interface2_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank2_dfii_pi0_baddress0_r = builder_csr_bankarray_interface2_bank_bus_dat_w[1:0];
always @(*) begin
    builder_csr_bankarray_csrbank2_dfii_pi0_baddress0_re <= 1'd0;
    builder_csr_bankarray_csrbank2_dfii_pi0_baddress0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd4))) begin
        builder_csr_bankarray_csrbank2_dfii_pi0_baddress0_re <= builder_csr_bankarray_interface2_bank_bus_we;
        builder_csr_bankarray_csrbank2_dfii_pi0_baddress0_we <= builder_csr_bankarray_interface2_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank2_dfii_pi0_wrdata0_r = builder_csr_bankarray_interface2_bank_bus_dat_w[15:0];
always @(*) begin
    builder_csr_bankarray_csrbank2_dfii_pi0_wrdata0_re <= 1'd0;
    builder_csr_bankarray_csrbank2_dfii_pi0_wrdata0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd5))) begin
        builder_csr_bankarray_csrbank2_dfii_pi0_wrdata0_re <= builder_csr_bankarray_interface2_bank_bus_we;
        builder_csr_bankarray_csrbank2_dfii_pi0_wrdata0_we <= builder_csr_bankarray_interface2_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank2_dfii_pi0_rddata_r = builder_csr_bankarray_interface2_bank_bus_dat_w[15:0];
always @(*) begin
    builder_csr_bankarray_csrbank2_dfii_pi0_rddata_re <= 1'd0;
    builder_csr_bankarray_csrbank2_dfii_pi0_rddata_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd6))) begin
        builder_csr_bankarray_csrbank2_dfii_pi0_rddata_re <= builder_csr_bankarray_interface2_bank_bus_we;
        builder_csr_bankarray_csrbank2_dfii_pi0_rddata_we <= builder_csr_bankarray_interface2_bank_bus_re;
    end
end
assign soclinux_sel0 = soclinux_storage0[0];
assign soclinux_cke = soclinux_storage0[1];
assign soclinux_odt = soclinux_storage0[2];
assign soclinux_reset_n = soclinux_storage0[3];
assign builder_csr_bankarray_csrbank2_dfii_control0_w = soclinux_storage0;
assign soclinux_csrfield_cs = soclinux_command_storage[0];
assign soclinux_csrfield_we = soclinux_command_storage[1];
assign soclinux_csrfield_cas = soclinux_command_storage[2];
assign soclinux_csrfield_ras = soclinux_command_storage[3];
assign soclinux_csrfield_wren = soclinux_command_storage[4];
assign soclinux_csrfield_rden = soclinux_command_storage[5];
assign soclinux_csrfield_cs_top = soclinux_command_storage[6];
assign soclinux_csrfield_cs_bottom = soclinux_command_storage[7];
assign builder_csr_bankarray_csrbank2_dfii_pi0_command0_w = soclinux_command_storage;
assign builder_csr_bankarray_csrbank2_dfii_pi0_address0_w = soclinux_address_storage;
assign builder_csr_bankarray_csrbank2_dfii_pi0_baddress0_w = soclinux_baddress_storage;
assign builder_csr_bankarray_csrbank2_dfii_pi0_wrdata0_w = soclinux_wrdata_storage;
assign builder_csr_bankarray_csrbank2_dfii_pi0_rddata_w = soclinux_rddata_status;
assign soclinux_rddata_we = builder_csr_bankarray_csrbank2_dfii_pi0_rddata_we;
assign builder_csr_bankarray_csrbank3_sel = (builder_csr_bankarray_interface3_bank_bus_adr[13:9] == 3'd6);
assign builder_csr_bankarray_csrbank3_control0_r = builder_csr_bankarray_interface3_bank_bus_dat_w[15:0];
always @(*) begin
    builder_csr_bankarray_csrbank3_control0_re <= 1'd0;
    builder_csr_bankarray_csrbank3_control0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csr_bankarray_csrbank3_control0_re <= builder_csr_bankarray_interface3_bank_bus_we;
        builder_csr_bankarray_csrbank3_control0_we <= builder_csr_bankarray_interface3_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank3_status_r = builder_csr_bankarray_interface3_bank_bus_dat_w[1:0];
always @(*) begin
    builder_csr_bankarray_csrbank3_status_re <= 1'd0;
    builder_csr_bankarray_csrbank3_status_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csr_bankarray_csrbank3_status_re <= builder_csr_bankarray_interface3_bank_bus_we;
        builder_csr_bankarray_csrbank3_status_we <= builder_csr_bankarray_interface3_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank3_mosi0_r = builder_csr_bankarray_interface3_bank_bus_dat_w[7:0];
always @(*) begin
    builder_csr_bankarray_csrbank3_mosi0_re <= 1'd0;
    builder_csr_bankarray_csrbank3_mosi0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 2'd2))) begin
        builder_csr_bankarray_csrbank3_mosi0_re <= builder_csr_bankarray_interface3_bank_bus_we;
        builder_csr_bankarray_csrbank3_mosi0_we <= builder_csr_bankarray_interface3_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank3_miso_r = builder_csr_bankarray_interface3_bank_bus_dat_w[7:0];
always @(*) begin
    builder_csr_bankarray_csrbank3_miso_re <= 1'd0;
    builder_csr_bankarray_csrbank3_miso_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 2'd3))) begin
        builder_csr_bankarray_csrbank3_miso_re <= builder_csr_bankarray_interface3_bank_bus_we;
        builder_csr_bankarray_csrbank3_miso_we <= builder_csr_bankarray_interface3_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank3_cs0_r = builder_csr_bankarray_interface3_bank_bus_dat_w[16:0];
always @(*) begin
    builder_csr_bankarray_csrbank3_cs0_re <= 1'd0;
    builder_csr_bankarray_csrbank3_cs0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 3'd4))) begin
        builder_csr_bankarray_csrbank3_cs0_re <= builder_csr_bankarray_interface3_bank_bus_we;
        builder_csr_bankarray_csrbank3_cs0_we <= builder_csr_bankarray_interface3_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank3_loopback0_r = builder_csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank3_loopback0_re <= 1'd0;
    builder_csr_bankarray_csrbank3_loopback0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 3'd5))) begin
        builder_csr_bankarray_csrbank3_loopback0_re <= builder_csr_bankarray_interface3_bank_bus_we;
        builder_csr_bankarray_csrbank3_loopback0_we <= builder_csr_bankarray_interface3_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank3_clk_divider0_r = builder_csr_bankarray_interface3_bank_bus_dat_w[15:0];
always @(*) begin
    builder_csr_bankarray_csrbank3_clk_divider0_re <= 1'd0;
    builder_csr_bankarray_csrbank3_clk_divider0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 3'd6))) begin
        builder_csr_bankarray_csrbank3_clk_divider0_re <= builder_csr_bankarray_interface3_bank_bus_we;
        builder_csr_bankarray_csrbank3_clk_divider0_we <= builder_csr_bankarray_interface3_bank_bus_re;
    end
end
always @(*) begin
    soclinux_start1 <= 1'd0;
    if (soclinux_control_re) begin
        soclinux_start1 <= soclinux_control_storage[0];
    end
end
assign soclinux_length1 = soclinux_control_storage[15:8];
assign builder_csr_bankarray_csrbank3_control0_w = soclinux_control_storage;
always @(*) begin
    soclinux_status_status <= 2'd0;
    soclinux_status_status[0] <= soclinux_done2;
    soclinux_status_status[1] <= soclinux_mode0;
end
assign builder_csr_bankarray_csrbank3_status_w = soclinux_status_status;
assign soclinux_status_we = builder_csr_bankarray_csrbank3_status_we;
assign builder_csr_bankarray_csrbank3_mosi0_w = soclinux_mosi_storage;
assign builder_csr_bankarray_csrbank3_miso_w = soclinux_miso_status;
assign soclinux_miso_we = builder_csr_bankarray_csrbank3_miso_we;
assign soclinux_sel1 = soclinux_cs_storage[0];
assign soclinux_mode1 = soclinux_cs_storage[16];
assign builder_csr_bankarray_csrbank3_cs0_w = soclinux_cs_storage;
assign soclinux_mode2 = soclinux_loopback_storage;
assign builder_csr_bankarray_csrbank3_loopback0_w = soclinux_loopback_storage;
assign builder_csr_bankarray_csrbank3_clk_divider0_w = soclinux_storage1;
assign builder_csr_bankarray_csrbank4_sel = (builder_csr_bankarray_interface4_bank_bus_adr[13:9] == 2'd3);
assign builder_csr_bankarray_csrbank4_load0_r = builder_csr_bankarray_interface4_bank_bus_dat_w;
always @(*) begin
    builder_csr_bankarray_csrbank4_load0_re <= 1'd0;
    builder_csr_bankarray_csrbank4_load0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank4_sel & (builder_csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csr_bankarray_csrbank4_load0_re <= builder_csr_bankarray_interface4_bank_bus_we;
        builder_csr_bankarray_csrbank4_load0_we <= builder_csr_bankarray_interface4_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank4_reload0_r = builder_csr_bankarray_interface4_bank_bus_dat_w;
always @(*) begin
    builder_csr_bankarray_csrbank4_reload0_re <= 1'd0;
    builder_csr_bankarray_csrbank4_reload0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank4_sel & (builder_csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csr_bankarray_csrbank4_reload0_re <= builder_csr_bankarray_interface4_bank_bus_we;
        builder_csr_bankarray_csrbank4_reload0_we <= builder_csr_bankarray_interface4_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank4_en0_r = builder_csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank4_en0_re <= 1'd0;
    builder_csr_bankarray_csrbank4_en0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank4_sel & (builder_csr_bankarray_interface4_bank_bus_adr[8:0] == 2'd2))) begin
        builder_csr_bankarray_csrbank4_en0_re <= builder_csr_bankarray_interface4_bank_bus_we;
        builder_csr_bankarray_csrbank4_en0_we <= builder_csr_bankarray_interface4_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank4_update_value0_r = builder_csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank4_update_value0_re <= 1'd0;
    builder_csr_bankarray_csrbank4_update_value0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank4_sel & (builder_csr_bankarray_interface4_bank_bus_adr[8:0] == 2'd3))) begin
        builder_csr_bankarray_csrbank4_update_value0_re <= builder_csr_bankarray_interface4_bank_bus_we;
        builder_csr_bankarray_csrbank4_update_value0_we <= builder_csr_bankarray_interface4_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank4_value_r = builder_csr_bankarray_interface4_bank_bus_dat_w;
always @(*) begin
    builder_csr_bankarray_csrbank4_value_re <= 1'd0;
    builder_csr_bankarray_csrbank4_value_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank4_sel & (builder_csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd4))) begin
        builder_csr_bankarray_csrbank4_value_re <= builder_csr_bankarray_interface4_bank_bus_we;
        builder_csr_bankarray_csrbank4_value_we <= builder_csr_bankarray_interface4_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank4_ev_status_r = builder_csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank4_ev_status_re <= 1'd0;
    builder_csr_bankarray_csrbank4_ev_status_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank4_sel & (builder_csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd5))) begin
        builder_csr_bankarray_csrbank4_ev_status_re <= builder_csr_bankarray_interface4_bank_bus_we;
        builder_csr_bankarray_csrbank4_ev_status_we <= builder_csr_bankarray_interface4_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank4_ev_pending_r = builder_csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank4_ev_pending_re <= 1'd0;
    builder_csr_bankarray_csrbank4_ev_pending_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank4_sel & (builder_csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd6))) begin
        builder_csr_bankarray_csrbank4_ev_pending_re <= builder_csr_bankarray_interface4_bank_bus_we;
        builder_csr_bankarray_csrbank4_ev_pending_we <= builder_csr_bankarray_interface4_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank4_ev_enable0_r = builder_csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank4_ev_enable0_re <= 1'd0;
    builder_csr_bankarray_csrbank4_ev_enable0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank4_sel & (builder_csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd7))) begin
        builder_csr_bankarray_csrbank4_ev_enable0_re <= builder_csr_bankarray_interface4_bank_bus_we;
        builder_csr_bankarray_csrbank4_ev_enable0_we <= builder_csr_bankarray_interface4_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank4_load0_w = soclinux_timer_load_storage;
assign builder_csr_bankarray_csrbank4_reload0_w = soclinux_timer_reload_storage;
assign builder_csr_bankarray_csrbank4_en0_w = soclinux_timer_en_storage;
assign builder_csr_bankarray_csrbank4_update_value0_w = soclinux_timer_update_value_storage;
assign builder_csr_bankarray_csrbank4_value_w = soclinux_timer_value_status;
assign soclinux_timer_value_we = builder_csr_bankarray_csrbank4_value_we;
assign soclinux_timer_status_status = soclinux_timer_zero0;
assign builder_csr_bankarray_csrbank4_ev_status_w = soclinux_timer_status_status;
assign soclinux_timer_status_we = builder_csr_bankarray_csrbank4_ev_status_we;
assign soclinux_timer_pending_status = soclinux_timer_zero1;
assign builder_csr_bankarray_csrbank4_ev_pending_w = soclinux_timer_pending_status;
assign soclinux_timer_pending_we = builder_csr_bankarray_csrbank4_ev_pending_we;
assign soclinux_timer_zero2 = soclinux_timer_enable_storage;
assign builder_csr_bankarray_csrbank4_ev_enable0_w = soclinux_timer_enable_storage;
assign builder_csr_bankarray_csrbank5_sel = (builder_csr_bankarray_interface5_bank_bus_adr[13:9] == 2'd2);
assign soclinux_uart_rxtx_r = builder_csr_bankarray_interface5_bank_bus_dat_w[7:0];
always @(*) begin
    soclinux_uart_rxtx_re <= 1'd0;
    soclinux_uart_rxtx_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank5_sel & (builder_csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd0))) begin
        soclinux_uart_rxtx_re <= builder_csr_bankarray_interface5_bank_bus_we;
        soclinux_uart_rxtx_we <= builder_csr_bankarray_interface5_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank5_txfull_r = builder_csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank5_txfull_re <= 1'd0;
    builder_csr_bankarray_csrbank5_txfull_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank5_sel & (builder_csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csr_bankarray_csrbank5_txfull_re <= builder_csr_bankarray_interface5_bank_bus_we;
        builder_csr_bankarray_csrbank5_txfull_we <= builder_csr_bankarray_interface5_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank5_rxempty_r = builder_csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank5_rxempty_re <= 1'd0;
    builder_csr_bankarray_csrbank5_rxempty_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank5_sel & (builder_csr_bankarray_interface5_bank_bus_adr[8:0] == 2'd2))) begin
        builder_csr_bankarray_csrbank5_rxempty_re <= builder_csr_bankarray_interface5_bank_bus_we;
        builder_csr_bankarray_csrbank5_rxempty_we <= builder_csr_bankarray_interface5_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank5_ev_status_r = builder_csr_bankarray_interface5_bank_bus_dat_w[1:0];
always @(*) begin
    builder_csr_bankarray_csrbank5_ev_status_re <= 1'd0;
    builder_csr_bankarray_csrbank5_ev_status_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank5_sel & (builder_csr_bankarray_interface5_bank_bus_adr[8:0] == 2'd3))) begin
        builder_csr_bankarray_csrbank5_ev_status_re <= builder_csr_bankarray_interface5_bank_bus_we;
        builder_csr_bankarray_csrbank5_ev_status_we <= builder_csr_bankarray_interface5_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank5_ev_pending_r = builder_csr_bankarray_interface5_bank_bus_dat_w[1:0];
always @(*) begin
    builder_csr_bankarray_csrbank5_ev_pending_re <= 1'd0;
    builder_csr_bankarray_csrbank5_ev_pending_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank5_sel & (builder_csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd4))) begin
        builder_csr_bankarray_csrbank5_ev_pending_re <= builder_csr_bankarray_interface5_bank_bus_we;
        builder_csr_bankarray_csrbank5_ev_pending_we <= builder_csr_bankarray_interface5_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank5_ev_enable0_r = builder_csr_bankarray_interface5_bank_bus_dat_w[1:0];
always @(*) begin
    builder_csr_bankarray_csrbank5_ev_enable0_re <= 1'd0;
    builder_csr_bankarray_csrbank5_ev_enable0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank5_sel & (builder_csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd5))) begin
        builder_csr_bankarray_csrbank5_ev_enable0_re <= builder_csr_bankarray_interface5_bank_bus_we;
        builder_csr_bankarray_csrbank5_ev_enable0_we <= builder_csr_bankarray_interface5_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank5_txempty_r = builder_csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank5_txempty_re <= 1'd0;
    builder_csr_bankarray_csrbank5_txempty_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank5_sel & (builder_csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd6))) begin
        builder_csr_bankarray_csrbank5_txempty_re <= builder_csr_bankarray_interface5_bank_bus_we;
        builder_csr_bankarray_csrbank5_txempty_we <= builder_csr_bankarray_interface5_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank5_rxfull_r = builder_csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank5_rxfull_re <= 1'd0;
    builder_csr_bankarray_csrbank5_rxfull_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank5_sel & (builder_csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd7))) begin
        builder_csr_bankarray_csrbank5_rxfull_re <= builder_csr_bankarray_interface5_bank_bus_we;
        builder_csr_bankarray_csrbank5_rxfull_we <= builder_csr_bankarray_interface5_bank_bus_re;
    end
end
assign builder_csr_bankarray_csrbank5_txfull_w = soclinux_uart_txfull_status;
assign soclinux_uart_txfull_we = builder_csr_bankarray_csrbank5_txfull_we;
assign builder_csr_bankarray_csrbank5_rxempty_w = soclinux_uart_rxempty_status;
assign soclinux_uart_rxempty_we = builder_csr_bankarray_csrbank5_rxempty_we;
always @(*) begin
    soclinux_uart_status_status <= 2'd0;
    soclinux_uart_status_status[0] <= soclinux_uart_tx0;
    soclinux_uart_status_status[1] <= soclinux_uart_rx0;
end
assign builder_csr_bankarray_csrbank5_ev_status_w = soclinux_uart_status_status;
assign soclinux_uart_status_we = builder_csr_bankarray_csrbank5_ev_status_we;
always @(*) begin
    soclinux_uart_pending_status <= 2'd0;
    soclinux_uart_pending_status[0] <= soclinux_uart_tx1;
    soclinux_uart_pending_status[1] <= soclinux_uart_rx1;
end
assign builder_csr_bankarray_csrbank5_ev_pending_w = soclinux_uart_pending_status;
assign soclinux_uart_pending_we = builder_csr_bankarray_csrbank5_ev_pending_we;
assign soclinux_uart_tx2 = soclinux_uart_enable_storage[0];
assign soclinux_uart_rx2 = soclinux_uart_enable_storage[1];
assign builder_csr_bankarray_csrbank5_ev_enable0_w = soclinux_uart_enable_storage;
assign builder_csr_bankarray_csrbank5_txempty_w = soclinux_uart_txempty_status;
assign soclinux_uart_txempty_we = builder_csr_bankarray_csrbank5_txempty_we;
assign builder_csr_bankarray_csrbank5_rxfull_w = soclinux_uart_rxfull_status;
assign soclinux_uart_rxfull_we = builder_csr_bankarray_csrbank5_rxfull_we;
assign builder_csr_interconnect_adr = builder_interface1_adr;
assign builder_csr_interconnect_re = builder_interface1_re;
assign builder_csr_interconnect_we = builder_interface1_we;
assign builder_csr_interconnect_dat_w = builder_interface1_dat_w;
assign builder_interface1_dat_r = builder_csr_interconnect_dat_r;
assign builder_csr_bankarray_interface0_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface1_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface2_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface3_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface4_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface5_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_sram_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface0_bank_bus_re = builder_csr_interconnect_re;
assign builder_csr_bankarray_interface1_bank_bus_re = builder_csr_interconnect_re;
assign builder_csr_bankarray_interface2_bank_bus_re = builder_csr_interconnect_re;
assign builder_csr_bankarray_interface3_bank_bus_re = builder_csr_interconnect_re;
assign builder_csr_bankarray_interface4_bank_bus_re = builder_csr_interconnect_re;
assign builder_csr_bankarray_interface5_bank_bus_re = builder_csr_interconnect_re;
assign builder_csr_bankarray_sram_bus_re = builder_csr_interconnect_re;
assign builder_csr_bankarray_interface0_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface1_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface2_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface3_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface4_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface5_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_sram_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface0_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_interface1_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_interface2_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_interface3_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_interface4_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_interface5_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_sram_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_interconnect_dat_r = ((((((builder_csr_bankarray_interface0_bank_bus_dat_r | builder_csr_bankarray_interface1_bank_bus_dat_r) | builder_csr_bankarray_interface2_bank_bus_dat_r) | builder_csr_bankarray_interface3_bank_bus_dat_r) | builder_csr_bankarray_interface4_bank_bus_dat_r) | builder_csr_bankarray_interface5_bank_bus_dat_r) | builder_csr_bankarray_sram_bus_dat_r);
always @(*) begin
    builder_comb_rhs_self0 <= 30'd0;
    case (builder_grant)
        default: begin
            builder_comb_rhs_self0 <= soclinux_pbus_adr;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self1 <= 32'd0;
    case (builder_grant)
        default: begin
            builder_comb_rhs_self1 <= soclinux_pbus_dat_w;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self2 <= 4'd0;
    case (builder_grant)
        default: begin
            builder_comb_rhs_self2 <= soclinux_pbus_sel;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self3 <= 1'd0;
    case (builder_grant)
        default: begin
            builder_comb_rhs_self3 <= soclinux_pbus_cyc;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self4 <= 1'd0;
    case (builder_grant)
        default: begin
            builder_comb_rhs_self4 <= soclinux_pbus_stb;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self5 <= 1'd0;
    case (builder_grant)
        default: begin
            builder_comb_rhs_self5 <= soclinux_pbus_we;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self6 <= 3'd0;
    case (builder_grant)
        default: begin
            builder_comb_rhs_self6 <= soclinux_pbus_cti;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self7 <= 2'd0;
    case (builder_grant)
        default: begin
            builder_comb_rhs_self7 <= soclinux_pbus_bte;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self8 <= 1'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            builder_comb_rhs_self8 <= soclinux_choose_cmd_valids[0];
        end
        1'd1: begin
            builder_comb_rhs_self8 <= soclinux_choose_cmd_valids[1];
        end
        2'd2: begin
            builder_comb_rhs_self8 <= soclinux_choose_cmd_valids[2];
        end
        default: begin
            builder_comb_rhs_self8 <= soclinux_choose_cmd_valids[3];
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self9 <= 13'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            builder_comb_rhs_self9 <= soclinux_bankmachine0_cmd_payload_a;
        end
        1'd1: begin
            builder_comb_rhs_self9 <= soclinux_bankmachine1_cmd_payload_a;
        end
        2'd2: begin
            builder_comb_rhs_self9 <= soclinux_bankmachine2_cmd_payload_a;
        end
        default: begin
            builder_comb_rhs_self9 <= soclinux_bankmachine3_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self10 <= 2'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            builder_comb_rhs_self10 <= soclinux_bankmachine0_cmd_payload_ba;
        end
        1'd1: begin
            builder_comb_rhs_self10 <= soclinux_bankmachine1_cmd_payload_ba;
        end
        2'd2: begin
            builder_comb_rhs_self10 <= soclinux_bankmachine2_cmd_payload_ba;
        end
        default: begin
            builder_comb_rhs_self10 <= soclinux_bankmachine3_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self11 <= 1'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            builder_comb_rhs_self11 <= soclinux_bankmachine0_cmd_payload_is_read;
        end
        1'd1: begin
            builder_comb_rhs_self11 <= soclinux_bankmachine1_cmd_payload_is_read;
        end
        2'd2: begin
            builder_comb_rhs_self11 <= soclinux_bankmachine2_cmd_payload_is_read;
        end
        default: begin
            builder_comb_rhs_self11 <= soclinux_bankmachine3_cmd_payload_is_read;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self12 <= 1'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            builder_comb_rhs_self12 <= soclinux_bankmachine0_cmd_payload_is_write;
        end
        1'd1: begin
            builder_comb_rhs_self12 <= soclinux_bankmachine1_cmd_payload_is_write;
        end
        2'd2: begin
            builder_comb_rhs_self12 <= soclinux_bankmachine2_cmd_payload_is_write;
        end
        default: begin
            builder_comb_rhs_self12 <= soclinux_bankmachine3_cmd_payload_is_write;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self13 <= 1'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            builder_comb_rhs_self13 <= soclinux_bankmachine0_cmd_payload_is_cmd;
        end
        1'd1: begin
            builder_comb_rhs_self13 <= soclinux_bankmachine1_cmd_payload_is_cmd;
        end
        2'd2: begin
            builder_comb_rhs_self13 <= soclinux_bankmachine2_cmd_payload_is_cmd;
        end
        default: begin
            builder_comb_rhs_self13 <= soclinux_bankmachine3_cmd_payload_is_cmd;
        end
    endcase
end
always @(*) begin
    builder_comb_t_self0 <= 1'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            builder_comb_t_self0 <= soclinux_bankmachine0_cmd_payload_cas;
        end
        1'd1: begin
            builder_comb_t_self0 <= soclinux_bankmachine1_cmd_payload_cas;
        end
        2'd2: begin
            builder_comb_t_self0 <= soclinux_bankmachine2_cmd_payload_cas;
        end
        default: begin
            builder_comb_t_self0 <= soclinux_bankmachine3_cmd_payload_cas;
        end
    endcase
end
always @(*) begin
    builder_comb_t_self1 <= 1'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            builder_comb_t_self1 <= soclinux_bankmachine0_cmd_payload_ras;
        end
        1'd1: begin
            builder_comb_t_self1 <= soclinux_bankmachine1_cmd_payload_ras;
        end
        2'd2: begin
            builder_comb_t_self1 <= soclinux_bankmachine2_cmd_payload_ras;
        end
        default: begin
            builder_comb_t_self1 <= soclinux_bankmachine3_cmd_payload_ras;
        end
    endcase
end
always @(*) begin
    builder_comb_t_self2 <= 1'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            builder_comb_t_self2 <= soclinux_bankmachine0_cmd_payload_we;
        end
        1'd1: begin
            builder_comb_t_self2 <= soclinux_bankmachine1_cmd_payload_we;
        end
        2'd2: begin
            builder_comb_t_self2 <= soclinux_bankmachine2_cmd_payload_we;
        end
        default: begin
            builder_comb_t_self2 <= soclinux_bankmachine3_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self14 <= 1'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            builder_comb_rhs_self14 <= soclinux_choose_req_valids[0];
        end
        1'd1: begin
            builder_comb_rhs_self14 <= soclinux_choose_req_valids[1];
        end
        2'd2: begin
            builder_comb_rhs_self14 <= soclinux_choose_req_valids[2];
        end
        default: begin
            builder_comb_rhs_self14 <= soclinux_choose_req_valids[3];
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self15 <= 13'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            builder_comb_rhs_self15 <= soclinux_bankmachine0_cmd_payload_a;
        end
        1'd1: begin
            builder_comb_rhs_self15 <= soclinux_bankmachine1_cmd_payload_a;
        end
        2'd2: begin
            builder_comb_rhs_self15 <= soclinux_bankmachine2_cmd_payload_a;
        end
        default: begin
            builder_comb_rhs_self15 <= soclinux_bankmachine3_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self16 <= 2'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            builder_comb_rhs_self16 <= soclinux_bankmachine0_cmd_payload_ba;
        end
        1'd1: begin
            builder_comb_rhs_self16 <= soclinux_bankmachine1_cmd_payload_ba;
        end
        2'd2: begin
            builder_comb_rhs_self16 <= soclinux_bankmachine2_cmd_payload_ba;
        end
        default: begin
            builder_comb_rhs_self16 <= soclinux_bankmachine3_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self17 <= 1'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            builder_comb_rhs_self17 <= soclinux_bankmachine0_cmd_payload_is_read;
        end
        1'd1: begin
            builder_comb_rhs_self17 <= soclinux_bankmachine1_cmd_payload_is_read;
        end
        2'd2: begin
            builder_comb_rhs_self17 <= soclinux_bankmachine2_cmd_payload_is_read;
        end
        default: begin
            builder_comb_rhs_self17 <= soclinux_bankmachine3_cmd_payload_is_read;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self18 <= 1'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            builder_comb_rhs_self18 <= soclinux_bankmachine0_cmd_payload_is_write;
        end
        1'd1: begin
            builder_comb_rhs_self18 <= soclinux_bankmachine1_cmd_payload_is_write;
        end
        2'd2: begin
            builder_comb_rhs_self18 <= soclinux_bankmachine2_cmd_payload_is_write;
        end
        default: begin
            builder_comb_rhs_self18 <= soclinux_bankmachine3_cmd_payload_is_write;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self19 <= 1'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            builder_comb_rhs_self19 <= soclinux_bankmachine0_cmd_payload_is_cmd;
        end
        1'd1: begin
            builder_comb_rhs_self19 <= soclinux_bankmachine1_cmd_payload_is_cmd;
        end
        2'd2: begin
            builder_comb_rhs_self19 <= soclinux_bankmachine2_cmd_payload_is_cmd;
        end
        default: begin
            builder_comb_rhs_self19 <= soclinux_bankmachine3_cmd_payload_is_cmd;
        end
    endcase
end
always @(*) begin
    builder_comb_t_self3 <= 1'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            builder_comb_t_self3 <= soclinux_bankmachine0_cmd_payload_cas;
        end
        1'd1: begin
            builder_comb_t_self3 <= soclinux_bankmachine1_cmd_payload_cas;
        end
        2'd2: begin
            builder_comb_t_self3 <= soclinux_bankmachine2_cmd_payload_cas;
        end
        default: begin
            builder_comb_t_self3 <= soclinux_bankmachine3_cmd_payload_cas;
        end
    endcase
end
always @(*) begin
    builder_comb_t_self4 <= 1'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            builder_comb_t_self4 <= soclinux_bankmachine0_cmd_payload_ras;
        end
        1'd1: begin
            builder_comb_t_self4 <= soclinux_bankmachine1_cmd_payload_ras;
        end
        2'd2: begin
            builder_comb_t_self4 <= soclinux_bankmachine2_cmd_payload_ras;
        end
        default: begin
            builder_comb_t_self4 <= soclinux_bankmachine3_cmd_payload_ras;
        end
    endcase
end
always @(*) begin
    builder_comb_t_self5 <= 1'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            builder_comb_t_self5 <= soclinux_bankmachine0_cmd_payload_we;
        end
        1'd1: begin
            builder_comb_t_self5 <= soclinux_bankmachine1_cmd_payload_we;
        end
        2'd2: begin
            builder_comb_t_self5 <= soclinux_bankmachine2_cmd_payload_we;
        end
        default: begin
            builder_comb_t_self5 <= soclinux_bankmachine3_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self20 <= 23'd0;
    case (builder_roundrobin0_grant)
        1'd0: begin
            builder_comb_rhs_self20 <= {soclinux_litedramnativeport0_cmd_payload_addr[24:12], soclinux_litedramnativeport0_cmd_payload_addr[9:0]};
        end
        1'd1: begin
            builder_comb_rhs_self20 <= {soclinux_litedramnativeport1_cmd_payload_addr[24:12], soclinux_litedramnativeport1_cmd_payload_addr[9:0]};
        end
        default: begin
            builder_comb_rhs_self20 <= {soclinux_litedramnativeport2_cmd_payload_addr[24:12], soclinux_litedramnativeport2_cmd_payload_addr[9:0]};
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self21 <= 1'd0;
    case (builder_roundrobin0_grant)
        1'd0: begin
            builder_comb_rhs_self21 <= soclinux_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            builder_comb_rhs_self21 <= soclinux_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            builder_comb_rhs_self21 <= soclinux_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self22 <= 1'd0;
    case (builder_roundrobin0_grant)
        1'd0: begin
            builder_comb_rhs_self22 <= (((soclinux_litedramnativeport0_cmd_payload_addr[11:10] == 1'd0) & (~(((builder_locked0 | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            builder_comb_rhs_self22 <= (((soclinux_litedramnativeport1_cmd_payload_addr[11:10] == 1'd0) & (~(((builder_locked1 | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid);
        end
        default: begin
            builder_comb_rhs_self22 <= (((soclinux_litedramnativeport2_cmd_payload_addr[11:10] == 1'd0) & (~(((builder_locked2 | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self23 <= 23'd0;
    case (builder_roundrobin1_grant)
        1'd0: begin
            builder_comb_rhs_self23 <= {soclinux_litedramnativeport0_cmd_payload_addr[24:12], soclinux_litedramnativeport0_cmd_payload_addr[9:0]};
        end
        1'd1: begin
            builder_comb_rhs_self23 <= {soclinux_litedramnativeport1_cmd_payload_addr[24:12], soclinux_litedramnativeport1_cmd_payload_addr[9:0]};
        end
        default: begin
            builder_comb_rhs_self23 <= {soclinux_litedramnativeport2_cmd_payload_addr[24:12], soclinux_litedramnativeport2_cmd_payload_addr[9:0]};
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self24 <= 1'd0;
    case (builder_roundrobin1_grant)
        1'd0: begin
            builder_comb_rhs_self24 <= soclinux_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            builder_comb_rhs_self24 <= soclinux_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            builder_comb_rhs_self24 <= soclinux_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self25 <= 1'd0;
    case (builder_roundrobin1_grant)
        1'd0: begin
            builder_comb_rhs_self25 <= (((soclinux_litedramnativeport0_cmd_payload_addr[11:10] == 1'd1) & (~(((builder_locked3 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            builder_comb_rhs_self25 <= (((soclinux_litedramnativeport1_cmd_payload_addr[11:10] == 1'd1) & (~(((builder_locked4 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd1))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid);
        end
        default: begin
            builder_comb_rhs_self25 <= (((soclinux_litedramnativeport2_cmd_payload_addr[11:10] == 1'd1) & (~(((builder_locked5 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 2'd2))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self26 <= 23'd0;
    case (builder_roundrobin2_grant)
        1'd0: begin
            builder_comb_rhs_self26 <= {soclinux_litedramnativeport0_cmd_payload_addr[24:12], soclinux_litedramnativeport0_cmd_payload_addr[9:0]};
        end
        1'd1: begin
            builder_comb_rhs_self26 <= {soclinux_litedramnativeport1_cmd_payload_addr[24:12], soclinux_litedramnativeport1_cmd_payload_addr[9:0]};
        end
        default: begin
            builder_comb_rhs_self26 <= {soclinux_litedramnativeport2_cmd_payload_addr[24:12], soclinux_litedramnativeport2_cmd_payload_addr[9:0]};
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self27 <= 1'd0;
    case (builder_roundrobin2_grant)
        1'd0: begin
            builder_comb_rhs_self27 <= soclinux_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            builder_comb_rhs_self27 <= soclinux_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            builder_comb_rhs_self27 <= soclinux_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self28 <= 1'd0;
    case (builder_roundrobin2_grant)
        1'd0: begin
            builder_comb_rhs_self28 <= (((soclinux_litedramnativeport0_cmd_payload_addr[11:10] == 2'd2) & (~(((builder_locked6 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            builder_comb_rhs_self28 <= (((soclinux_litedramnativeport1_cmd_payload_addr[11:10] == 2'd2) & (~(((builder_locked7 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd1))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid);
        end
        default: begin
            builder_comb_rhs_self28 <= (((soclinux_litedramnativeport2_cmd_payload_addr[11:10] == 2'd2) & (~(((builder_locked8 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 2'd2))) | (soclinux_interface_bank3_lock & (builder_roundrobin3_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self29 <= 23'd0;
    case (builder_roundrobin3_grant)
        1'd0: begin
            builder_comb_rhs_self29 <= {soclinux_litedramnativeport0_cmd_payload_addr[24:12], soclinux_litedramnativeport0_cmd_payload_addr[9:0]};
        end
        1'd1: begin
            builder_comb_rhs_self29 <= {soclinux_litedramnativeport1_cmd_payload_addr[24:12], soclinux_litedramnativeport1_cmd_payload_addr[9:0]};
        end
        default: begin
            builder_comb_rhs_self29 <= {soclinux_litedramnativeport2_cmd_payload_addr[24:12], soclinux_litedramnativeport2_cmd_payload_addr[9:0]};
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self30 <= 1'd0;
    case (builder_roundrobin3_grant)
        1'd0: begin
            builder_comb_rhs_self30 <= soclinux_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            builder_comb_rhs_self30 <= soclinux_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            builder_comb_rhs_self30 <= soclinux_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_self31 <= 1'd0;
    case (builder_roundrobin3_grant)
        1'd0: begin
            builder_comb_rhs_self31 <= (((soclinux_litedramnativeport0_cmd_payload_addr[11:10] == 2'd3) & (~(((builder_locked9 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            builder_comb_rhs_self31 <= (((soclinux_litedramnativeport1_cmd_payload_addr[11:10] == 2'd3) & (~(((builder_locked10 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid);
        end
        default: begin
            builder_comb_rhs_self31 <= (((soclinux_litedramnativeport2_cmd_payload_addr[11:10] == 2'd3) & (~(((builder_locked11 | (soclinux_interface_bank0_lock & (builder_roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (builder_roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (builder_roundrobin2_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    builder_sync_rhs_self0 <= 2'd0;
    case (soclinux_steerer0)
        1'd0: begin
            builder_sync_rhs_self0 <= soclinux_nop_ba;
        end
        1'd1: begin
            builder_sync_rhs_self0 <= soclinux_choose_req_cmd_payload_ba;
        end
        2'd2: begin
            builder_sync_rhs_self0 <= soclinux_choose_req_cmd_payload_ba;
        end
        default: begin
            builder_sync_rhs_self0 <= soclinux_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    builder_sync_rhs_self1 <= 13'd0;
    case (soclinux_steerer0)
        1'd0: begin
            builder_sync_rhs_self1 <= soclinux_nop_a;
        end
        1'd1: begin
            builder_sync_rhs_self1 <= soclinux_choose_req_cmd_payload_a;
        end
        2'd2: begin
            builder_sync_rhs_self1 <= soclinux_choose_req_cmd_payload_a;
        end
        default: begin
            builder_sync_rhs_self1 <= soclinux_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    builder_sync_rhs_self2 <= 1'd0;
    case (soclinux_steerer0)
        1'd0: begin
            builder_sync_rhs_self2 <= 1'd0;
        end
        1'd1: begin
            builder_sync_rhs_self2 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_cas);
        end
        2'd2: begin
            builder_sync_rhs_self2 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_cas);
        end
        default: begin
            builder_sync_rhs_self2 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    builder_sync_rhs_self3 <= 1'd0;
    case (soclinux_steerer0)
        1'd0: begin
            builder_sync_rhs_self3 <= 1'd0;
        end
        1'd1: begin
            builder_sync_rhs_self3 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_ras);
        end
        2'd2: begin
            builder_sync_rhs_self3 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_ras);
        end
        default: begin
            builder_sync_rhs_self3 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    builder_sync_rhs_self4 <= 1'd0;
    case (soclinux_steerer0)
        1'd0: begin
            builder_sync_rhs_self4 <= 1'd0;
        end
        1'd1: begin
            builder_sync_rhs_self4 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_we);
        end
        2'd2: begin
            builder_sync_rhs_self4 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_we);
        end
        default: begin
            builder_sync_rhs_self4 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    builder_sync_rhs_self5 <= 1'd0;
    case (soclinux_steerer0)
        1'd0: begin
            builder_sync_rhs_self5 <= 1'd0;
        end
        1'd1: begin
            builder_sync_rhs_self5 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_is_read);
        end
        2'd2: begin
            builder_sync_rhs_self5 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_is_read);
        end
        default: begin
            builder_sync_rhs_self5 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    builder_sync_rhs_self6 <= 1'd0;
    case (soclinux_steerer0)
        1'd0: begin
            builder_sync_rhs_self6 <= 1'd0;
        end
        1'd1: begin
            builder_sync_rhs_self6 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_is_write);
        end
        2'd2: begin
            builder_sync_rhs_self6 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_is_write);
        end
        default: begin
            builder_sync_rhs_self6 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_is_write);
        end
    endcase
end
always @(*) begin
    builder_sync_f_self <= 1'd0;
    case (soclinux_mosi_sel)
        1'd0: begin
            builder_sync_f_self <= soclinux_mosi_data[0];
        end
        1'd1: begin
            builder_sync_f_self <= soclinux_mosi_data[1];
        end
        2'd2: begin
            builder_sync_f_self <= soclinux_mosi_data[2];
        end
        2'd3: begin
            builder_sync_f_self <= soclinux_mosi_data[3];
        end
        3'd4: begin
            builder_sync_f_self <= soclinux_mosi_data[4];
        end
        3'd5: begin
            builder_sync_f_self <= soclinux_mosi_data[5];
        end
        3'd6: begin
            builder_sync_f_self <= soclinux_mosi_data[6];
        end
        default: begin
            builder_sync_f_self <= soclinux_mosi_data[7];
        end
    endcase
end
assign soclinux_rx_rx = builder_multiregimpl1;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge sys_clk) begin
    builder_slave_sel_r <= builder_slave_sel;
    if (builder_wait) begin
        if ((~builder_done)) begin
            builder_count <= (builder_count - 1'd1);
        end
    end else begin
        builder_count <= 20'd1000000;
    end
    if ((soclinux_bus_errors != 32'd4294967295)) begin
        if (soclinux_bus_error) begin
            soclinux_bus_errors <= (soclinux_bus_errors + 1'd1);
        end
    end
    soclinux_soclinux_ram_bus_ack <= 1'd0;
    if (((soclinux_soclinux_ram_bus_cyc & soclinux_soclinux_ram_bus_stb) & ((~soclinux_soclinux_ram_bus_ack) | soclinux_soclinux_adr_burst))) begin
        soclinux_soclinux_ram_bus_ack <= 1'd1;
    end
    soclinux_ram_bus_ram_bus_ack <= 1'd0;
    if (((soclinux_ram_bus_ram_bus_cyc & soclinux_ram_bus_ram_bus_stb) & ((~soclinux_ram_bus_ram_bus_ack) | soclinux_ram_adr_burst))) begin
        soclinux_ram_bus_ram_bus_ack <= 1'd1;
    end
    {soclinux_tx_tick, soclinux_tx_phase} <= 25'd20615843;
    if (soclinux_tx_enable) begin
        {soclinux_tx_tick, soclinux_tx_phase} <= (soclinux_tx_phase + 25'd20615843);
    end
    builder_rs232phytx_state <= builder_rs232phytx_next_state;
    if (soclinux_tx_count_rs232phytx_next_value_ce0) begin
        soclinux_tx_count <= soclinux_tx_count_rs232phytx_next_value0;
    end
    if (soclinux_serial_tx_rs232phytx_next_value_ce1) begin
        serial_tx <= soclinux_serial_tx_rs232phytx_next_value1;
    end
    if (soclinux_tx_data_rs232phytx_next_value_ce2) begin
        soclinux_tx_data <= soclinux_tx_data_rs232phytx_next_value2;
    end
    soclinux_rx_rx_d <= soclinux_rx_rx;
    {soclinux_rx_tick, soclinux_rx_phase} <= 32'd2147483648;
    if (soclinux_rx_enable) begin
        {soclinux_rx_tick, soclinux_rx_phase} <= (soclinux_rx_phase + 25'd20615843);
    end
    builder_rs232phyrx_state <= builder_rs232phyrx_next_state;
    if (soclinux_rx_count_rs232phyrx_next_value_ce0) begin
        soclinux_rx_count <= soclinux_rx_count_rs232phyrx_next_value0;
    end
    if (soclinux_rx_data_rs232phyrx_next_value_ce1) begin
        soclinux_rx_data <= soclinux_rx_data_rs232phyrx_next_value1;
    end
    if (soclinux_uart_tx_clear) begin
        soclinux_uart_tx_pending <= 1'd0;
    end
    soclinux_uart_tx_trigger_d <= soclinux_uart_tx_trigger;
    if ((soclinux_uart_tx_trigger & (~soclinux_uart_tx_trigger_d))) begin
        soclinux_uart_tx_pending <= 1'd1;
    end
    if (soclinux_uart_rx_clear) begin
        soclinux_uart_rx_pending <= 1'd0;
    end
    soclinux_uart_rx_trigger_d <= soclinux_uart_rx_trigger;
    if ((soclinux_uart_rx_trigger & (~soclinux_uart_rx_trigger_d))) begin
        soclinux_uart_rx_pending <= 1'd1;
    end
    if (soclinux_uart_tx_fifo_syncfifo_re) begin
        soclinux_uart_tx_fifo_readable <= 1'd1;
    end else begin
        if (soclinux_uart_tx_fifo_re) begin
            soclinux_uart_tx_fifo_readable <= 1'd0;
        end
    end
    if (((soclinux_uart_tx_fifo_syncfifo_we & soclinux_uart_tx_fifo_syncfifo_writable) & (~soclinux_uart_tx_fifo_replace))) begin
        soclinux_uart_tx_fifo_produce <= (soclinux_uart_tx_fifo_produce + 1'd1);
    end
    if (soclinux_uart_tx_fifo_do_read) begin
        soclinux_uart_tx_fifo_consume <= (soclinux_uart_tx_fifo_consume + 1'd1);
    end
    if (((soclinux_uart_tx_fifo_syncfifo_we & soclinux_uart_tx_fifo_syncfifo_writable) & (~soclinux_uart_tx_fifo_replace))) begin
        if ((~soclinux_uart_tx_fifo_do_read)) begin
            soclinux_uart_tx_fifo_level0 <= (soclinux_uart_tx_fifo_level0 + 1'd1);
        end
    end else begin
        if (soclinux_uart_tx_fifo_do_read) begin
            soclinux_uart_tx_fifo_level0 <= (soclinux_uart_tx_fifo_level0 - 1'd1);
        end
    end
    if (soclinux_uart_rx_fifo_syncfifo_re) begin
        soclinux_uart_rx_fifo_readable <= 1'd1;
    end else begin
        if (soclinux_uart_rx_fifo_re) begin
            soclinux_uart_rx_fifo_readable <= 1'd0;
        end
    end
    if (((soclinux_uart_rx_fifo_syncfifo_we & soclinux_uart_rx_fifo_syncfifo_writable) & (~soclinux_uart_rx_fifo_replace))) begin
        soclinux_uart_rx_fifo_produce <= (soclinux_uart_rx_fifo_produce + 1'd1);
    end
    if (soclinux_uart_rx_fifo_do_read) begin
        soclinux_uart_rx_fifo_consume <= (soclinux_uart_rx_fifo_consume + 1'd1);
    end
    if (((soclinux_uart_rx_fifo_syncfifo_we & soclinux_uart_rx_fifo_syncfifo_writable) & (~soclinux_uart_rx_fifo_replace))) begin
        if ((~soclinux_uart_rx_fifo_do_read)) begin
            soclinux_uart_rx_fifo_level0 <= (soclinux_uart_rx_fifo_level0 + 1'd1);
        end
    end else begin
        if (soclinux_uart_rx_fifo_do_read) begin
            soclinux_uart_rx_fifo_level0 <= (soclinux_uart_rx_fifo_level0 - 1'd1);
        end
    end
    if (soclinux_timer_en_storage) begin
        if ((soclinux_timer_value == 1'd0)) begin
            soclinux_timer_value <= soclinux_timer_reload_storage;
        end else begin
            soclinux_timer_value <= (soclinux_timer_value - 1'd1);
        end
    end else begin
        soclinux_timer_value <= soclinux_timer_load_storage;
    end
    if (soclinux_timer_update_value_re) begin
        soclinux_timer_value_status <= soclinux_timer_value;
    end
    if (soclinux_timer_zero_clear) begin
        soclinux_timer_zero_pending <= 1'd0;
    end
    soclinux_timer_zero_trigger_d <= soclinux_timer_zero_trigger;
    if ((soclinux_timer_zero_trigger & (~soclinux_timer_zero_trigger_d))) begin
        soclinux_timer_zero_pending <= 1'd1;
    end
    if (leds_done) begin
        leds_chaser <= {leds_chaser, (~leds_chaser)};
    end
    if (leds_re) begin
        leds_mode <= 1'd1;
    end
    if (leds_wait) begin
        if ((~leds_done)) begin
            leds_count <= (leds_count - 1'd1);
        end
    end else begin
        leds_count <= 24'd12000000;
    end
    sdrphy_rddata_en <= {sdrphy_rddata_en, sdrphy_dfi_p0_rddata_en};
    sdrphy_dfi_p0_rddata_valid <= sdrphy_rddata_en[2];
    if (soclinux_csr_dfi_p0_rddata_valid) begin
        soclinux_rddata_status <= soclinux_csr_dfi_p0_rddata;
    end
    if ((soclinux_timer_wait & (~soclinux_timer_done0))) begin
        soclinux_timer_count1 <= (soclinux_timer_count1 - 1'd1);
    end else begin
        soclinux_timer_count1 <= 8'd187;
    end
    soclinux_postponer_req_o <= 1'd0;
    if (soclinux_postponer_req_i) begin
        soclinux_postponer_count <= (soclinux_postponer_count - 1'd1);
        if ((soclinux_postponer_count == 1'd0)) begin
            soclinux_postponer_count <= 1'd0;
            soclinux_postponer_req_o <= 1'd1;
        end
    end
    if (soclinux_sequencer_start0) begin
        soclinux_sequencer_count <= 1'd0;
    end else begin
        if (soclinux_sequencer_done1) begin
            if ((soclinux_sequencer_count != 1'd0)) begin
                soclinux_sequencer_count <= (soclinux_sequencer_count - 1'd1);
            end
        end
    end
    soclinux_cmd_payload_a <= 1'd0;
    soclinux_cmd_payload_ba <= 1'd0;
    soclinux_cmd_payload_cas <= 1'd0;
    soclinux_cmd_payload_ras <= 1'd0;
    soclinux_cmd_payload_we <= 1'd0;
    soclinux_sequencer_done1 <= 1'd0;
    if ((soclinux_sequencer_start1 & (soclinux_sequencer_trigger == 1'd0))) begin
        soclinux_cmd_payload_a <= 11'd1024;
        soclinux_cmd_payload_ba <= 1'd0;
        soclinux_cmd_payload_cas <= 1'd0;
        soclinux_cmd_payload_ras <= 1'd1;
        soclinux_cmd_payload_we <= 1'd1;
    end
    if ((soclinux_sequencer_trigger == 1'd1)) begin
        soclinux_cmd_payload_a <= 11'd1024;
        soclinux_cmd_payload_ba <= 1'd0;
        soclinux_cmd_payload_cas <= 1'd1;
        soclinux_cmd_payload_ras <= 1'd1;
        soclinux_cmd_payload_we <= 1'd0;
    end
    if ((soclinux_sequencer_trigger == 2'd3)) begin
        soclinux_cmd_payload_a <= 1'd0;
        soclinux_cmd_payload_ba <= 1'd0;
        soclinux_cmd_payload_cas <= 1'd0;
        soclinux_cmd_payload_ras <= 1'd0;
        soclinux_cmd_payload_we <= 1'd0;
        soclinux_sequencer_done1 <= 1'd1;
    end
    if ((soclinux_sequencer_trigger != 1'd0)) begin
        soclinux_sequencer_trigger <= (soclinux_sequencer_trigger + 1'd1);
    end else begin
        if (soclinux_sequencer_start1) begin
            soclinux_sequencer_trigger <= 1'd1;
        end
    end
    builder_refresher_state <= builder_refresher_next_state;
    if (soclinux_bankmachine0_row_close) begin
        soclinux_bankmachine0_row_opened <= 1'd0;
    end else begin
        if (soclinux_bankmachine0_row_open) begin
            soclinux_bankmachine0_row_opened <= 1'd1;
            soclinux_bankmachine0_row <= soclinux_bankmachine0_source_source_payload_addr[22:10];
        end
    end
    if (((soclinux_bankmachine0_syncfifo0_we & soclinux_bankmachine0_syncfifo0_writable) & (~soclinux_bankmachine0_replace))) begin
        soclinux_bankmachine0_produce <= (soclinux_bankmachine0_produce + 1'd1);
    end
    if (soclinux_bankmachine0_do_read) begin
        soclinux_bankmachine0_consume <= (soclinux_bankmachine0_consume + 1'd1);
    end
    if (((soclinux_bankmachine0_syncfifo0_we & soclinux_bankmachine0_syncfifo0_writable) & (~soclinux_bankmachine0_replace))) begin
        if ((~soclinux_bankmachine0_do_read)) begin
            soclinux_bankmachine0_level <= (soclinux_bankmachine0_level + 1'd1);
        end
    end else begin
        if (soclinux_bankmachine0_do_read) begin
            soclinux_bankmachine0_level <= (soclinux_bankmachine0_level - 1'd1);
        end
    end
    if (((~soclinux_bankmachine0_pipe_valid_source_valid) | soclinux_bankmachine0_pipe_valid_source_ready)) begin
        soclinux_bankmachine0_pipe_valid_source_valid <= soclinux_bankmachine0_pipe_valid_sink_valid;
        soclinux_bankmachine0_pipe_valid_source_first <= soclinux_bankmachine0_pipe_valid_sink_first;
        soclinux_bankmachine0_pipe_valid_source_last <= soclinux_bankmachine0_pipe_valid_sink_last;
        soclinux_bankmachine0_pipe_valid_source_payload_we <= soclinux_bankmachine0_pipe_valid_sink_payload_we;
        soclinux_bankmachine0_pipe_valid_source_payload_addr <= soclinux_bankmachine0_pipe_valid_sink_payload_addr;
    end
    if (soclinux_bankmachine0_twtpcon_valid) begin
        soclinux_bankmachine0_twtpcon_count <= 2'd3;
        if (1'd0) begin
            soclinux_bankmachine0_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine0_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine0_twtpcon_ready)) begin
            soclinux_bankmachine0_twtpcon_count <= (soclinux_bankmachine0_twtpcon_count - 1'd1);
            if ((soclinux_bankmachine0_twtpcon_count == 1'd1)) begin
                soclinux_bankmachine0_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine0_trccon_valid) begin
        soclinux_bankmachine0_trccon_count <= 1'd1;
        if (1'd0) begin
            soclinux_bankmachine0_trccon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine0_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine0_trccon_ready)) begin
            soclinux_bankmachine0_trccon_count <= (soclinux_bankmachine0_trccon_count - 1'd1);
            if ((soclinux_bankmachine0_trccon_count == 1'd1)) begin
                soclinux_bankmachine0_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine0_trascon_valid) begin
        soclinux_bankmachine0_trascon_count <= 1'd1;
        if (1'd0) begin
            soclinux_bankmachine0_trascon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine0_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine0_trascon_ready)) begin
            soclinux_bankmachine0_trascon_count <= (soclinux_bankmachine0_trascon_count - 1'd1);
            if ((soclinux_bankmachine0_trascon_count == 1'd1)) begin
                soclinux_bankmachine0_trascon_ready <= 1'd1;
            end
        end
    end
    builder_bankmachine0_state <= builder_bankmachine0_next_state;
    if (soclinux_bankmachine1_row_close) begin
        soclinux_bankmachine1_row_opened <= 1'd0;
    end else begin
        if (soclinux_bankmachine1_row_open) begin
            soclinux_bankmachine1_row_opened <= 1'd1;
            soclinux_bankmachine1_row <= soclinux_bankmachine1_source_source_payload_addr[22:10];
        end
    end
    if (((soclinux_bankmachine1_syncfifo1_we & soclinux_bankmachine1_syncfifo1_writable) & (~soclinux_bankmachine1_replace))) begin
        soclinux_bankmachine1_produce <= (soclinux_bankmachine1_produce + 1'd1);
    end
    if (soclinux_bankmachine1_do_read) begin
        soclinux_bankmachine1_consume <= (soclinux_bankmachine1_consume + 1'd1);
    end
    if (((soclinux_bankmachine1_syncfifo1_we & soclinux_bankmachine1_syncfifo1_writable) & (~soclinux_bankmachine1_replace))) begin
        if ((~soclinux_bankmachine1_do_read)) begin
            soclinux_bankmachine1_level <= (soclinux_bankmachine1_level + 1'd1);
        end
    end else begin
        if (soclinux_bankmachine1_do_read) begin
            soclinux_bankmachine1_level <= (soclinux_bankmachine1_level - 1'd1);
        end
    end
    if (((~soclinux_bankmachine1_pipe_valid_source_valid) | soclinux_bankmachine1_pipe_valid_source_ready)) begin
        soclinux_bankmachine1_pipe_valid_source_valid <= soclinux_bankmachine1_pipe_valid_sink_valid;
        soclinux_bankmachine1_pipe_valid_source_first <= soclinux_bankmachine1_pipe_valid_sink_first;
        soclinux_bankmachine1_pipe_valid_source_last <= soclinux_bankmachine1_pipe_valid_sink_last;
        soclinux_bankmachine1_pipe_valid_source_payload_we <= soclinux_bankmachine1_pipe_valid_sink_payload_we;
        soclinux_bankmachine1_pipe_valid_source_payload_addr <= soclinux_bankmachine1_pipe_valid_sink_payload_addr;
    end
    if (soclinux_bankmachine1_twtpcon_valid) begin
        soclinux_bankmachine1_twtpcon_count <= 2'd3;
        if (1'd0) begin
            soclinux_bankmachine1_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine1_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine1_twtpcon_ready)) begin
            soclinux_bankmachine1_twtpcon_count <= (soclinux_bankmachine1_twtpcon_count - 1'd1);
            if ((soclinux_bankmachine1_twtpcon_count == 1'd1)) begin
                soclinux_bankmachine1_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine1_trccon_valid) begin
        soclinux_bankmachine1_trccon_count <= 1'd1;
        if (1'd0) begin
            soclinux_bankmachine1_trccon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine1_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine1_trccon_ready)) begin
            soclinux_bankmachine1_trccon_count <= (soclinux_bankmachine1_trccon_count - 1'd1);
            if ((soclinux_bankmachine1_trccon_count == 1'd1)) begin
                soclinux_bankmachine1_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine1_trascon_valid) begin
        soclinux_bankmachine1_trascon_count <= 1'd1;
        if (1'd0) begin
            soclinux_bankmachine1_trascon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine1_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine1_trascon_ready)) begin
            soclinux_bankmachine1_trascon_count <= (soclinux_bankmachine1_trascon_count - 1'd1);
            if ((soclinux_bankmachine1_trascon_count == 1'd1)) begin
                soclinux_bankmachine1_trascon_ready <= 1'd1;
            end
        end
    end
    builder_bankmachine1_state <= builder_bankmachine1_next_state;
    if (soclinux_bankmachine2_row_close) begin
        soclinux_bankmachine2_row_opened <= 1'd0;
    end else begin
        if (soclinux_bankmachine2_row_open) begin
            soclinux_bankmachine2_row_opened <= 1'd1;
            soclinux_bankmachine2_row <= soclinux_bankmachine2_source_source_payload_addr[22:10];
        end
    end
    if (((soclinux_bankmachine2_syncfifo2_we & soclinux_bankmachine2_syncfifo2_writable) & (~soclinux_bankmachine2_replace))) begin
        soclinux_bankmachine2_produce <= (soclinux_bankmachine2_produce + 1'd1);
    end
    if (soclinux_bankmachine2_do_read) begin
        soclinux_bankmachine2_consume <= (soclinux_bankmachine2_consume + 1'd1);
    end
    if (((soclinux_bankmachine2_syncfifo2_we & soclinux_bankmachine2_syncfifo2_writable) & (~soclinux_bankmachine2_replace))) begin
        if ((~soclinux_bankmachine2_do_read)) begin
            soclinux_bankmachine2_level <= (soclinux_bankmachine2_level + 1'd1);
        end
    end else begin
        if (soclinux_bankmachine2_do_read) begin
            soclinux_bankmachine2_level <= (soclinux_bankmachine2_level - 1'd1);
        end
    end
    if (((~soclinux_bankmachine2_pipe_valid_source_valid) | soclinux_bankmachine2_pipe_valid_source_ready)) begin
        soclinux_bankmachine2_pipe_valid_source_valid <= soclinux_bankmachine2_pipe_valid_sink_valid;
        soclinux_bankmachine2_pipe_valid_source_first <= soclinux_bankmachine2_pipe_valid_sink_first;
        soclinux_bankmachine2_pipe_valid_source_last <= soclinux_bankmachine2_pipe_valid_sink_last;
        soclinux_bankmachine2_pipe_valid_source_payload_we <= soclinux_bankmachine2_pipe_valid_sink_payload_we;
        soclinux_bankmachine2_pipe_valid_source_payload_addr <= soclinux_bankmachine2_pipe_valid_sink_payload_addr;
    end
    if (soclinux_bankmachine2_twtpcon_valid) begin
        soclinux_bankmachine2_twtpcon_count <= 2'd3;
        if (1'd0) begin
            soclinux_bankmachine2_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine2_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine2_twtpcon_ready)) begin
            soclinux_bankmachine2_twtpcon_count <= (soclinux_bankmachine2_twtpcon_count - 1'd1);
            if ((soclinux_bankmachine2_twtpcon_count == 1'd1)) begin
                soclinux_bankmachine2_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine2_trccon_valid) begin
        soclinux_bankmachine2_trccon_count <= 1'd1;
        if (1'd0) begin
            soclinux_bankmachine2_trccon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine2_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine2_trccon_ready)) begin
            soclinux_bankmachine2_trccon_count <= (soclinux_bankmachine2_trccon_count - 1'd1);
            if ((soclinux_bankmachine2_trccon_count == 1'd1)) begin
                soclinux_bankmachine2_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine2_trascon_valid) begin
        soclinux_bankmachine2_trascon_count <= 1'd1;
        if (1'd0) begin
            soclinux_bankmachine2_trascon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine2_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine2_trascon_ready)) begin
            soclinux_bankmachine2_trascon_count <= (soclinux_bankmachine2_trascon_count - 1'd1);
            if ((soclinux_bankmachine2_trascon_count == 1'd1)) begin
                soclinux_bankmachine2_trascon_ready <= 1'd1;
            end
        end
    end
    builder_bankmachine2_state <= builder_bankmachine2_next_state;
    if (soclinux_bankmachine3_row_close) begin
        soclinux_bankmachine3_row_opened <= 1'd0;
    end else begin
        if (soclinux_bankmachine3_row_open) begin
            soclinux_bankmachine3_row_opened <= 1'd1;
            soclinux_bankmachine3_row <= soclinux_bankmachine3_source_source_payload_addr[22:10];
        end
    end
    if (((soclinux_bankmachine3_syncfifo3_we & soclinux_bankmachine3_syncfifo3_writable) & (~soclinux_bankmachine3_replace))) begin
        soclinux_bankmachine3_produce <= (soclinux_bankmachine3_produce + 1'd1);
    end
    if (soclinux_bankmachine3_do_read) begin
        soclinux_bankmachine3_consume <= (soclinux_bankmachine3_consume + 1'd1);
    end
    if (((soclinux_bankmachine3_syncfifo3_we & soclinux_bankmachine3_syncfifo3_writable) & (~soclinux_bankmachine3_replace))) begin
        if ((~soclinux_bankmachine3_do_read)) begin
            soclinux_bankmachine3_level <= (soclinux_bankmachine3_level + 1'd1);
        end
    end else begin
        if (soclinux_bankmachine3_do_read) begin
            soclinux_bankmachine3_level <= (soclinux_bankmachine3_level - 1'd1);
        end
    end
    if (((~soclinux_bankmachine3_pipe_valid_source_valid) | soclinux_bankmachine3_pipe_valid_source_ready)) begin
        soclinux_bankmachine3_pipe_valid_source_valid <= soclinux_bankmachine3_pipe_valid_sink_valid;
        soclinux_bankmachine3_pipe_valid_source_first <= soclinux_bankmachine3_pipe_valid_sink_first;
        soclinux_bankmachine3_pipe_valid_source_last <= soclinux_bankmachine3_pipe_valid_sink_last;
        soclinux_bankmachine3_pipe_valid_source_payload_we <= soclinux_bankmachine3_pipe_valid_sink_payload_we;
        soclinux_bankmachine3_pipe_valid_source_payload_addr <= soclinux_bankmachine3_pipe_valid_sink_payload_addr;
    end
    if (soclinux_bankmachine3_twtpcon_valid) begin
        soclinux_bankmachine3_twtpcon_count <= 2'd3;
        if (1'd0) begin
            soclinux_bankmachine3_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine3_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine3_twtpcon_ready)) begin
            soclinux_bankmachine3_twtpcon_count <= (soclinux_bankmachine3_twtpcon_count - 1'd1);
            if ((soclinux_bankmachine3_twtpcon_count == 1'd1)) begin
                soclinux_bankmachine3_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine3_trccon_valid) begin
        soclinux_bankmachine3_trccon_count <= 1'd1;
        if (1'd0) begin
            soclinux_bankmachine3_trccon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine3_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine3_trccon_ready)) begin
            soclinux_bankmachine3_trccon_count <= (soclinux_bankmachine3_trccon_count - 1'd1);
            if ((soclinux_bankmachine3_trccon_count == 1'd1)) begin
                soclinux_bankmachine3_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine3_trascon_valid) begin
        soclinux_bankmachine3_trascon_count <= 1'd1;
        if (1'd0) begin
            soclinux_bankmachine3_trascon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine3_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine3_trascon_ready)) begin
            soclinux_bankmachine3_trascon_count <= (soclinux_bankmachine3_trascon_count - 1'd1);
            if ((soclinux_bankmachine3_trascon_count == 1'd1)) begin
                soclinux_bankmachine3_trascon_ready <= 1'd1;
            end
        end
    end
    builder_bankmachine3_state <= builder_bankmachine3_next_state;
    if ((~soclinux_en0)) begin
        soclinux_time0 <= 5'd31;
    end else begin
        if ((~soclinux_max_time0)) begin
            soclinux_time0 <= (soclinux_time0 - 1'd1);
        end
    end
    if ((~soclinux_en1)) begin
        soclinux_time1 <= 4'd15;
    end else begin
        if ((~soclinux_max_time1)) begin
            soclinux_time1 <= (soclinux_time1 - 1'd1);
        end
    end
    if (soclinux_choose_cmd_ce) begin
        case (soclinux_choose_cmd_grant)
            1'd0: begin
                if (soclinux_choose_cmd_request[1]) begin
                    soclinux_choose_cmd_grant <= 1'd1;
                end else begin
                    if (soclinux_choose_cmd_request[2]) begin
                        soclinux_choose_cmd_grant <= 2'd2;
                    end else begin
                        if (soclinux_choose_cmd_request[3]) begin
                            soclinux_choose_cmd_grant <= 2'd3;
                        end
                    end
                end
            end
            1'd1: begin
                if (soclinux_choose_cmd_request[2]) begin
                    soclinux_choose_cmd_grant <= 2'd2;
                end else begin
                    if (soclinux_choose_cmd_request[3]) begin
                        soclinux_choose_cmd_grant <= 2'd3;
                    end else begin
                        if (soclinux_choose_cmd_request[0]) begin
                            soclinux_choose_cmd_grant <= 1'd0;
                        end
                    end
                end
            end
            2'd2: begin
                if (soclinux_choose_cmd_request[3]) begin
                    soclinux_choose_cmd_grant <= 2'd3;
                end else begin
                    if (soclinux_choose_cmd_request[0]) begin
                        soclinux_choose_cmd_grant <= 1'd0;
                    end else begin
                        if (soclinux_choose_cmd_request[1]) begin
                            soclinux_choose_cmd_grant <= 1'd1;
                        end
                    end
                end
            end
            2'd3: begin
                if (soclinux_choose_cmd_request[0]) begin
                    soclinux_choose_cmd_grant <= 1'd0;
                end else begin
                    if (soclinux_choose_cmd_request[1]) begin
                        soclinux_choose_cmd_grant <= 1'd1;
                    end else begin
                        if (soclinux_choose_cmd_request[2]) begin
                            soclinux_choose_cmd_grant <= 2'd2;
                        end
                    end
                end
            end
        endcase
    end
    if (soclinux_choose_req_ce) begin
        case (soclinux_choose_req_grant)
            1'd0: begin
                if (soclinux_choose_req_request[1]) begin
                    soclinux_choose_req_grant <= 1'd1;
                end else begin
                    if (soclinux_choose_req_request[2]) begin
                        soclinux_choose_req_grant <= 2'd2;
                    end else begin
                        if (soclinux_choose_req_request[3]) begin
                            soclinux_choose_req_grant <= 2'd3;
                        end
                    end
                end
            end
            1'd1: begin
                if (soclinux_choose_req_request[2]) begin
                    soclinux_choose_req_grant <= 2'd2;
                end else begin
                    if (soclinux_choose_req_request[3]) begin
                        soclinux_choose_req_grant <= 2'd3;
                    end else begin
                        if (soclinux_choose_req_request[0]) begin
                            soclinux_choose_req_grant <= 1'd0;
                        end
                    end
                end
            end
            2'd2: begin
                if (soclinux_choose_req_request[3]) begin
                    soclinux_choose_req_grant <= 2'd3;
                end else begin
                    if (soclinux_choose_req_request[0]) begin
                        soclinux_choose_req_grant <= 1'd0;
                    end else begin
                        if (soclinux_choose_req_request[1]) begin
                            soclinux_choose_req_grant <= 1'd1;
                        end
                    end
                end
            end
            2'd3: begin
                if (soclinux_choose_req_request[0]) begin
                    soclinux_choose_req_grant <= 1'd0;
                end else begin
                    if (soclinux_choose_req_request[1]) begin
                        soclinux_choose_req_grant <= 1'd1;
                    end else begin
                        if (soclinux_choose_req_request[2]) begin
                            soclinux_choose_req_grant <= 2'd2;
                        end
                    end
                end
            end
        endcase
    end
    soclinux_dfi_p0_cs_n <= 1'd0;
    soclinux_dfi_p0_bank <= builder_sync_rhs_self0;
    soclinux_dfi_p0_address <= builder_sync_rhs_self1;
    soclinux_dfi_p0_cas_n <= (~builder_sync_rhs_self2);
    soclinux_dfi_p0_ras_n <= (~builder_sync_rhs_self3);
    soclinux_dfi_p0_we_n <= (~builder_sync_rhs_self4);
    soclinux_dfi_p0_rddata_en <= builder_sync_rhs_self5;
    soclinux_dfi_p0_wrdata_en <= builder_sync_rhs_self6;
    if (soclinux_trrdcon_valid) begin
        soclinux_trrdcon_count <= 1'd0;
        if (1'd1) begin
            soclinux_trrdcon_ready <= 1'd1;
        end else begin
            soclinux_trrdcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_trrdcon_ready)) begin
            soclinux_trrdcon_count <= (soclinux_trrdcon_count - 1'd1);
            if ((soclinux_trrdcon_count == 1'd1)) begin
                soclinux_trrdcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_tccdcon_valid) begin
        soclinux_tccdcon_count <= 1'd0;
        if (1'd1) begin
            soclinux_tccdcon_ready <= 1'd1;
        end else begin
            soclinux_tccdcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_tccdcon_ready)) begin
            soclinux_tccdcon_count <= (soclinux_tccdcon_count - 1'd1);
            if ((soclinux_tccdcon_count == 1'd1)) begin
                soclinux_tccdcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_twtrcon_valid) begin
        soclinux_twtrcon_count <= 3'd4;
        if (1'd0) begin
            soclinux_twtrcon_ready <= 1'd1;
        end else begin
            soclinux_twtrcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_twtrcon_ready)) begin
            soclinux_twtrcon_count <= (soclinux_twtrcon_count - 1'd1);
            if ((soclinux_twtrcon_count == 1'd1)) begin
                soclinux_twtrcon_ready <= 1'd1;
            end
        end
    end
    builder_multiplexer_state <= builder_multiplexer_next_state;
    builder_new_master_wdata_ready0 <= ((((1'd0 | ((builder_roundrobin0_grant == 1'd0) & soclinux_interface_bank0_wdata_ready)) | ((builder_roundrobin1_grant == 1'd0) & soclinux_interface_bank1_wdata_ready)) | ((builder_roundrobin2_grant == 1'd0) & soclinux_interface_bank2_wdata_ready)) | ((builder_roundrobin3_grant == 1'd0) & soclinux_interface_bank3_wdata_ready));
    builder_new_master_wdata_ready1 <= ((((1'd0 | ((builder_roundrobin0_grant == 1'd1) & soclinux_interface_bank0_wdata_ready)) | ((builder_roundrobin1_grant == 1'd1) & soclinux_interface_bank1_wdata_ready)) | ((builder_roundrobin2_grant == 1'd1) & soclinux_interface_bank2_wdata_ready)) | ((builder_roundrobin3_grant == 1'd1) & soclinux_interface_bank3_wdata_ready));
    builder_new_master_wdata_ready2 <= ((((1'd0 | ((builder_roundrobin0_grant == 2'd2) & soclinux_interface_bank0_wdata_ready)) | ((builder_roundrobin1_grant == 2'd2) & soclinux_interface_bank1_wdata_ready)) | ((builder_roundrobin2_grant == 2'd2) & soclinux_interface_bank2_wdata_ready)) | ((builder_roundrobin3_grant == 2'd2) & soclinux_interface_bank3_wdata_ready));
    builder_new_master_rdata_valid0 <= ((((1'd0 | ((builder_roundrobin0_grant == 1'd0) & soclinux_interface_bank0_rdata_valid)) | ((builder_roundrobin1_grant == 1'd0) & soclinux_interface_bank1_rdata_valid)) | ((builder_roundrobin2_grant == 1'd0) & soclinux_interface_bank2_rdata_valid)) | ((builder_roundrobin3_grant == 1'd0) & soclinux_interface_bank3_rdata_valid));
    builder_new_master_rdata_valid1 <= builder_new_master_rdata_valid0;
    builder_new_master_rdata_valid2 <= builder_new_master_rdata_valid1;
    builder_new_master_rdata_valid3 <= builder_new_master_rdata_valid2;
    builder_new_master_rdata_valid4 <= ((((1'd0 | ((builder_roundrobin0_grant == 1'd1) & soclinux_interface_bank0_rdata_valid)) | ((builder_roundrobin1_grant == 1'd1) & soclinux_interface_bank1_rdata_valid)) | ((builder_roundrobin2_grant == 1'd1) & soclinux_interface_bank2_rdata_valid)) | ((builder_roundrobin3_grant == 1'd1) & soclinux_interface_bank3_rdata_valid));
    builder_new_master_rdata_valid5 <= builder_new_master_rdata_valid4;
    builder_new_master_rdata_valid6 <= builder_new_master_rdata_valid5;
    builder_new_master_rdata_valid7 <= builder_new_master_rdata_valid6;
    builder_new_master_rdata_valid8 <= ((((1'd0 | ((builder_roundrobin0_grant == 2'd2) & soclinux_interface_bank0_rdata_valid)) | ((builder_roundrobin1_grant == 2'd2) & soclinux_interface_bank1_rdata_valid)) | ((builder_roundrobin2_grant == 2'd2) & soclinux_interface_bank2_rdata_valid)) | ((builder_roundrobin3_grant == 2'd2) & soclinux_interface_bank3_rdata_valid));
    builder_new_master_rdata_valid9 <= builder_new_master_rdata_valid8;
    builder_new_master_rdata_valid10 <= builder_new_master_rdata_valid9;
    builder_new_master_rdata_valid11 <= builder_new_master_rdata_valid10;
    if (builder_roundrobin0_ce) begin
        case (builder_roundrobin0_grant)
            1'd0: begin
                if (builder_roundrobin0_request[1]) begin
                    builder_roundrobin0_grant <= 1'd1;
                end else begin
                    if (builder_roundrobin0_request[2]) begin
                        builder_roundrobin0_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (builder_roundrobin0_request[2]) begin
                    builder_roundrobin0_grant <= 2'd2;
                end else begin
                    if (builder_roundrobin0_request[0]) begin
                        builder_roundrobin0_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (builder_roundrobin0_request[0]) begin
                    builder_roundrobin0_grant <= 1'd0;
                end else begin
                    if (builder_roundrobin0_request[1]) begin
                        builder_roundrobin0_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if (builder_roundrobin1_ce) begin
        case (builder_roundrobin1_grant)
            1'd0: begin
                if (builder_roundrobin1_request[1]) begin
                    builder_roundrobin1_grant <= 1'd1;
                end else begin
                    if (builder_roundrobin1_request[2]) begin
                        builder_roundrobin1_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (builder_roundrobin1_request[2]) begin
                    builder_roundrobin1_grant <= 2'd2;
                end else begin
                    if (builder_roundrobin1_request[0]) begin
                        builder_roundrobin1_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (builder_roundrobin1_request[0]) begin
                    builder_roundrobin1_grant <= 1'd0;
                end else begin
                    if (builder_roundrobin1_request[1]) begin
                        builder_roundrobin1_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if (builder_roundrobin2_ce) begin
        case (builder_roundrobin2_grant)
            1'd0: begin
                if (builder_roundrobin2_request[1]) begin
                    builder_roundrobin2_grant <= 1'd1;
                end else begin
                    if (builder_roundrobin2_request[2]) begin
                        builder_roundrobin2_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (builder_roundrobin2_request[2]) begin
                    builder_roundrobin2_grant <= 2'd2;
                end else begin
                    if (builder_roundrobin2_request[0]) begin
                        builder_roundrobin2_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (builder_roundrobin2_request[0]) begin
                    builder_roundrobin2_grant <= 1'd0;
                end else begin
                    if (builder_roundrobin2_request[1]) begin
                        builder_roundrobin2_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if (builder_roundrobin3_ce) begin
        case (builder_roundrobin3_grant)
            1'd0: begin
                if (builder_roundrobin3_request[1]) begin
                    builder_roundrobin3_grant <= 1'd1;
                end else begin
                    if (builder_roundrobin3_request[2]) begin
                        builder_roundrobin3_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (builder_roundrobin3_request[2]) begin
                    builder_roundrobin3_grant <= 2'd2;
                end else begin
                    if (builder_roundrobin3_request[0]) begin
                        builder_roundrobin3_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (builder_roundrobin3_request[0]) begin
                    builder_roundrobin3_grant <= 1'd0;
                end else begin
                    if (builder_roundrobin3_request[1]) begin
                        builder_roundrobin3_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if ((((soclinux_litedram_wb_stb & soclinux_litedram_wb_cyc) & soclinux_litedram_wb_ack) | soclinux_skip)) begin
        soclinux_count0 <= (soclinux_count0 + 1'd1);
    end
    if ((soclinux_wb_sdram_ack | (~soclinux_wb_sdram_cyc))) begin
        soclinux_count0 <= 1'd0;
    end
    if ((soclinux_litedram_wb_ack | soclinux_skip)) begin
        soclinux_dat_r <= soclinux_wb_sdram_dat_r;
    end
    builder_litedramwishbone2native_state <= builder_litedramwishbone2native_next_state;
    if (soclinux_aborted_litedramwishbone2native_next_value_ce) begin
        soclinux_aborted <= soclinux_aborted_litedramwishbone2native_next_value;
    end
    soclinux_clk_divider1 <= (soclinux_clk_divider1 + 1'd1);
    if (soclinux_clk_rise) begin
        spisdcard_clk <= soclinux_clk_enable;
    end else begin
        if (soclinux_clk_fall) begin
            soclinux_clk_divider1 <= 1'd0;
            spisdcard_clk <= 1'd0;
        end
    end
    spisdcard_cs_n <= (~(soclinux_cs & (soclinux_xfer_enable | (soclinux_cs_mode == 1'd1))));
    if (soclinux_mosi_latch) begin
        soclinux_mosi_data <= soclinux_mosi;
        soclinux_mosi_sel <= 3'd7;
    end else begin
        if (soclinux_clk_fall) begin
            if (soclinux_xfer_enable) begin
                spisdcard_mosi <= builder_sync_f_self;
            end
            soclinux_mosi_sel <= (soclinux_mosi_sel - 1'd1);
        end
    end
    if (soclinux_clk_rise) begin
        if (soclinux_loopback) begin
            soclinux_miso_data <= {soclinux_miso_data, spisdcard_mosi};
        end else begin
            soclinux_miso_data <= {soclinux_miso_data, spisdcard_miso};
        end
    end
    if (soclinux_miso_latch) begin
        soclinux_miso <= soclinux_miso_data;
    end
    builder_spimaster_state <= builder_spimaster_next_state;
    if (soclinux_count1_spimaster_next_value_ce) begin
        soclinux_count1 <= soclinux_count1_spimaster_next_value;
    end
    builder_wishbone2csr_state <= builder_wishbone2csr_next_state;
    if (builder_interface1_dat_w_wishbone2csr_next_value_ce0) begin
        builder_interface1_dat_w <= builder_interface1_dat_w_wishbone2csr_next_value0;
    end
    if (builder_interface1_adr_wishbone2csr_next_value_ce1) begin
        builder_interface1_adr <= builder_interface1_adr_wishbone2csr_next_value1;
    end
    if (builder_interface1_re_wishbone2csr_next_value_ce2) begin
        builder_interface1_re <= builder_interface1_re_wishbone2csr_next_value2;
    end
    if (builder_interface1_we_wishbone2csr_next_value_ce3) begin
        builder_interface1_we <= builder_interface1_we_wishbone2csr_next_value3;
    end
    builder_csr_bankarray_interface0_bank_bus_dat_r <= 1'd0;
    if (builder_csr_bankarray_csrbank0_sel) begin
        case (builder_csr_bankarray_interface0_bank_bus_adr[8:0])
            1'd0: begin
                builder_csr_bankarray_interface0_bank_bus_dat_r <= builder_csr_bankarray_csrbank0_reset0_w;
            end
            1'd1: begin
                builder_csr_bankarray_interface0_bank_bus_dat_r <= builder_csr_bankarray_csrbank0_scratch0_w;
            end
            2'd2: begin
                builder_csr_bankarray_interface0_bank_bus_dat_r <= builder_csr_bankarray_csrbank0_bus_errors_w;
            end
        endcase
    end
    if (builder_csr_bankarray_csrbank0_reset0_re) begin
        soclinux_reset_storage <= builder_csr_bankarray_csrbank0_reset0_r;
    end
    soclinux_reset_re <= builder_csr_bankarray_csrbank0_reset0_re;
    if (builder_csr_bankarray_csrbank0_scratch0_re) begin
        soclinux_scratch_storage <= builder_csr_bankarray_csrbank0_scratch0_r;
    end
    soclinux_scratch_re <= builder_csr_bankarray_csrbank0_scratch0_re;
    soclinux_bus_errors_re <= builder_csr_bankarray_csrbank0_bus_errors_re;
    builder_csr_bankarray_sel_r <= builder_csr_bankarray_sel;
    builder_csr_bankarray_interface1_bank_bus_dat_r <= 1'd0;
    if (builder_csr_bankarray_csrbank1_sel) begin
        case (builder_csr_bankarray_interface1_bank_bus_adr[8:0])
            1'd0: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_out0_w;
            end
        endcase
    end
    if (builder_csr_bankarray_csrbank1_out0_re) begin
        leds_storage <= builder_csr_bankarray_csrbank1_out0_r;
    end
    leds_re <= builder_csr_bankarray_csrbank1_out0_re;
    builder_csr_bankarray_interface2_bank_bus_dat_r <= 1'd0;
    if (builder_csr_bankarray_csrbank2_sel) begin
        case (builder_csr_bankarray_interface2_bank_bus_adr[8:0])
            1'd0: begin
                builder_csr_bankarray_interface2_bank_bus_dat_r <= builder_csr_bankarray_csrbank2_dfii_control0_w;
            end
            1'd1: begin
                builder_csr_bankarray_interface2_bank_bus_dat_r <= builder_csr_bankarray_csrbank2_dfii_pi0_command0_w;
            end
            2'd2: begin
                builder_csr_bankarray_interface2_bank_bus_dat_r <= soclinux_command_issue_w;
            end
            2'd3: begin
                builder_csr_bankarray_interface2_bank_bus_dat_r <= builder_csr_bankarray_csrbank2_dfii_pi0_address0_w;
            end
            3'd4: begin
                builder_csr_bankarray_interface2_bank_bus_dat_r <= builder_csr_bankarray_csrbank2_dfii_pi0_baddress0_w;
            end
            3'd5: begin
                builder_csr_bankarray_interface2_bank_bus_dat_r <= builder_csr_bankarray_csrbank2_dfii_pi0_wrdata0_w;
            end
            3'd6: begin
                builder_csr_bankarray_interface2_bank_bus_dat_r <= builder_csr_bankarray_csrbank2_dfii_pi0_rddata_w;
            end
        endcase
    end
    if (builder_csr_bankarray_csrbank2_dfii_control0_re) begin
        soclinux_storage0 <= builder_csr_bankarray_csrbank2_dfii_control0_r;
    end
    soclinux_re0 <= builder_csr_bankarray_csrbank2_dfii_control0_re;
    if (builder_csr_bankarray_csrbank2_dfii_pi0_command0_re) begin
        soclinux_command_storage <= builder_csr_bankarray_csrbank2_dfii_pi0_command0_r;
    end
    soclinux_command_re <= builder_csr_bankarray_csrbank2_dfii_pi0_command0_re;
    if (builder_csr_bankarray_csrbank2_dfii_pi0_address0_re) begin
        soclinux_address_storage <= builder_csr_bankarray_csrbank2_dfii_pi0_address0_r;
    end
    soclinux_address_re <= builder_csr_bankarray_csrbank2_dfii_pi0_address0_re;
    if (builder_csr_bankarray_csrbank2_dfii_pi0_baddress0_re) begin
        soclinux_baddress_storage <= builder_csr_bankarray_csrbank2_dfii_pi0_baddress0_r;
    end
    soclinux_baddress_re <= builder_csr_bankarray_csrbank2_dfii_pi0_baddress0_re;
    if (builder_csr_bankarray_csrbank2_dfii_pi0_wrdata0_re) begin
        soclinux_wrdata_storage <= builder_csr_bankarray_csrbank2_dfii_pi0_wrdata0_r;
    end
    soclinux_wrdata_re <= builder_csr_bankarray_csrbank2_dfii_pi0_wrdata0_re;
    soclinux_rddata_re <= builder_csr_bankarray_csrbank2_dfii_pi0_rddata_re;
    builder_csr_bankarray_interface3_bank_bus_dat_r <= 1'd0;
    if (builder_csr_bankarray_csrbank3_sel) begin
        case (builder_csr_bankarray_interface3_bank_bus_adr[8:0])
            1'd0: begin
                builder_csr_bankarray_interface3_bank_bus_dat_r <= builder_csr_bankarray_csrbank3_control0_w;
            end
            1'd1: begin
                builder_csr_bankarray_interface3_bank_bus_dat_r <= builder_csr_bankarray_csrbank3_status_w;
            end
            2'd2: begin
                builder_csr_bankarray_interface3_bank_bus_dat_r <= builder_csr_bankarray_csrbank3_mosi0_w;
            end
            2'd3: begin
                builder_csr_bankarray_interface3_bank_bus_dat_r <= builder_csr_bankarray_csrbank3_miso_w;
            end
            3'd4: begin
                builder_csr_bankarray_interface3_bank_bus_dat_r <= builder_csr_bankarray_csrbank3_cs0_w;
            end
            3'd5: begin
                builder_csr_bankarray_interface3_bank_bus_dat_r <= builder_csr_bankarray_csrbank3_loopback0_w;
            end
            3'd6: begin
                builder_csr_bankarray_interface3_bank_bus_dat_r <= builder_csr_bankarray_csrbank3_clk_divider0_w;
            end
        endcase
    end
    if (builder_csr_bankarray_csrbank3_control0_re) begin
        soclinux_control_storage <= builder_csr_bankarray_csrbank3_control0_r;
    end
    soclinux_control_re <= builder_csr_bankarray_csrbank3_control0_re;
    soclinux_status_re <= builder_csr_bankarray_csrbank3_status_re;
    if (builder_csr_bankarray_csrbank3_mosi0_re) begin
        soclinux_mosi_storage <= builder_csr_bankarray_csrbank3_mosi0_r;
    end
    soclinux_mosi_re <= builder_csr_bankarray_csrbank3_mosi0_re;
    soclinux_miso_re <= builder_csr_bankarray_csrbank3_miso_re;
    if (builder_csr_bankarray_csrbank3_cs0_re) begin
        soclinux_cs_storage <= builder_csr_bankarray_csrbank3_cs0_r;
    end
    soclinux_cs_re <= builder_csr_bankarray_csrbank3_cs0_re;
    if (builder_csr_bankarray_csrbank3_loopback0_re) begin
        soclinux_loopback_storage <= builder_csr_bankarray_csrbank3_loopback0_r;
    end
    soclinux_loopback_re <= builder_csr_bankarray_csrbank3_loopback0_re;
    if (builder_csr_bankarray_csrbank3_clk_divider0_re) begin
        soclinux_storage1 <= builder_csr_bankarray_csrbank3_clk_divider0_r;
    end
    soclinux_re1 <= builder_csr_bankarray_csrbank3_clk_divider0_re;
    builder_csr_bankarray_interface4_bank_bus_dat_r <= 1'd0;
    if (builder_csr_bankarray_csrbank4_sel) begin
        case (builder_csr_bankarray_interface4_bank_bus_adr[8:0])
            1'd0: begin
                builder_csr_bankarray_interface4_bank_bus_dat_r <= builder_csr_bankarray_csrbank4_load0_w;
            end
            1'd1: begin
                builder_csr_bankarray_interface4_bank_bus_dat_r <= builder_csr_bankarray_csrbank4_reload0_w;
            end
            2'd2: begin
                builder_csr_bankarray_interface4_bank_bus_dat_r <= builder_csr_bankarray_csrbank4_en0_w;
            end
            2'd3: begin
                builder_csr_bankarray_interface4_bank_bus_dat_r <= builder_csr_bankarray_csrbank4_update_value0_w;
            end
            3'd4: begin
                builder_csr_bankarray_interface4_bank_bus_dat_r <= builder_csr_bankarray_csrbank4_value_w;
            end
            3'd5: begin
                builder_csr_bankarray_interface4_bank_bus_dat_r <= builder_csr_bankarray_csrbank4_ev_status_w;
            end
            3'd6: begin
                builder_csr_bankarray_interface4_bank_bus_dat_r <= builder_csr_bankarray_csrbank4_ev_pending_w;
            end
            3'd7: begin
                builder_csr_bankarray_interface4_bank_bus_dat_r <= builder_csr_bankarray_csrbank4_ev_enable0_w;
            end
        endcase
    end
    if (builder_csr_bankarray_csrbank4_load0_re) begin
        soclinux_timer_load_storage <= builder_csr_bankarray_csrbank4_load0_r;
    end
    soclinux_timer_load_re <= builder_csr_bankarray_csrbank4_load0_re;
    if (builder_csr_bankarray_csrbank4_reload0_re) begin
        soclinux_timer_reload_storage <= builder_csr_bankarray_csrbank4_reload0_r;
    end
    soclinux_timer_reload_re <= builder_csr_bankarray_csrbank4_reload0_re;
    if (builder_csr_bankarray_csrbank4_en0_re) begin
        soclinux_timer_en_storage <= builder_csr_bankarray_csrbank4_en0_r;
    end
    soclinux_timer_en_re <= builder_csr_bankarray_csrbank4_en0_re;
    if (builder_csr_bankarray_csrbank4_update_value0_re) begin
        soclinux_timer_update_value_storage <= builder_csr_bankarray_csrbank4_update_value0_r;
    end
    soclinux_timer_update_value_re <= builder_csr_bankarray_csrbank4_update_value0_re;
    soclinux_timer_value_re <= builder_csr_bankarray_csrbank4_value_re;
    soclinux_timer_status_re <= builder_csr_bankarray_csrbank4_ev_status_re;
    if (builder_csr_bankarray_csrbank4_ev_pending_re) begin
        soclinux_timer_pending_r <= builder_csr_bankarray_csrbank4_ev_pending_r;
    end
    soclinux_timer_pending_re <= builder_csr_bankarray_csrbank4_ev_pending_re;
    if (builder_csr_bankarray_csrbank4_ev_enable0_re) begin
        soclinux_timer_enable_storage <= builder_csr_bankarray_csrbank4_ev_enable0_r;
    end
    soclinux_timer_enable_re <= builder_csr_bankarray_csrbank4_ev_enable0_re;
    builder_csr_bankarray_interface5_bank_bus_dat_r <= 1'd0;
    if (builder_csr_bankarray_csrbank5_sel) begin
        case (builder_csr_bankarray_interface5_bank_bus_adr[8:0])
            1'd0: begin
                builder_csr_bankarray_interface5_bank_bus_dat_r <= soclinux_uart_rxtx_w;
            end
            1'd1: begin
                builder_csr_bankarray_interface5_bank_bus_dat_r <= builder_csr_bankarray_csrbank5_txfull_w;
            end
            2'd2: begin
                builder_csr_bankarray_interface5_bank_bus_dat_r <= builder_csr_bankarray_csrbank5_rxempty_w;
            end
            2'd3: begin
                builder_csr_bankarray_interface5_bank_bus_dat_r <= builder_csr_bankarray_csrbank5_ev_status_w;
            end
            3'd4: begin
                builder_csr_bankarray_interface5_bank_bus_dat_r <= builder_csr_bankarray_csrbank5_ev_pending_w;
            end
            3'd5: begin
                builder_csr_bankarray_interface5_bank_bus_dat_r <= builder_csr_bankarray_csrbank5_ev_enable0_w;
            end
            3'd6: begin
                builder_csr_bankarray_interface5_bank_bus_dat_r <= builder_csr_bankarray_csrbank5_txempty_w;
            end
            3'd7: begin
                builder_csr_bankarray_interface5_bank_bus_dat_r <= builder_csr_bankarray_csrbank5_rxfull_w;
            end
        endcase
    end
    soclinux_uart_txfull_re <= builder_csr_bankarray_csrbank5_txfull_re;
    soclinux_uart_rxempty_re <= builder_csr_bankarray_csrbank5_rxempty_re;
    soclinux_uart_status_re <= builder_csr_bankarray_csrbank5_ev_status_re;
    if (builder_csr_bankarray_csrbank5_ev_pending_re) begin
        soclinux_uart_pending_r <= builder_csr_bankarray_csrbank5_ev_pending_r;
    end
    soclinux_uart_pending_re <= builder_csr_bankarray_csrbank5_ev_pending_re;
    if (builder_csr_bankarray_csrbank5_ev_enable0_re) begin
        soclinux_uart_enable_storage <= builder_csr_bankarray_csrbank5_ev_enable0_r;
    end
    soclinux_uart_enable_re <= builder_csr_bankarray_csrbank5_ev_enable0_re;
    soclinux_uart_txempty_re <= builder_csr_bankarray_csrbank5_txempty_re;
    soclinux_uart_rxfull_re <= builder_csr_bankarray_csrbank5_rxfull_re;
    if (sys_rst) begin
        soclinux_reset_storage <= 2'd0;
        soclinux_reset_re <= 1'd0;
        soclinux_scratch_storage <= 32'd305419896;
        soclinux_scratch_re <= 1'd0;
        soclinux_bus_errors_re <= 1'd0;
        soclinux_bus_errors <= 32'd0;
        soclinux_soclinux_ram_bus_ack <= 1'd0;
        soclinux_ram_bus_ram_bus_ack <= 1'd0;
        serial_tx <= 1'd1;
        soclinux_tx_tick <= 1'd0;
        soclinux_rx_tick <= 1'd0;
        soclinux_rx_rx_d <= 1'd0;
        soclinux_uart_txfull_re <= 1'd0;
        soclinux_uart_rxempty_re <= 1'd0;
        soclinux_uart_tx_pending <= 1'd0;
        soclinux_uart_tx_trigger_d <= 1'd0;
        soclinux_uart_rx_pending <= 1'd0;
        soclinux_uart_rx_trigger_d <= 1'd0;
        soclinux_uart_status_re <= 1'd0;
        soclinux_uart_pending_re <= 1'd0;
        soclinux_uart_pending_r <= 2'd0;
        soclinux_uart_enable_storage <= 2'd0;
        soclinux_uart_enable_re <= 1'd0;
        soclinux_uart_txempty_re <= 1'd0;
        soclinux_uart_rxfull_re <= 1'd0;
        soclinux_uart_tx_fifo_readable <= 1'd0;
        soclinux_uart_tx_fifo_level0 <= 5'd0;
        soclinux_uart_tx_fifo_produce <= 4'd0;
        soclinux_uart_tx_fifo_consume <= 4'd0;
        soclinux_uart_rx_fifo_readable <= 1'd0;
        soclinux_uart_rx_fifo_level0 <= 5'd0;
        soclinux_uart_rx_fifo_produce <= 4'd0;
        soclinux_uart_rx_fifo_consume <= 4'd0;
        soclinux_timer_load_storage <= 32'd0;
        soclinux_timer_load_re <= 1'd0;
        soclinux_timer_reload_storage <= 32'd0;
        soclinux_timer_reload_re <= 1'd0;
        soclinux_timer_en_storage <= 1'd0;
        soclinux_timer_en_re <= 1'd0;
        soclinux_timer_update_value_storage <= 1'd0;
        soclinux_timer_update_value_re <= 1'd0;
        soclinux_timer_value_status <= 32'd0;
        soclinux_timer_value_re <= 1'd0;
        soclinux_timer_zero_pending <= 1'd0;
        soclinux_timer_zero_trigger_d <= 1'd0;
        soclinux_timer_status_re <= 1'd0;
        soclinux_timer_pending_re <= 1'd0;
        soclinux_timer_pending_r <= 1'd0;
        soclinux_timer_enable_storage <= 1'd0;
        soclinux_timer_enable_re <= 1'd0;
        soclinux_timer_value <= 32'd0;
        leds_storage <= 1'd0;
        leds_re <= 1'd0;
        leds_chaser <= 1'd0;
        leds_mode <= 1'd0;
        leds_count <= 24'd12000000;
        sdrphy_dfi_p0_rddata_valid <= 1'd0;
        sdrphy_rddata_en <= 3'd0;
        soclinux_storage0 <= 4'd1;
        soclinux_re0 <= 1'd0;
        soclinux_command_storage <= 8'd0;
        soclinux_command_re <= 1'd0;
        soclinux_address_re <= 1'd0;
        soclinux_baddress_re <= 1'd0;
        soclinux_wrdata_re <= 1'd0;
        soclinux_rddata_status <= 16'd0;
        soclinux_rddata_re <= 1'd0;
        soclinux_dfi_p0_address <= 13'd0;
        soclinux_dfi_p0_bank <= 2'd0;
        soclinux_dfi_p0_cas_n <= 1'd1;
        soclinux_dfi_p0_cs_n <= 1'd1;
        soclinux_dfi_p0_ras_n <= 1'd1;
        soclinux_dfi_p0_we_n <= 1'd1;
        soclinux_dfi_p0_wrdata_en <= 1'd0;
        soclinux_dfi_p0_rddata_en <= 1'd0;
        soclinux_cmd_payload_a <= 13'd0;
        soclinux_cmd_payload_ba <= 2'd0;
        soclinux_cmd_payload_cas <= 1'd0;
        soclinux_cmd_payload_ras <= 1'd0;
        soclinux_cmd_payload_we <= 1'd0;
        soclinux_timer_count1 <= 8'd187;
        soclinux_postponer_req_o <= 1'd0;
        soclinux_postponer_count <= 1'd0;
        soclinux_sequencer_done1 <= 1'd0;
        soclinux_sequencer_trigger <= 2'd0;
        soclinux_sequencer_count <= 1'd0;
        soclinux_bankmachine0_level <= 4'd0;
        soclinux_bankmachine0_produce <= 3'd0;
        soclinux_bankmachine0_consume <= 3'd0;
        soclinux_bankmachine0_pipe_valid_source_valid <= 1'd0;
        soclinux_bankmachine0_pipe_valid_source_payload_we <= 1'd0;
        soclinux_bankmachine0_pipe_valid_source_payload_addr <= 23'd0;
        soclinux_bankmachine0_row <= 13'd0;
        soclinux_bankmachine0_row_opened <= 1'd0;
        soclinux_bankmachine0_twtpcon_ready <= 1'd0;
        soclinux_bankmachine0_twtpcon_count <= 2'd0;
        soclinux_bankmachine0_trccon_ready <= 1'd0;
        soclinux_bankmachine0_trccon_count <= 1'd0;
        soclinux_bankmachine0_trascon_ready <= 1'd0;
        soclinux_bankmachine0_trascon_count <= 1'd0;
        soclinux_bankmachine1_level <= 4'd0;
        soclinux_bankmachine1_produce <= 3'd0;
        soclinux_bankmachine1_consume <= 3'd0;
        soclinux_bankmachine1_pipe_valid_source_valid <= 1'd0;
        soclinux_bankmachine1_pipe_valid_source_payload_we <= 1'd0;
        soclinux_bankmachine1_pipe_valid_source_payload_addr <= 23'd0;
        soclinux_bankmachine1_row <= 13'd0;
        soclinux_bankmachine1_row_opened <= 1'd0;
        soclinux_bankmachine1_twtpcon_ready <= 1'd0;
        soclinux_bankmachine1_twtpcon_count <= 2'd0;
        soclinux_bankmachine1_trccon_ready <= 1'd0;
        soclinux_bankmachine1_trccon_count <= 1'd0;
        soclinux_bankmachine1_trascon_ready <= 1'd0;
        soclinux_bankmachine1_trascon_count <= 1'd0;
        soclinux_bankmachine2_level <= 4'd0;
        soclinux_bankmachine2_produce <= 3'd0;
        soclinux_bankmachine2_consume <= 3'd0;
        soclinux_bankmachine2_pipe_valid_source_valid <= 1'd0;
        soclinux_bankmachine2_pipe_valid_source_payload_we <= 1'd0;
        soclinux_bankmachine2_pipe_valid_source_payload_addr <= 23'd0;
        soclinux_bankmachine2_row <= 13'd0;
        soclinux_bankmachine2_row_opened <= 1'd0;
        soclinux_bankmachine2_twtpcon_ready <= 1'd0;
        soclinux_bankmachine2_twtpcon_count <= 2'd0;
        soclinux_bankmachine2_trccon_ready <= 1'd0;
        soclinux_bankmachine2_trccon_count <= 1'd0;
        soclinux_bankmachine2_trascon_ready <= 1'd0;
        soclinux_bankmachine2_trascon_count <= 1'd0;
        soclinux_bankmachine3_level <= 4'd0;
        soclinux_bankmachine3_produce <= 3'd0;
        soclinux_bankmachine3_consume <= 3'd0;
        soclinux_bankmachine3_pipe_valid_source_valid <= 1'd0;
        soclinux_bankmachine3_pipe_valid_source_payload_we <= 1'd0;
        soclinux_bankmachine3_pipe_valid_source_payload_addr <= 23'd0;
        soclinux_bankmachine3_row <= 13'd0;
        soclinux_bankmachine3_row_opened <= 1'd0;
        soclinux_bankmachine3_twtpcon_ready <= 1'd0;
        soclinux_bankmachine3_twtpcon_count <= 2'd0;
        soclinux_bankmachine3_trccon_ready <= 1'd0;
        soclinux_bankmachine3_trccon_count <= 1'd0;
        soclinux_bankmachine3_trascon_ready <= 1'd0;
        soclinux_bankmachine3_trascon_count <= 1'd0;
        soclinux_choose_cmd_grant <= 2'd0;
        soclinux_choose_req_grant <= 2'd0;
        soclinux_trrdcon_ready <= 1'd0;
        soclinux_trrdcon_count <= 1'd0;
        soclinux_tccdcon_ready <= 1'd0;
        soclinux_tccdcon_count <= 1'd0;
        soclinux_twtrcon_ready <= 1'd0;
        soclinux_twtrcon_count <= 3'd0;
        soclinux_time0 <= 5'd0;
        soclinux_time1 <= 4'd0;
        soclinux_count0 <= 1'd0;
        soclinux_aborted <= 1'd0;
        spisdcard_clk <= 1'd0;
        spisdcard_mosi <= 1'd0;
        spisdcard_cs_n <= 1'd0;
        soclinux_miso <= 8'd0;
        soclinux_control_storage <= 16'd0;
        soclinux_control_re <= 1'd0;
        soclinux_status_re <= 1'd0;
        soclinux_mosi_re <= 1'd0;
        soclinux_miso_re <= 1'd0;
        soclinux_cs_storage <= 17'd1;
        soclinux_cs_re <= 1'd0;
        soclinux_loopback_storage <= 1'd0;
        soclinux_loopback_re <= 1'd0;
        soclinux_count1 <= 3'd0;
        soclinux_clk_divider1 <= 16'd0;
        soclinux_mosi_data <= 8'd0;
        soclinux_mosi_sel <= 3'd0;
        soclinux_miso_data <= 8'd0;
        soclinux_storage1 <= 16'd60;
        soclinux_re1 <= 1'd0;
        builder_interface1_re <= 1'd0;
        builder_interface1_we <= 1'd0;
        builder_slave_sel_r <= 6'd0;
        builder_count <= 20'd1000000;
        builder_csr_bankarray_sel_r <= 1'd0;
        builder_rs232phytx_state <= 1'd0;
        builder_rs232phyrx_state <= 1'd0;
        builder_refresher_state <= 2'd0;
        builder_bankmachine0_state <= 3'd0;
        builder_bankmachine1_state <= 3'd0;
        builder_bankmachine2_state <= 3'd0;
        builder_bankmachine3_state <= 3'd0;
        builder_multiplexer_state <= 3'd0;
        builder_roundrobin0_grant <= 2'd0;
        builder_roundrobin1_grant <= 2'd0;
        builder_roundrobin2_grant <= 2'd0;
        builder_roundrobin3_grant <= 2'd0;
        builder_new_master_wdata_ready0 <= 1'd0;
        builder_new_master_wdata_ready1 <= 1'd0;
        builder_new_master_wdata_ready2 <= 1'd0;
        builder_new_master_rdata_valid0 <= 1'd0;
        builder_new_master_rdata_valid1 <= 1'd0;
        builder_new_master_rdata_valid2 <= 1'd0;
        builder_new_master_rdata_valid3 <= 1'd0;
        builder_new_master_rdata_valid4 <= 1'd0;
        builder_new_master_rdata_valid5 <= 1'd0;
        builder_new_master_rdata_valid6 <= 1'd0;
        builder_new_master_rdata_valid7 <= 1'd0;
        builder_new_master_rdata_valid8 <= 1'd0;
        builder_new_master_rdata_valid9 <= 1'd0;
        builder_new_master_rdata_valid10 <= 1'd0;
        builder_new_master_rdata_valid11 <= 1'd0;
        builder_litedramwishbone2native_state <= 2'd0;
        builder_spimaster_state <= 2'd0;
        builder_wishbone2csr_state <= 2'd0;
    end
    builder_multiregimpl0 <= serial_rx;
    builder_multiregimpl1 <= builder_multiregimpl0;
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Instance CC_USR_RSTN of CC_USR_RSTN Module.
//------------------------------------------------------------------------------
CC_USR_RSTN CC_USR_RSTN(
	// Outputs.
	.USR_RSTN (crg_rst_n)
);

//------------------------------------------------------------------------------
// Memory rom: 8615-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [31:0] rom[0:8614];
initial begin
	$readmemh("kolsch_rom.init", rom);
end
reg [31:0] rom_dat0;
always @(posedge sys_clk) begin
	rom_dat0 <= rom[soclinux_soclinux_adr];
end
assign soclinux_soclinux_dat_r = rom_dat0;


//------------------------------------------------------------------------------
// Memory sram: 1536-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] sram[0:1535];
initial begin
	$readmemh("kolsch_sram.init", sram);
end
reg [10:0] sram_adr0;
always @(posedge sys_clk) begin
	if (soclinux_ram_we[0])
		sram[soclinux_ram_adr][7:0] <= soclinux_ram_dat_w[7:0];
	if (soclinux_ram_we[1])
		sram[soclinux_ram_adr][15:8] <= soclinux_ram_dat_w[15:8];
	if (soclinux_ram_we[2])
		sram[soclinux_ram_adr][23:16] <= soclinux_ram_dat_w[23:16];
	if (soclinux_ram_we[3])
		sram[soclinux_ram_adr][31:24] <= soclinux_ram_dat_w[31:24];
	sram_adr0 <= soclinux_ram_adr;
end
assign soclinux_ram_dat_r = sram[sram_adr0];


//------------------------------------------------------------------------------
// Memory mem: 20-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [7:0] mem[0:19];
initial begin
	$readmemh("kolsch_mem.init", mem);
end
reg [4:0] mem_adr0;
always @(posedge sys_clk) begin
	mem_adr0 <= builder_csr_bankarray_adr;
end
assign builder_csr_bankarray_dat_r = mem[mem_adr0];


//------------------------------------------------------------------------------
// Memory storage: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage[0:15];
reg [9:0] storage_dat0;
reg [9:0] storage_dat1;
always @(posedge sys_clk) begin
	if (soclinux_uart_tx_fifo_wrport_we)
		storage[soclinux_uart_tx_fifo_wrport_adr] <= soclinux_uart_tx_fifo_wrport_dat_w;
	storage_dat0 <= storage[soclinux_uart_tx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (soclinux_uart_tx_fifo_rdport_re)
		storage_dat1 <= storage[soclinux_uart_tx_fifo_rdport_adr];
end
assign soclinux_uart_tx_fifo_wrport_dat_r = storage_dat0;
assign soclinux_uart_tx_fifo_rdport_dat_r = storage_dat1;


//------------------------------------------------------------------------------
// Memory storage_1: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_1[0:15];
reg [9:0] storage_1_dat0;
reg [9:0] storage_1_dat1;
always @(posedge sys_clk) begin
	if (soclinux_uart_rx_fifo_wrport_we)
		storage_1[soclinux_uart_rx_fifo_wrport_adr] <= soclinux_uart_rx_fifo_wrport_dat_w;
	storage_1_dat0 <= storage_1[soclinux_uart_rx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (soclinux_uart_rx_fifo_rdport_re)
		storage_1_dat1 <= storage_1[soclinux_uart_rx_fifo_rdport_adr];
end
assign soclinux_uart_rx_fifo_wrport_dat_r = storage_1_dat0;
assign soclinux_uart_rx_fifo_rdport_dat_r = storage_1_dat1;


//------------------------------------------------------------------------------
// Memory storage_2: 8-words x 26-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 26 
// Port 1 | Read: Async | Write: ---- | 
reg [25:0] storage_2[0:7];
reg [25:0] storage_2_dat0;
always @(posedge sys_clk) begin
	if (soclinux_bankmachine0_wrport_we)
		storage_2[soclinux_bankmachine0_wrport_adr] <= soclinux_bankmachine0_wrport_dat_w;
	storage_2_dat0 <= storage_2[soclinux_bankmachine0_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_bankmachine0_wrport_dat_r = storage_2_dat0;
assign soclinux_bankmachine0_rdport_dat_r = storage_2[soclinux_bankmachine0_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_3: 8-words x 26-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 26 
// Port 1 | Read: Async | Write: ---- | 
reg [25:0] storage_3[0:7];
reg [25:0] storage_3_dat0;
always @(posedge sys_clk) begin
	if (soclinux_bankmachine1_wrport_we)
		storage_3[soclinux_bankmachine1_wrport_adr] <= soclinux_bankmachine1_wrport_dat_w;
	storage_3_dat0 <= storage_3[soclinux_bankmachine1_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_bankmachine1_wrport_dat_r = storage_3_dat0;
assign soclinux_bankmachine1_rdport_dat_r = storage_3[soclinux_bankmachine1_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_4: 8-words x 26-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 26 
// Port 1 | Read: Async | Write: ---- | 
reg [25:0] storage_4[0:7];
reg [25:0] storage_4_dat0;
always @(posedge sys_clk) begin
	if (soclinux_bankmachine2_wrport_we)
		storage_4[soclinux_bankmachine2_wrport_adr] <= soclinux_bankmachine2_wrport_dat_w;
	storage_4_dat0 <= storage_4[soclinux_bankmachine2_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_bankmachine2_wrport_dat_r = storage_4_dat0;
assign soclinux_bankmachine2_rdport_dat_r = storage_4[soclinux_bankmachine2_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_5: 8-words x 26-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 26 
// Port 1 | Read: Async | Write: ---- | 
reg [25:0] storage_5[0:7];
reg [25:0] storage_5_dat0;
always @(posedge sys_clk) begin
	if (soclinux_bankmachine3_wrport_we)
		storage_5[soclinux_bankmachine3_wrport_adr] <= soclinux_bankmachine3_wrport_dat_w;
	storage_5_dat0 <= storage_5[soclinux_bankmachine3_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_bankmachine3_wrport_dat_r = storage_5_dat0;
assign soclinux_bankmachine3_rdport_dat_r = storage_5[soclinux_bankmachine3_rdport_adr];


//------------------------------------------------------------------------------
// Instance CC_PLL of CC_PLL Module.
//------------------------------------------------------------------------------
CC_PLL #(
	// Parameters.
	.CI_FILTER_CONST (2'd2),
	.CLK180_DOUB     (1'd0),
	.CLK270_DOUB     (1'd0),
	.CP_FILTER_CONST (3'd4),
	.LOCK_REQ        (1'd1),
	.LOW_JITTER      (1'd1),
	.OUT_CLK         ("24.0"),
	.PERF_MD         ("ECONOMY"),
	.REF_CLK         ("48.0")
) CC_PLL (
	// Inputs.
	.CLK_FEEDBACK        (1'd0),
	.CLK_REF             (crg_clkin),
	.USR_CLK_REF         (builder_gatematepll2),
	.USR_LOCKED_STDY_RST (1'd0),

	// Outputs.
	.CLK0                (crg_clkout0),
	.CLK180              (builder_gatematepll0),
	.CLK270              (builder_gatematepll1),
	.CLK90               (crg_clkout1),
	.CLK_REF_OUT         (builder_gatematepll3),
	.USR_PLL_LOCKED      (builder_gatematepll_locked_s1),
	.USR_PLL_LOCKED_STDY (builder_gatematepll4)
);

//------------------------------------------------------------------------------
// Instance VexRiscvLitexSmpCluster_Cc1_Iw32Is4096Iy1_Dw32Ds4096Dy1_ITs4DTs4_Ldw16_Ood_Hb1 of VexRiscvLitexSmpCluster_Cc1_Iw32Is4096Iy1_Dw32Ds4096Dy1_ITs4DTs4_Ldw16_Ood_Hb1 Module.
//------------------------------------------------------------------------------
VexRiscvLitexSmpCluster_Cc1_Iw32Is4096Iy1_Dw32Ds4096Dy1_ITs4DTs4_Ldw16_Ood_Hb1 VexRiscvLitexSmpCluster_Cc1_Iw32Is4096Iy1_Dw32Ds4096Dy1_ITs4DTs4_Ldw16_Ood_Hb1(
	// Inputs.
	.clintWishbone_ADR               (soclinux_clintbus_adr),
	.clintWishbone_CYC               (soclinux_clintbus_cyc),
	.clintWishbone_DAT_MOSI          (soclinux_clintbus_dat_w),
	.clintWishbone_STB               (soclinux_clintbus_stb),
	.clintWishbone_WE                (soclinux_clintbus_we),
	.dBridge_dram_cmd_ready          (soclinux_dbus_cmd_ready),
	.dBridge_dram_rdata_payload_data (soclinux_dbus_rdata_payload_data),
	.dBridge_dram_rdata_valid        (soclinux_dbus_rdata_valid),
	.dBridge_dram_wdata_ready        (soclinux_dbus_wdata_ready),
	.debugCd_external_clk            (sys_clk),
	.debugCd_external_reset          ((sys_rst | soclinux_reset)),
	.debugPort_capture               (soclinux_jtag_capture),
	.debugPort_enable                (soclinux_jtag_enable),
	.debugPort_reset                 (soclinux_jtag_reset),
	.debugPort_shift                 (soclinux_jtag_shift),
	.debugPort_tdi                   (soclinux_jtag_tdi),
	.debugPort_update                (soclinux_jtag_update),
	.iBridge_dram_cmd_ready          (soclinux_ibus_cmd_ready),
	.iBridge_dram_rdata_payload_data (soclinux_ibus_rdata_payload_data),
	.iBridge_dram_rdata_valid        (soclinux_ibus_rdata_valid),
	.iBridge_dram_wdata_ready        (soclinux_ibus_wdata_ready),
	.interrupts                      (soclinux_interrupt),
	.jtag_clk                        (soclinux_jtag_clk),
	.peripheral_ACK                  (soclinux_pbus_ack),
	.peripheral_DAT_MISO             (soclinux_pbus_dat_r),
	.peripheral_ERR                  (soclinux_pbus_err),
	.plicWishbone_ADR                (soclinux_plicbus_adr),
	.plicWishbone_CYC                (soclinux_plicbus_cyc),
	.plicWishbone_DAT_MOSI           (soclinux_plicbus_dat_w),
	.plicWishbone_STB                (soclinux_plicbus_stb),
	.plicWishbone_WE                 (soclinux_plicbus_we),

	// Outputs.
	.clintWishbone_ACK               (soclinux_clintbus_ack),
	.clintWishbone_DAT_MISO          (soclinux_clintbus_dat_r),
	.dBridge_dram_cmd_payload_addr   (soclinux_dbus_cmd_payload_addr),
	.dBridge_dram_cmd_payload_we     (soclinux_dbus_cmd_payload_we),
	.dBridge_dram_cmd_valid          (soclinux_dbus_cmd_valid),
	.dBridge_dram_rdata_ready        (soclinux_dbus_rdata_ready),
	.dBridge_dram_wdata_payload_data (soclinux_dbus_wdata_payload_data),
	.dBridge_dram_wdata_payload_we   (soclinux_dbus_wdata_payload_we),
	.dBridge_dram_wdata_valid        (soclinux_dbus_wdata_valid),
	.debugPort_tdo                   (soclinux_jtag_tdo),
	.iBridge_dram_cmd_payload_addr   (soclinux_ibus_cmd_payload_addr),
	.iBridge_dram_cmd_payload_we     (soclinux_ibus_cmd_payload_we),
	.iBridge_dram_cmd_valid          (soclinux_ibus_cmd_valid),
	.iBridge_dram_rdata_ready        (soclinux_ibus_rdata_ready),
	.iBridge_dram_wdata_payload_data (soclinux_ibus_wdata_payload_data),
	.iBridge_dram_wdata_payload_we   (soclinux_ibus_wdata_payload_we),
	.iBridge_dram_wdata_valid        (soclinux_ibus_wdata_valid),
	.peripheral_ADR                  (soclinux_pbus_adr),
	.peripheral_BTE                  (soclinux_pbus_bte),
	.peripheral_CTI                  (soclinux_pbus_cti),
	.peripheral_CYC                  (soclinux_pbus_cyc),
	.peripheral_DAT_MOSI             (soclinux_pbus_dat_w),
	.peripheral_SEL                  (soclinux_pbus_sel),
	.peripheral_STB                  (soclinux_pbus_stb),
	.peripheral_WE                   (soclinux_pbus_we),
	.plicWishbone_ACK                (soclinux_plicbus_ack),
	.plicWishbone_DAT_MISO           (soclinux_plicbus_dat_r)
);

//------------------------------------------------------------------------------
// Instance CC_DFF of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd1)
) CC_DFF (
	// Inputs.
	.CLK (sys_clk),
	.D   (1'd0),
	.EN  (1'd1),
	.SR  ((~crg_locked)),

	// Outputs.
	.Q   (builder_rst10)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_1 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd1)
) CC_DFF_1 (
	// Inputs.
	.CLK (sys_clk),
	.D   (builder_rst10),
	.EN  (1'd1),
	.SR  ((~crg_locked)),

	// Outputs.
	.Q   (sys_rst)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_2 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd1)
) CC_DFF_2 (
	// Inputs.
	.CLK (sys_ps_clk),
	.D   (1'd0),
	.EN  (1'd1),
	.SR  ((~crg_locked)),

	// Outputs.
	.Q   (builder_rst11)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_3 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd1)
) CC_DFF_3 (
	// Inputs.
	.CLK (sys_ps_clk),
	.D   (builder_rst11),
	.EN  (1'd1),
	.SR  ((~crg_locked)),

	// Outputs.
	.Q   (sys_ps_rst)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_4 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_4 (
	// Inputs.
	.CLK (sys_ps_clk),
	.D   (1'd0),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_align_q)
);

//------------------------------------------------------------------------------
// Instance CC_ODDR of CC_ODDR Module.
//------------------------------------------------------------------------------
CC_ODDR #(
	// Parameters.
	.CLK_INV (1'd0)
) CC_ODDR (
	// Inputs.
	.CLK (sys_ps_clk),
	.D0  (1'd1),
	.D1  (builder_align_q),
	.DDR (sys_ps_clk),

	// Outputs.
	.Q   (sdram_clock)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_5 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_5 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_cs_n),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_cs_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_6 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_6 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_address[0]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_a[0])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_7 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_7 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_address[1]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_a[1])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_8 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_8 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_address[2]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_a[2])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_9 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_9 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_address[3]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_a[3])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_10 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_10 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_address[4]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_a[4])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_11 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_11 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_address[5]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_a[5])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_12 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_12 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_address[6]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_a[6])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_13 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_13 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_address[7]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_a[7])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_14 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_14 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_address[8]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_a[8])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_15 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_15 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_address[9]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_a[9])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_16 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_16 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_address[10]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_a[10])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_17 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_17 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_address[11]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_a[11])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_18 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_18 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_address[12]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_a[12])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_19 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_19 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_bank[0]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_ba[0])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_20 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_20 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_bank[1]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_ba[1])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_21 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_21 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_ras_n),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_ras_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_22 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_22 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_cas_n),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_cas_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_23 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_23 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_we_n),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_we_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_24 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_24 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_cke),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_cke)
);

//------------------------------------------------------------------------------
// Instance CC_IOBUF of CC_IOBUF Module.
//------------------------------------------------------------------------------
CC_IOBUF #(
	// Parameters.
	.FF_IBF (1'd1),
	.FF_OBF (1'd1)
) CC_IOBUF (
	// Inputs.
	.A  (builder_colognechipsdrtristateimpl0__o),
	.T  (builder_colognechipsdrtristateimpl0_oe_n),

	// Outputs.
	.Y  (builder_colognechipsdrtristateimpl0__i),

	// InOuts.
	.IO (sdram_dq[0])
);

//------------------------------------------------------------------------------
// Instance CC_IOBUF_1 of CC_IOBUF Module.
//------------------------------------------------------------------------------
CC_IOBUF #(
	// Parameters.
	.FF_IBF (1'd1),
	.FF_OBF (1'd1)
) CC_IOBUF_1 (
	// Inputs.
	.A  (builder_colognechipsdrtristateimpl1__o),
	.T  (builder_colognechipsdrtristateimpl1_oe_n),

	// Outputs.
	.Y  (builder_colognechipsdrtristateimpl1__i),

	// InOuts.
	.IO (sdram_dq[1])
);

//------------------------------------------------------------------------------
// Instance CC_IOBUF_2 of CC_IOBUF Module.
//------------------------------------------------------------------------------
CC_IOBUF #(
	// Parameters.
	.FF_IBF (1'd1),
	.FF_OBF (1'd1)
) CC_IOBUF_2 (
	// Inputs.
	.A  (builder_colognechipsdrtristateimpl2__o),
	.T  (builder_colognechipsdrtristateimpl2_oe_n),

	// Outputs.
	.Y  (builder_colognechipsdrtristateimpl2__i),

	// InOuts.
	.IO (sdram_dq[2])
);

//------------------------------------------------------------------------------
// Instance CC_IOBUF_3 of CC_IOBUF Module.
//------------------------------------------------------------------------------
CC_IOBUF #(
	// Parameters.
	.FF_IBF (1'd1),
	.FF_OBF (1'd1)
) CC_IOBUF_3 (
	// Inputs.
	.A  (builder_colognechipsdrtristateimpl3__o),
	.T  (builder_colognechipsdrtristateimpl3_oe_n),

	// Outputs.
	.Y  (builder_colognechipsdrtristateimpl3__i),

	// InOuts.
	.IO (sdram_dq[3])
);

//------------------------------------------------------------------------------
// Instance CC_IOBUF_4 of CC_IOBUF Module.
//------------------------------------------------------------------------------
CC_IOBUF #(
	// Parameters.
	.FF_IBF (1'd1),
	.FF_OBF (1'd1)
) CC_IOBUF_4 (
	// Inputs.
	.A  (builder_colognechipsdrtristateimpl4__o),
	.T  (builder_colognechipsdrtristateimpl4_oe_n),

	// Outputs.
	.Y  (builder_colognechipsdrtristateimpl4__i),

	// InOuts.
	.IO (sdram_dq[4])
);

//------------------------------------------------------------------------------
// Instance CC_IOBUF_5 of CC_IOBUF Module.
//------------------------------------------------------------------------------
CC_IOBUF #(
	// Parameters.
	.FF_IBF (1'd1),
	.FF_OBF (1'd1)
) CC_IOBUF_5 (
	// Inputs.
	.A  (builder_colognechipsdrtristateimpl5__o),
	.T  (builder_colognechipsdrtristateimpl5_oe_n),

	// Outputs.
	.Y  (builder_colognechipsdrtristateimpl5__i),

	// InOuts.
	.IO (sdram_dq[5])
);

//------------------------------------------------------------------------------
// Instance CC_IOBUF_6 of CC_IOBUF Module.
//------------------------------------------------------------------------------
CC_IOBUF #(
	// Parameters.
	.FF_IBF (1'd1),
	.FF_OBF (1'd1)
) CC_IOBUF_6 (
	// Inputs.
	.A  (builder_colognechipsdrtristateimpl6__o),
	.T  (builder_colognechipsdrtristateimpl6_oe_n),

	// Outputs.
	.Y  (builder_colognechipsdrtristateimpl6__i),

	// InOuts.
	.IO (sdram_dq[6])
);

//------------------------------------------------------------------------------
// Instance CC_IOBUF_7 of CC_IOBUF Module.
//------------------------------------------------------------------------------
CC_IOBUF #(
	// Parameters.
	.FF_IBF (1'd1),
	.FF_OBF (1'd1)
) CC_IOBUF_7 (
	// Inputs.
	.A  (builder_colognechipsdrtristateimpl7__o),
	.T  (builder_colognechipsdrtristateimpl7_oe_n),

	// Outputs.
	.Y  (builder_colognechipsdrtristateimpl7__i),

	// InOuts.
	.IO (sdram_dq[7])
);

//------------------------------------------------------------------------------
// Instance CC_IOBUF_8 of CC_IOBUF Module.
//------------------------------------------------------------------------------
CC_IOBUF #(
	// Parameters.
	.FF_IBF (1'd1),
	.FF_OBF (1'd1)
) CC_IOBUF_8 (
	// Inputs.
	.A  (builder_colognechipsdrtristateimpl8__o),
	.T  (builder_colognechipsdrtristateimpl8_oe_n),

	// Outputs.
	.Y  (builder_colognechipsdrtristateimpl8__i),

	// InOuts.
	.IO (sdram_dq[8])
);

//------------------------------------------------------------------------------
// Instance CC_IOBUF_9 of CC_IOBUF Module.
//------------------------------------------------------------------------------
CC_IOBUF #(
	// Parameters.
	.FF_IBF (1'd1),
	.FF_OBF (1'd1)
) CC_IOBUF_9 (
	// Inputs.
	.A  (builder_colognechipsdrtristateimpl9__o),
	.T  (builder_colognechipsdrtristateimpl9_oe_n),

	// Outputs.
	.Y  (builder_colognechipsdrtristateimpl9__i),

	// InOuts.
	.IO (sdram_dq[9])
);

//------------------------------------------------------------------------------
// Instance CC_IOBUF_10 of CC_IOBUF Module.
//------------------------------------------------------------------------------
CC_IOBUF #(
	// Parameters.
	.FF_IBF (1'd1),
	.FF_OBF (1'd1)
) CC_IOBUF_10 (
	// Inputs.
	.A  (builder_colognechipsdrtristateimpl10__o),
	.T  (builder_colognechipsdrtristateimpl10_oe_n),

	// Outputs.
	.Y  (builder_colognechipsdrtristateimpl10__i),

	// InOuts.
	.IO (sdram_dq[10])
);

//------------------------------------------------------------------------------
// Instance CC_IOBUF_11 of CC_IOBUF Module.
//------------------------------------------------------------------------------
CC_IOBUF #(
	// Parameters.
	.FF_IBF (1'd1),
	.FF_OBF (1'd1)
) CC_IOBUF_11 (
	// Inputs.
	.A  (builder_colognechipsdrtristateimpl11__o),
	.T  (builder_colognechipsdrtristateimpl11_oe_n),

	// Outputs.
	.Y  (builder_colognechipsdrtristateimpl11__i),

	// InOuts.
	.IO (sdram_dq[11])
);

//------------------------------------------------------------------------------
// Instance CC_IOBUF_12 of CC_IOBUF Module.
//------------------------------------------------------------------------------
CC_IOBUF #(
	// Parameters.
	.FF_IBF (1'd1),
	.FF_OBF (1'd1)
) CC_IOBUF_12 (
	// Inputs.
	.A  (builder_colognechipsdrtristateimpl12__o),
	.T  (builder_colognechipsdrtristateimpl12_oe_n),

	// Outputs.
	.Y  (builder_colognechipsdrtristateimpl12__i),

	// InOuts.
	.IO (sdram_dq[12])
);

//------------------------------------------------------------------------------
// Instance CC_IOBUF_13 of CC_IOBUF Module.
//------------------------------------------------------------------------------
CC_IOBUF #(
	// Parameters.
	.FF_IBF (1'd1),
	.FF_OBF (1'd1)
) CC_IOBUF_13 (
	// Inputs.
	.A  (builder_colognechipsdrtristateimpl13__o),
	.T  (builder_colognechipsdrtristateimpl13_oe_n),

	// Outputs.
	.Y  (builder_colognechipsdrtristateimpl13__i),

	// InOuts.
	.IO (sdram_dq[13])
);

//------------------------------------------------------------------------------
// Instance CC_IOBUF_14 of CC_IOBUF Module.
//------------------------------------------------------------------------------
CC_IOBUF #(
	// Parameters.
	.FF_IBF (1'd1),
	.FF_OBF (1'd1)
) CC_IOBUF_14 (
	// Inputs.
	.A  (builder_colognechipsdrtristateimpl14__o),
	.T  (builder_colognechipsdrtristateimpl14_oe_n),

	// Outputs.
	.Y  (builder_colognechipsdrtristateimpl14__i),

	// InOuts.
	.IO (sdram_dq[14])
);

//------------------------------------------------------------------------------
// Instance CC_IOBUF_15 of CC_IOBUF Module.
//------------------------------------------------------------------------------
CC_IOBUF #(
	// Parameters.
	.FF_IBF (1'd1),
	.FF_OBF (1'd1)
) CC_IOBUF_15 (
	// Inputs.
	.A  (builder_colognechipsdrtristateimpl15__o),
	.T  (builder_colognechipsdrtristateimpl15_oe_n),

	// Outputs.
	.Y  (builder_colognechipsdrtristateimpl15__i),

	// InOuts.
	.IO (sdram_dq[15])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_25 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_25 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((sdrphy_dfi_p0_wrdata_en & sdrphy_dfi_p0_wrdata_mask[0])),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_dm[0])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_26 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_26 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((sdrphy_dfi_p0_wrdata_en & sdrphy_dfi_p0_wrdata_mask[1])),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdram_dm[1])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_27 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_27 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_wrdata[0]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl0__o)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_28 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_28 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((~sdrphy_dfi_p0_wrdata_en)),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl0_oe_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_29 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_29 (
	// Inputs.
	.CLK (sys_clk),
	.D   (builder_colognechipsdrtristateimpl0__i),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdrphy_dfi_p0_rddata[0])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_30 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_30 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_wrdata[1]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl1__o)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_31 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_31 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((~sdrphy_dfi_p0_wrdata_en)),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl1_oe_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_32 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_32 (
	// Inputs.
	.CLK (sys_clk),
	.D   (builder_colognechipsdrtristateimpl1__i),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdrphy_dfi_p0_rddata[1])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_33 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_33 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_wrdata[2]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl2__o)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_34 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_34 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((~sdrphy_dfi_p0_wrdata_en)),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl2_oe_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_35 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_35 (
	// Inputs.
	.CLK (sys_clk),
	.D   (builder_colognechipsdrtristateimpl2__i),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdrphy_dfi_p0_rddata[2])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_36 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_36 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_wrdata[3]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl3__o)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_37 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_37 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((~sdrphy_dfi_p0_wrdata_en)),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl3_oe_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_38 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_38 (
	// Inputs.
	.CLK (sys_clk),
	.D   (builder_colognechipsdrtristateimpl3__i),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdrphy_dfi_p0_rddata[3])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_39 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_39 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_wrdata[4]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl4__o)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_40 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_40 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((~sdrphy_dfi_p0_wrdata_en)),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl4_oe_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_41 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_41 (
	// Inputs.
	.CLK (sys_clk),
	.D   (builder_colognechipsdrtristateimpl4__i),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdrphy_dfi_p0_rddata[4])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_42 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_42 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_wrdata[5]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl5__o)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_43 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_43 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((~sdrphy_dfi_p0_wrdata_en)),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl5_oe_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_44 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_44 (
	// Inputs.
	.CLK (sys_clk),
	.D   (builder_colognechipsdrtristateimpl5__i),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdrphy_dfi_p0_rddata[5])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_45 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_45 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_wrdata[6]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl6__o)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_46 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_46 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((~sdrphy_dfi_p0_wrdata_en)),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl6_oe_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_47 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_47 (
	// Inputs.
	.CLK (sys_clk),
	.D   (builder_colognechipsdrtristateimpl6__i),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdrphy_dfi_p0_rddata[6])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_48 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_48 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_wrdata[7]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl7__o)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_49 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_49 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((~sdrphy_dfi_p0_wrdata_en)),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl7_oe_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_50 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_50 (
	// Inputs.
	.CLK (sys_clk),
	.D   (builder_colognechipsdrtristateimpl7__i),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdrphy_dfi_p0_rddata[7])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_51 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_51 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_wrdata[8]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl8__o)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_52 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_52 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((~sdrphy_dfi_p0_wrdata_en)),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl8_oe_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_53 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_53 (
	// Inputs.
	.CLK (sys_clk),
	.D   (builder_colognechipsdrtristateimpl8__i),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdrphy_dfi_p0_rddata[8])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_54 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_54 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_wrdata[9]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl9__o)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_55 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_55 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((~sdrphy_dfi_p0_wrdata_en)),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl9_oe_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_56 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_56 (
	// Inputs.
	.CLK (sys_clk),
	.D   (builder_colognechipsdrtristateimpl9__i),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdrphy_dfi_p0_rddata[9])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_57 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_57 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_wrdata[10]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl10__o)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_58 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_58 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((~sdrphy_dfi_p0_wrdata_en)),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl10_oe_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_59 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_59 (
	// Inputs.
	.CLK (sys_clk),
	.D   (builder_colognechipsdrtristateimpl10__i),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdrphy_dfi_p0_rddata[10])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_60 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_60 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_wrdata[11]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl11__o)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_61 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_61 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((~sdrphy_dfi_p0_wrdata_en)),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl11_oe_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_62 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_62 (
	// Inputs.
	.CLK (sys_clk),
	.D   (builder_colognechipsdrtristateimpl11__i),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdrphy_dfi_p0_rddata[11])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_63 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_63 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_wrdata[12]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl12__o)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_64 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_64 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((~sdrphy_dfi_p0_wrdata_en)),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl12_oe_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_65 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_65 (
	// Inputs.
	.CLK (sys_clk),
	.D   (builder_colognechipsdrtristateimpl12__i),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdrphy_dfi_p0_rddata[12])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_66 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_66 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_wrdata[13]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl13__o)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_67 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_67 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((~sdrphy_dfi_p0_wrdata_en)),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl13_oe_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_68 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_68 (
	// Inputs.
	.CLK (sys_clk),
	.D   (builder_colognechipsdrtristateimpl13__i),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdrphy_dfi_p0_rddata[13])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_69 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_69 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_wrdata[14]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl14__o)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_70 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_70 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((~sdrphy_dfi_p0_wrdata_en)),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl14_oe_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_71 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_71 (
	// Inputs.
	.CLK (sys_clk),
	.D   (builder_colognechipsdrtristateimpl14__i),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdrphy_dfi_p0_rddata[14])
);

//------------------------------------------------------------------------------
// Instance CC_DFF_72 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_72 (
	// Inputs.
	.CLK (sys_clk),
	.D   (sdrphy_dfi_p0_wrdata[15]),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl15__o)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_73 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_73 (
	// Inputs.
	.CLK (sys_clk),
	.D   ((~sdrphy_dfi_p0_wrdata_en)),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (builder_colognechipsdrtristateimpl15_oe_n)
);

//------------------------------------------------------------------------------
// Instance CC_DFF_74 of CC_DFF Module.
//------------------------------------------------------------------------------
CC_DFF #(
	// Parameters.
	.CLK_INV (1'd0),
	.EN_INV  (1'd0),
	.SR_INV  (1'd0),
	.SR_VAL  (1'd0)
) CC_DFF_74 (
	// Inputs.
	.CLK (sys_clk),
	.D   (builder_colognechipsdrtristateimpl15__i),
	.EN  (1'd1),
	.SR  (1'd0),

	// Outputs.
	.Q   (sdrphy_dfi_p0_rddata[15])
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2025-06-27 09:41:12.
//------------------------------------------------------------------------------
